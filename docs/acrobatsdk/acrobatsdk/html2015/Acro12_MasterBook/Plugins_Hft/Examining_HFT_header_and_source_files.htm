<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Examining HFT header and source files</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Hft.fm" />
 <link rel="stylesheet" href="Plugins_Hft.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.16.1.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Hft/Creating_new_Host_Function_Tables.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Hft/Importing_an_existing_HFT.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Working with Host Function Tables > Exporting host function tables" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="XREF_55636_Examining_HFT"></a>Examining HFT header and source files</h3>
  <p class="BodyLevel1">To make it clear how to create HFTs, this section shows a typical header and source file that is used to create an HFT. All concepts that are discussed up to this point are shown.</p>
  <h4><a name="TOC_Examining_an_HFT_header"></a>Examining an HFT header file</h4>
  <p class="BodyLevel1">The following code example shows the syntax of a header file named myhft.h that is used to define HFT constructs. </p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Examining an HFT header file</p>
</li>
  </ul>
  <p class="FM_CodeReference">#include &quot;corcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;avcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;coscalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;pdcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;ascalls.h&quot;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">enum</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">DUMMYBLANKSELECTOR,</p>
  <p class="FM_CodeReference">BeepOnceSEL,</p>
  <p class="FM_CodeReference">BeepTwiceSEL,</p>
  <p class="FM_CodeReference">BeepNTimesSEL,</p>
  <p class="FM_CodeReference">NUMSELECTORSPlusOne</p>
  <p class="FM_CodeReference">};</p>
  <p class="FM_CodeReference">extern HFT gMyHFT;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">#define NUMSELECTORS (NUMSELECTORSPlusOne - 1)</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">typedef ACCBPROTO1 void (ACCBPROTO2 *BeepOnceSELPROTO)(void);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">#define BeepOnce (*((BeepOnceSELPROTO)(gMyHFT[BeepOnceSEL])))</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">typedef ACCBPROTO1 void (ACCBPROTO2 *BeepTwiceSELPROTO)(void);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">#define BeepTwice (*((BeepTwiceSELPROTO)(gMyHFT[BeepTwiceSEL])))</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">typedef ACCBPROTO1 void (ACCBPROTO2 *BeepNTimesSELPROTO)(ASInt32 numtimes);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">#define BeepNTimes (*((BeepNTimesSELPROTO)(gMyHFT[BeepNTimesSEL])))</p>
  <p class="FM_CodeReference">/* End of MyHFT.h */</p>
  <h4><a name="TOC_Examining_an_HFT_source"></a>Examining an HFT source file</h4>
  <p class="BodyLevel1">The following code example shows the syntax of a source file used to create an HFT. Notice that the methods (<span class="FM_Courier">BeepOnceImplementation</span>, <span class="FM_Courier">BeepTwiceImplementation</span>, and <span class="FM_Courier">BeepNTimesImplementation</span>) that the HFT will make available to other plug-ins are defined. Also notice that the <span class="FM_Courier">PluginExportHFTs</span>&#160;method is defined. For information about this method, see <a href="../Plugins_Pimech/Importing_HFTs_and_registering_for_notifications.htm#XREF_19533_8_3_3_Pre">Importing HFTs and registering for notifications</a>.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Examining an HFT source file</p>
</li>
  </ul>
  <p class="FM_CodeReference">#include &quot;corcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;avcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;coscalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;pdcalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;ascalls.h&quot;</p>
  <p class="FM_CodeReference">#include &quot;myhft.h&quot;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Declare global variables</p>
  <p class="FM_CodeReference">HFTServer gMyHFTServer = NULL;</p>
  <p class="FM_CodeReference">HFT gMyHFT = NULL;</p>
  <p class="FM_CodeComment">/*</p>
  <p class="FM_CodeComment">** The implementation for the BeepOnce() function. Note it</p>
  <p class="FM_CodeComment">** has a different name than the #define for the function</p>
  <p class="FM_CodeComment">** in MyHFT.h</p>
  <p class="FM_CodeComment">*/</p>
  <p class="FM_CodeReference"><span class="FM_Bold">ACCB1 void ACCB2 BeepOnceImplementation ()</span>&#160;</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">AVSysBeep (0);</p>
  <p class="FM_CodeReference">AVAlertNote (&quot;In BeepOnceImplementation function.&quot;);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeComment">/* The implementation for the BeepTwice() function. Note it has a</p>
  <p class="FM_CodeComment">** different name than the #define for the function in MyHFT.h</p>
  <p class="FM_CodeComment">*/</p>
  <p class="FM_CodeReference"><span class="FM_Bold">ACCB1 void ACCB2 BeepTwiceImplementation()</span>&#160;</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">AVSysBeep (0);</p>
  <p class="FM_CodeReference">AVSysBeep (0);</p>
  <p class="FM_CodeReference">AVAlertNote (&quot;In BeepTwiceImplementation function.&quot;);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeComment">/* The implementation for the BeepNTimes() function. Note it has a</p>
  <p class="FM_CodeComment">** different name than the #define for the function in MyHFT.h</p>
  <p class="FM_CodeComment">*/</p>
  <p class="FM_CodeReference"><span class="FM_Bold">ACCB1 void ACCB2 BeepNTimesImplementation (ASInt32 numtimes)</span>&#160;</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASInt32 i;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i=0; i &lt; numtimes; i++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVSysBeep (0);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;In BeepNTimesImplementation function.&quot;);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeComment">/*</p>
  <p class="FM_CodeComment">** Create a new HFT of NUMSELECTORS entries</p>
  <p class="FM_CodeComment">** Then put the methods into the table via HFTReplaceEntry</p>
  <p class="FM_CodeComment">*/</p>
  <p class="FM_CodeReference"><span class="FM_Bold">ACCB1 HFT ACCB2 ProvideMyHFT(HFTServer server, ASUns32 version,void *rock)</span>&#160;</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">ACCB1 HFT ACCB2 ProvideMyHFT(HFTServer server, ASUns32 version,void *rock)</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Ensure version is 1</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (version != 1)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return NULL;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DURING</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a new HFT</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>gMyHFT = HFTNew(gMyHFTServer, NUMSELECTORS);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>/*</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>** Replace the entries in the HFT</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>** with the methods that you want to make available.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>*/</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>HFTReplaceEntry (gMyHFT,<br />BeepOnceSEL,ASCallbackCreateReplacement(BeepOnceSEL,&amp;BeepOnce<br />Implementation), 0);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>HFTReplaceEntry (gMyHFT,<br />BeepTwiceSEL,ASCallbackCreateReplacement(BeepTwiceSEL,&amp;BeepTwice<br />Implementation), 0);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>HFTReplaceEntry (gMyHFT,<br />BeepNTimesSEL,ASCallbackCreateReplacement(BeepNTimesSEL,&amp;BeepNTimes<br />Implementation), 0);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>HANDLER</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>END_HANDLER</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return gMyHFT;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeComment">/*</p>
  <p class="FM_CodeComment">** Called by viewer to set up for exporting an HFT. This method</p>
  <p class="FM_CodeComment">** creates a new HFT server and provides a callback that</p>
  <p class="FM_CodeComment">** provides the HFT.</p>
  <p class="FM_CodeComment">*/</p>
  <p class="FM_CodeReference"><span class="FM_Bold">ACCB1 ASBool ACCB2 PluginExportHFTs(void)</span>&#160;</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">gMyHFTServer = NULL;</p>
  <p class="FM_CodeReference">DURING</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create an HFT callback function</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>HFTServerProvideHFTProc provideMyHFTCallback =</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASCallbackCreateProto(HFTServerProvideHFTProc, &amp;ProvideMyHFT);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create an HFT server</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>gMyHFTServer = HFTServerNew(&quot;MyHFT&quot;, provideMyHFTCallback,NULL, NULL);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference">HANDLER</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p class="FM_CodeReference">END_HANDLER</p>
  <p class="FM_CodeReference">return true;</p>
  <p class="FM_CodeReference">}</p>
  </div>
</body>
</html>