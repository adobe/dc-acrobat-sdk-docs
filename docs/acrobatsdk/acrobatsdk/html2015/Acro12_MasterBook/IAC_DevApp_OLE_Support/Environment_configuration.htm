<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Environment configuration</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\InterApplication_Communication\IACOverview\IAC_DevApp_OLE_Support.fm" />
 <link rel="stylesheet" href="IAC_DevApp_OLE_Support.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "6.1.2.2.0_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/IAC_DevApp_OLE_Support/Development_environment_considerations.htm">
 <meta name="brsnext" value="Acro12_MasterBook/IAC_DevApp_OLE_Support/Using_the_Acrobat_OLE_interfaces.htm">
 <meta name="topic-breadcrumbs" content="Acrobat Interapplication Communication > Developing Applications Using Interapplication Communication > Using OLE > Development environment considerations" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="IX_configuration"></a>Environment configuration</h3>
  <p class="BodyLevel1"><a name="IX_Acrobat_type_library"></a><a name="IX_type_library_file"></a>The only requirement for using the OLE objects made available by <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;is to have the product installed on your system and the appropriate type library file included in the project references for your project. The <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> type library file is named Acrobat.tlb. This file is included in the InterAppCommunicationSupport\Headers folder in the SDK. Once you have the type library file included in your project, you can use the object browser to browse the OLE objects. </p>
  <p class="BodyLevel1">It is not sufficient to install just an ActiveX control or DLL to enable OLE automation. You must have the full <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> product installed.</p>
  <p class="BodyLevel1">If you are a Visual Basic progr<span style="letter-spacing : 0.04em; ">ammer</span>, it is helpful to include the iac.bas module in your project (included in the headers folder)<span style="letter-spacing : 0.04em; ">. This module defines the constant variables.</span></p>
  <h3><a name="TOC_Necessary_C_knowledge"></a><a name="IX_C"></a>Necessary C knowledge</h3>
  <p class="BodyLevel1">This guide and the <a href="../IAC_API_OLE_Objects/IAC_API_OLE_Objects.htm#XREF_90885_Interapplication"><span class="FM_HyperText">Interapplication Communication API Reference</span></a>&#160;describe the available objects and methods. These documents, as well as the API, were designed with C programming in mind and programming with the API requires some familiarity with C concepts.</p>
  <p class="BodyLevel1">Although you do not need the header files provided in the SDK, you can use them to find the values of various constants, such as <span class="FM_Courier">AV_DOC_VIEW</span>, that are referenced in the documentation. The file iac.h contains most of these values.</p>
  <p class="BodyLevel1"><span style="letter-spacing : 0.04em; ">Some of the methods, such as </span><span class="FM_Courier">OpenInWindowEx</span>,<span style="letter-spacing : 0.04em; ">&#160;can be initially confusing when </span>used<span style="letter-spacing : 0.04em; ">&#160;in Visual Basic. </span><span class="FM_Courier">OpenInWindowEx</span>&#160;<span style="letter-spacing : 0.04em; ">takes a </span><span class="FM_Courier">long</span><span style="letter-spacing : 0.04em; "> for the</span>&#160;<span class="FM_Courier">openflags</span><span style="letter-spacing : 0.04em; ">&#160;parameter. The options for this parameter, as provided in the </span><a href="../IAC_API_OLE_Objects/IAC_API_OLE_Objects.htm#XREF_90885_Interapplication"><span class="FM_HyperText">Interapplication Communication API Reference</span></a><span style="letter-spacing : 0.04em; ">, are:</span></p>
  <p class="FM_Indent1"><span class="FM_Courier">AV_EXTERNAL_VIEW</span>&#160;— Open the document with the toolbar visible. </p>
  <p class="FM_Indent1"><span class="FM_Courier">AV_DOC_VIEW</span>&#160;— Draw the page pane and scrollbars. </p>
  <p class="FM_Indent1"><span class="FM_Courier">AV_PAGE_VIEW</span>&#160;— Draw only the page pane. </p>
  <p class="BodyLevel1">If you were developing in C, these strings would be replaced by a numeric value prior to compilation; passing these strings to the method would not raise an error. When programming in Visual Basic, these strings correspond to constant variables defined in iac.bas.</p>
  <p class="BodyLevel1"><span style="letter-spacing : 0.04em; ">In some situations, you need to apply a bitwise </span><span class="FM_Courier">OR</span><span style="letter-spacing : 0.04em; ">&#160;to multiple values and pass the resultant value to a method</span>. For example, in iac.h th<span style="letter-spacing : 0.04em; ">e </span><span class="FM_Courier">ntype</span><span style="letter-spacing : 0.04em; ">&#160;parameter of the </span><span class="FM_Courier">PDDocSave</span><span style="letter-spacing : 0.04em; ">&#160;method is a bitwise </span><span class="FM_Courier">OR</span><span style="letter-spacing : 0.04em; ">&#160;of the following flags</span>: </p>
  <p class="FM_CodeReference">/* PDSaveFlags — used for PD-level Save <br />** All undefined flags should be set to zero. <br />** If either PDSaveCollectGarbage or PDSaveCopy are used, PDSaveFull must be used. */<br />typedef enum { <br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveIncremental = 0x0000,&nbsp;&nbsp;/* write changes only */ <br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveFull = 0x0001,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* write entire file */ <br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveCopy = 0x0002,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* write copy w/o affecting current state */</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveLinearized = 0x0004,&nbsp;&nbsp;&nbsp;/* write the file linearized for <br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;page-served remote (net) access. */</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveBinaryOK = 0x0010, /* OK to store binary in file */</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDSaveCollectGarbage = 0x0020&nbsp;&nbsp;/* perform garbage collection on</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>**&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;unreferenced objects */ <br />} PDSaveFlags;</p>
  <p class="BodyLevel1"><span style="letter-spacing : 0.04em; ">For example, if you would like to fully save the PDF file an</span>d optimize it for the Web (linearize it) <span style="letter-spacing : 0.04em; ">within a Visual Basic application, pass </span><span class="FM_Courier">PDSaveFull + PDSaveLinearized</span><span style="letter-spacing : 0.04em; "> (both defined in</span>&#160;iac.bas)<span style="letter-spacing : 0.04em; ">&#160;into the </span><span class="FM_Courier">ntype</span><span style="letter-spacing : 0.04em; ">&#160;parameter; this is the equivalent of a binary </span><span class="FM_Courier">OR</span><span style="letter-spacing : 0.04em; ">&#160;of the </span><span class="FM_Courier">PDSaveFull</span><span style="letter-spacing : 0.04em; ">&#160;and </span><span class="FM_Courier">PDSaveLinearized</span><span style="letter-spacing : 0.04em; ">&#160;parameters. </span></p>
  <p class="BodyLevel1">In many instances, the numeric values are spelled out in comments in the Visual Basic sample code. However, knowledge of why the methods are structured in this way and how they are used in C can be useful to Visual Basic and Visual C# programmers.</p>
  </div>
</body>
</html>