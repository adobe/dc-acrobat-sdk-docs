<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Development environment considerations</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\InterApplication_Communication\IACOverview\IAC_DevApp_OLE_Support.fm" />
 <link rel="stylesheet" href="IAC_DevApp_OLE_Support.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "6.1.2.2";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/IAC_DevApp_OLE_Support/PDF_browser_controls.htm">
 <meta name="brsnext" value="Acro12_MasterBook/IAC_DevApp_OLE_Support/Environment_configuration.htm">
 <meta name="topic-breadcrumbs" content="Acrobat Interapplication Communication > Developing Applications Using Interapplication Communication > Using OLE" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="IX_choosing"></a><a name="XREF_91364_Development"></a>Development environment considerations</h2>
  <p class="BodyLevel1">You have a choice of environments in which to integrate with <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>: Visual Basic, Visual C#, and Visual C++.</p>
  <p class="BodyLevel1">If possible, use Visual Basic or Visual C#. The run-time type checking offered by the <span class="FM_Courier">CreateObject</span>&#160;call in Visual Basic allows quick prototyping of an application, and in both of these languages the implementation details are simplified.</p>
  <p class="BodyLevel1">For comparison, consider the following examples, in which you can see strings with <span class="FM_Courier">&quot;AcroExch.App&quot;</span>&#160;and strings with <span class="FM_Courier">&quot;Acrobat.CAcroApp&quot;</span>. The first is the form for the external string used by OLE clients to create an object of that type. The second is the form that is included in developer type libraries. </p>
  <p class="BodyLevel1">This example shows a Visual Basic subroutine to view a given page of an open document:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Viewing a page with <a name="XREF_95158_Example4_1_VB_View"></a>Visual Basic</p>
</li>
  </ul>
  <p class="FM_CodeReference">Private Sub myGoto(ByVal where As Integer)<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Dim app as Object, avdoc as Object, pageview as Object<br /><br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Set app = CreateObject(&quot;AcroExch.App&quot;)<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Set avdoc = app.GetActiveDoc<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Set pageview = avdoc.GetAVPageView<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>pageview.Goto(where)<br />End Sub</p>
  <p class="BodyLevel1">The following example does the same, but in Visual C++:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Viewing a page with <a name="XREF_79427_Example4_2_C_View"></a>Visual C++</p>
</li>
  </ul>
  <p class="FM_CodeReference">void goto(int where)<br />{<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CAcroApp app;<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CAcroAVDoc *avdoc = new CAcroAVDoc;<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CAcroAVPageView pageview;<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>COleException e;<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>app.CreateDispatch(&quot;AcroExch.App&quot;);<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>avdoc-&gt;AttachDispatch(app.GetActiveDoc, TRUE);<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>pageview-&gt;AttachDispatch(avdoc-&gt;GetAVPageView, TRUE);<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>pageview-&gt;Goto(where);<br />}</p>
  <p class="BodyLevel1">The next example shows how to use PDF browser controls to view a page in Visual Basic:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Using AcroPDF browser controls with <a name="XREF_98261_Example3_3_Visual"></a>Visual Basic</p>
</li>
  </ul>
  <p class="FM_CodeReference">Friend WithEvents AxAcroPDF1 As AxAcroPDFLib.AxAcroPDF</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1 = New AxAcroPDFLib.AxAcroPDF</p>
  <p class="FM_CodeReference">'AxAcroPDF1</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.Enabled = True</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.Location = New System.Drawing.Point(24, 40)</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.Name = &quot;AxAcroPDF1&quot;</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.OcxState = CType(</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>resources.GetObject(&quot;AxAcroPDF1.OcxState&quot;),</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>System.Windows.Forms.AxHost.State</p>
  <p class="FM_CodeReference">)</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.Size = New System.Drawing.Size(584, 600)</p>
  <p class="FM_CodeReference">Me.AxAcroPDF1.TabIndex = 0</p>
  <p class="FM_CodeReference">AxAcroPDF1.LoadFile(&quot;http://www.example.com/example.pdf&quot;)</p>
  <p class="FM_CodeReference">AxAcroPDF1.setCurrentPage(TextBox2.Text)</p>
  <p class="BodyLevel1">The Visual Basic examples are simpler to read, write, and support, and the implementation details are similar to Visual C#.</p>
  <p class="BodyLevel1">In Visual C++, the <span class="FM_Courier">CAcro</span>&#160;classes hide much of the type checking that must be done. Using OLE automation objects in Visual C++ requires an understanding of the <span class="FM_Courier">AttachDispatch</span>&#160;and <span class="FM_Courier">CreateDispatch</span>&#160;methods of the <span class="FM_Courier">COleDispatchDriver</span>&#160;class. For more information, see <a href="Using_the_Acrobat_OLE_interfaces.htm#XREF_78674_Using_the_Acrobat">Using the Acrobat OLE interfaces</a>.</p>
  <p class="FM_Note"><a name="IX_header_files"></a><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>The header files&#160;containing the values of constants that are required by C and C++ programmers to use OLE automation are located in the <uservariable x-value="Acrobat&nbsp;DC&nbsp;SDK" x-showvalue="TRUE" name="AcrobatSDKProd" x-format="AcrobatSDKProd">Acrobat&nbsp;DC&nbsp;SDK</uservariable>&#160;IAC directory. Visual Basic and Visual C# users do not need these header files, though it may be useful to refer to them in order to verify the constant definitions.</p>
  </div>
</body>
</html>