<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Creating menu callback functions</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Menu.fm" />
 <link rel="stylesheet" href="Plugins_Menu.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.6.2_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Menu/Adding_a_menu_command_to_a_new_menu.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Menu/Determining_if_a_menu_item_can_be_executed.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Creating Menus and Menu Commands" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_73167_Creating_menu"></a>Creating menu callback functions</h2>
  <p class="BodyLevel1">When creating menus, you must create menu callback functions that are invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>. These types of callback functions can be created:</p>
  <p class="FM_Indent1"><span class="FM_Bold">Execute</span>: Invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;in response to a user selecting a menu command. This callback is required. </p>
  <p class="FM_Indent1"><span class="FM_Bold">Compute-enabled</span>: This optional callback is invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;when determining whether to enable the menu command. </p>
  <p class="FM_Indent1"><span class="FM_Bold">Compute-marked</span>: This optional callback is invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;when determining whether the menu command should be checked.</p>
  <p class="BodyLevel1">For the purpose of this discussion, a simplistic user-defined function named <span class="FM_Courier">ShowMessage</span>&#160;is introduced. This method displays a message box by invoking the <span class="FM_Courier">AVAlertNote</span>&#160;method. The following code example shows the body of the <span class="FM_Courier">ShowMessage</span>&#160;function. </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ACCB1 void ACCB2 ShowMessage (void* data)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;A menu command was selected.&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="BodyLevel1">The data parameter for this and the other callbacks can be used to maintain private data for the menu command. Notice that this user-defined function is declared using the <span class="FM_Courier">ACCB1</span>&#160;and <span class="FM_Courier">ACCB2</span>&#160;macros. (See <a href="../Plugins_Pimech/Using_callback_functions.htm#XREF_20671_8_7_Callbacks">Using callback functions</a>.)</p>
  <p class="BodyLevel1">For each callback that you create, you declare pointers to callbacks that are defined in the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;core API:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVExecuteProc ExecProcPtr = NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVComputeEnabledProc CompEnabledProcPtr = NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVComputeMarkedProc CompMarkedProcPtr = NULL;</p>
  <p class="BodyLevel1"><span class="FM_Courier">AVExecuteProc</span>&#160;is a callback that you can create that is invoked by <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;when a user selects a menu item. <span class="FM_Courier">AVComputeEnabledProc</span>&#160;is a callback that you can create that is invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;when determining whether to enable the menu command. <span class="FM_Courier">AVComputeMarkedProc</span>&#160;is a callback that you can create that is invoked by <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;or <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;when determining whether the menu command should be checked.</p>
  <p class="BodyLevel1">After you create a pointer, such as a pointer that points to <span class="FM_Courier">AVExecuteProc</span>, you can invoke the <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro that is defined in the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;core API to convert a user-defined function to an <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;callback function. For example, you can invoke <span class="FM_Courier">ASCallbackCreateProto</span>&#160;to convert <span class="FM_Courier">ShowMessage</span>&#160;to a callback function. The <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro requires the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">The callback type. For example, you can pass <span class="FM_Courier">AVExecuteProc</span>.</p>
</li>
   <li>
   <p class="FM_Bullet1">The address of the user-defined function to convert to a callback function. </p>
</li>
  </ul>
  <p class="BodyLevel1">The <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro returns a callback of the specified type that invokes the user-defined function whose address was passed as the second argument. The following code example shows the <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro converting the <span class="FM_Courier">ShowMessage</span>&#160;user-defined function to a <span class="FM_Courier">AVExecuteProc</span> callback.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVExecuteProc ExecProcPtr = NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ExecProcPtr = ASCallbackCreateProto(AVExecuteProc, &amp;ShowMessage);</p>
  <p class="BodyLevel1">After you create an <span class="FM_Courier">AVExecuteProc</span>&#160;callback, invoke the <span class="FM_Courier">AVMenuItemSetExecuteProc</span>&#160;method to associate a menu command with a callback. That is, when a user selects a specific menu command, <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;will invoke the user-defined function whose address was passed to the <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro. The <span class="FM_Courier">AVMenuItemSetExecuteProc</span>&#160;method requires the following parameters:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">An <span class="FM_Courier">AVMenuItem</span>&#160;instance that represents the menu command. </p>
</li>
   <li>
   <p class="FM_Bullet1">An <span class="FM_Courier">AVExecuteProc</span>&#160;that represents the callback function. </p>
</li>
   <li>
   <p class="FM_Bullet1">The address of a user-defined data structure that can be passed to the user-defined function.</p>
</li>
  </ul>
  <p class="BodyLevel1">When you are done with a menu callback, you can invoke the <span class="FM_Courier">ASCallbackDestroy</span>&#160;method to release memory that it consumes. The following code example creates callback functions for menu commands.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Creating menu callback functions</p>
</li>
  </ul>
  <p class="FM_CodeComment">/* Display a message box */</p>
  <p class="FM_CodeReference">ACCB1 void ACCB2 ShowMessage (void* data)</p>
  <p class="FM_CodeReference">{ </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;A menu command was selected.&quot;);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">ACCB1 ASBool ACCB2 ComputeMarkedProc (void* data)</p>
  <p class="FM_CodeReference">{ </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASBool expressionorcondition = true; </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (expressionorcondition) </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return true; </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>else return false;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">ACCB1 ASBool ACCB2 ComputeEnabledProc (void* data)</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (AVAppGetNumDocs() &gt; 0) </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return true;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>else return false;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">ACCB1 ASBool ACCB2 PluginInit (void)</p>
  <p class="FM_CodeReference">{ </p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Declare menu callbacks</p>
  <p class="FM_CodeReference">AVExecuteProc ExecProcPtr = NULL;</p>
  <p class="FM_CodeReference">AVComputeEnabledProc CompEnabledProcPtr = NULL;</p>
  <p class="FM_CodeReference">AVComputeMarkedProc CompMarkedProcPtr = NULL;</p>
  <p class="FM_CodeComment">&nbsp;</p>
  <p class="FM_CodeComment">//Declare menu variables</p>
  <p class="FM_CodeReference">AVMenu FileMenu = NULL; </p>
  <p class="FM_CodeReference">AVMenuItem NewItem = NULL; </p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Retrieve the menu bar in Acrobat Reader or Acrobat</p>
  <p class="FM_CodeReference">AVMenubar Themenubar = AVAppGetMenubar ();</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Create menu callbacks</p>
  <p class="FM_CodeReference">ExecProcPtr = ASCallbackCreateProto (AVExecuteProc, &amp;ShowMessage); </p>
  <p class="FM_CodeReference">CompEnabledProcPtr = ASCallbackCreateProto (AVComputeEnabledProc,</p>
  <p class="FM_CodeReference">&amp;ComputeEnabledProc); </p>
  <p class="FM_CodeReference">CompMarkedProcPtr = ASCallbackCreateProto (AVComputeMarkedProc,</p>
  <p class="FM_CodeReference">&amp;ComputeMarkedProc); </p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Retrieve the File menu</p>
  <p class="FM_CodeReference">FileMenu = AVmenubarAcquireMenuByName (Themenubar, &quot;File&quot;); </p>
  <p class="FM_CodeReference">if (FileMenu) </p>
  <p class="FM_CodeReference">{ </p>
  <p class="FM_CodeComment">//Create a new menu item</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>NewItem = AVMenuItemNew (&quot;Show Message&quot;, &quot;ADBE:ExternWin&quot;, NULL, true,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>NO_SHORTCUT, 0, NULL, gExtensionID); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (NewItem == NULL) </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{ </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Unable to create a menu item, not loading.&quot;); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVMenuItemSetExecuteProc (NewItem, ExecProcPtr, NULL); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVMenuItemSetComputeEnabledProc (NewItem,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CompEnabledProcPtr,NULL); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVMenuItemSetComputeMarkedProc (NewItem,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CompMarkedProcPtr,NULL); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVMenuAddMenuItem (FileMenu, NewItem, 1); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVMenuRelease (FileMenu); </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return true; </p>
  <p class="FM_CodeReference">} </p>
  <p class="FM_CodeReference">else return false;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">ACCB1 ASBool ACCB2 PluginUnload (void)</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference">ASCallbackDestroy (ExecProcPtr); </p>
  <p class="FM_CodeReference">ASCallbackDestroy (CompEnabledProcPtr); </p>
  <p class="FM_CodeReference">ASCallbackDestroy (CompMarkedProcPtr); </p>
  <p class="FM_CodeReference">return true;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>Notice that the application logic that creates a menu command is located in the <span class="FM_Courier">PluginInit</span>&#160;procedure. (See <a href="../Plugins_Pimech/About_plug-in_initialization.htm#XREF_58810_About_plug_in">About plug-in initialization</a>.)</p>
  </div>
</body>
</html>