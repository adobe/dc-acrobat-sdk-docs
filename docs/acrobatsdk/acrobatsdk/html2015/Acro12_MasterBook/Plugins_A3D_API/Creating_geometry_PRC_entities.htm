<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Creating geometry PRC entities</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_A3D_API.fm" />
 <link rel="stylesheet" href="Plugins_A3D_API.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.19.4.0_6";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_A3D_API/Creating_topology_PRC_entities.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_A3D_API/Defining_root-level_attributes_for_a_PRC_entity.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Parsing and Creating PRC Files > Creating a PRC file that uses boundary representation" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Creating geometry PRC entities</h3>
  <p class="BodyLevel1">The <span class="FM_HyperText"><a href="./API_References/PRCReference/3D_API_Reference/index.html">Acrobat 3D API Reference</a></span>&#160;describes the PRC entities that specify geometry in the Geometry module. This module contains these submodules:</p>
  <p class="FM_Indent1"><span class="FM_Bold">Curves:</span> Entities that represent different kinds of curves, such as NURBS, elliptic, and helical.</p>
  <p class="FM_Indent1"><span class="FM_Bold">Surfaces:</span> Entities that represent different kinds of surfaces, such as NURBS, spheric, and toric.</p>
  <p class="FM_Indent1"><span class="FM_Bold">Common Structures for Geometric Entities:</span>&#160;Entities that supplement data in the Curves and Surfaces modules.</p>
  <p class="BodyLevel1">This section describes the creation of a cylinder surface on which a circular co-edge is UV-mapped. </p>
  <p class="BodyLevel1">A circular curve includes a coordinate system and parameterization settings. By default, the reference domain is [0, 2PI]. A circular curve uses an <span class="FM_Courier">A3IntervalData</span>&#160;entity as the linear domain and an <span class="FM_Courier">A3DMiscCartesianTransformationData</span>&#160;structure as the coordinate system. New parameterization is computed from two coefficients applied to the reference parameterization [0, 2PI]. </p>
  <h6><a name="XREF_54641_To_create_a"></a>Create a surface cylinder entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_52301_Declare_a_null"></a>Declare a null pointer to an <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DSurfCylinder</span> entity.</p>
  <p class="FM_CodeReference">A3DSurfCylinder* pSurfCylinder = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a surface cylinder data structure, and initialize the structures it contains.</p>
  <p class="FM_CodeReference">A3DSurfCylinderData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData.m_sParam);</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData.m_sTrsf);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the UV-parameterization data of the surface cylinder data structure, which specifies how the circular curve is mapped to the cylinder. The following example specifies the trimming and orientation of the mapping:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">Minimum and maximum extents in the UV domain (<span class="FM_Courier">sData.m_sParam.m_sUVDomain</span>) establish the trimming contour in the final parameterization space. Each extent is a 2D vector. The following example clips the texture represented by the co-edge to the area described by [0.0, 0.0] and [360.0 40.0].</p>
</li>
   <li>
   <p class="FM_Bullet2">Coefficients establish parameterization along the U and V axes. In this example, U values are expressed as inverted degrees (1.0/degrees). V values are expressed as inverted lengths (1.0/length). </p>
</li>
  </ul>
  <p class="FM_CodeReference">sData.m_sParam.m_sUVDomain.m_sMin.m_dX = 0.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_sUVDomain.m_sMin.m_dY = 0.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_sUVDomain.m_sMax.m_dX = 360.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_sUVDomain.m_sMax.m_dY = 40.0;</p>
  <p class="FM_CodeReference">//<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>Parameters go from -1 to +1 in both directions</p>
  <p class="FM_CodeReference">sData.m_sParam.m_dUCoeffA = </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>1.0 / (sData.m_sParam.m_sUVDomain.m_sMax.m_dX / 2);</p>
  <p class="FM_CodeReference">sData.m_sParam.m_dUCoeffB = -1.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_dVCoeffA = </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>1.0 / (sData.m_sParam.m_sUVDomain.m_sMax.m_dY / 2);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sData.m_sParam.m_dVCoeffB = -1.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_bSwapUV = FALSE;</p>
  <p class="FM_CodeReference">sData.m_sTrsf.m_ucBehaviour = kA3DTransformationIdentity;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set other member values of the surface cylinder data structure. In the following example, the radius of the cylinder is set to 10.0. The unit of measure (as multiples of millimeters) was previously set for the model file entity. (See <a href="Creating_structure_PRC_entities.htm#XREF_77401_To_create_a_model"><span class="FM_HyperText">Create a model file entity</span></a>.) </p>
  <p class="FM_CodeReference">sData.m_dRadius = 10.0;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the cylinder data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DSurfCylinderCreate</span>&#160;function. The first argument is a pointer to the surface cylinder data, and the second is the pointer to the surface cylinder entity created in Step <a href="#XREF_52301_Declare_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DSurfCylinderCreate(&amp;sData, &amp;pSurfCylinder);</p>
  <h6><a name="XREF_81895_To_create_a_great"></a>Create a circular curve entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_46262_1_Create_a_null"></a>Declare a null pointer to a circular curve entity.</p>
  <p class="FM_CodeReference">A3DCrvCircle* pCrvCircle = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a circular curve data structure, and initialize the structures it contains.</p>
  <p class="FM_CodeReference">A3DCrvCircleData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData.m_sParam);</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData.m_sTrsf);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the values of the circular curve data structure. The following example sets the radius of the circle to a value originally specified during loop creation. (See <a href="Creating_topology_PRC_entities.htm#XREF_58671_To_create_a"><span class="FM_HyperText">Create a topology face entity</span></a>.)</p>
  <p class="FM_CodeReference">sData.m_dRadius = radius;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the values of the parameterization structure within the circular curve data structure. In this example, the interval defines the circular arc as the entire circle and the co-efficients set the parameterization across the entire length of the circular arc.</p>
  <p class="FM_CodeReference">sData.m_sParam.m_dCoeffA = 1.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_dCoeffB = 0.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_sInterval.m_dMin = 0.0;</p>
  <p class="FM_CodeReference">sData.m_sParam.m_sInterval.m_dMax = 360;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the values of the Cartesian transformation structure within the circular curve data structure. The following example sets the behavior of the Cartesian transformation data to the identity transformation. </p>
  <p class="FM_CodeReference">sData.m_sTrsf.m_ucBehaviour = kA3DTransformationIdentity;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the curve data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DCrvCircleCreate</span>&#160;function. The first argument is a pointer to the curve circle data, and the second is the pointer to the circular curve entity created in Step <a href="#XREF_46262_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DCrvCircleCreate(&amp;sData, &amp;pCrvCircle);</p>
  </div>
</body>
</html>