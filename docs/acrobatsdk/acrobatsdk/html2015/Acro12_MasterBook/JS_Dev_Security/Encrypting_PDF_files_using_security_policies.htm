<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Encrypting PDF files using security policies</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJSGuide\JS_Dev_Security.fm" />
 <link rel="stylesheet" href="JS_Dev_Security.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.1.12.3.0_4";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_Dev_Security/Encrypting_PDF_files_for_a_list_of_recipients.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_Dev_Security/Adding_security_to_document_attachments.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > Developing Acrobat Applications Using JavaScript > Security > Adding security to PDF documents" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="IX_policies_1"></a>Encrypting PDF files using security policies</h3>
  <p class="BodyLevel1">It is possible to define a security policy for a PDF document. The policy can contain a list of people who can open the document, restrictions limiting their ability to modify, print, or copy the document, and an expiration date for the document after which it cannot be opened. </p>
  <p class="BodyLevel1"><a name="IX_Adobe_LiveCycle_Policy_1"></a>There are two kinds of security policies: a personal policy is one created by a user and is stored on a local computer, and a organizational policy is developed by an administrator and stored on a policy server such as Adobe LiveCycle® Policy Server.</p>
  <p class="BodyLevel1">There are three types of custom policies. You can create policies for password security, certificate security, and policies used on Policy Server.</p>
  <p class="BodyLevel1">JavaScript for <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> defines a securityPolicy object that contains the following properties:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">policyID</span> — a machine-readable policy ID string</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">name</span> — the policy name</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">description</span> — the policy description</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">lastModified</span> — the date when the policy was last modified</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">handler</span> — the handler that implements the policy (<span class="FM_Courier">Adobe.APS</span>, <span class="FM_Courier">Adobe.PubSec</span>, and <span class="FM_Courier">Adobe.Standard</span>)</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">target</span> — the target data covered by the policy (<span class="FM_Courier">document</span>&#160;or <span class="FM_Courier">attachments</span>)</p>
  <p class="BodyLevel1"><a name="IX_policies_2"></a>To obtain a list of the security policies currently available, invoke the <span class="FM_Courier">security</span>&#160;object <span class="FM_Courier">getSecurityPolicies</span> method. The method accepts two parameters:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">oOptions</span> — a SecurityPolicyOptions object containing parameters used to filter the list</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">bUI</span>&#160;— determines whether the user interface will be displayed (affects <span class="FM_Courier">bCheckOnline</span>&#160;in the <span class="FM_Courier">oOptions</span> parameter)</p>
  <p class="BodyLevel1">The SecurityPolicyOptions object is a generic object used to filter the list of security policies that will be returned by the method, and contains the following properties:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">bFavorites</span> — determines whether to return policies are favorites or not</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">cFilter</span> — returns policies using the specified security filter (<span class="FM_Courier">Adobe.APS</span>, <span class="FM_Courier">Adobe.PubSec</span>, and <span class="FM_Courier">Adobe.Standard</span>)</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">cTarget</span>&#160;— returns policies using the specified <span class="FM_Courier">target</span> (<span class="FM_Courier">document</span>&#160;or <span class="FM_Courier">attachments</span>)</p>
  <p class="BodyLevel1">The following example illustrates how to request and display a list of favorite security policies:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Set up the filtering options (SecurityOptionsPolicy object):</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var options = {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>bFavorites: true,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>cFilter: &quot;Adobe.PubSec&quot;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>};</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Obtain the filtered list of security policies:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var policyArray = security.getSecurityPolicies(options);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Display the list of security policies by name:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (var i=0; i&lt;policyArray.length; i++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>console.println(policyArray[i].name);</p>
  <p class="BodyLevel1"><a name="IX_policies_4"></a><a name="IX_encryptUsingPolicy"></a><a name="IX_policies_3"></a>To encrypt a PDF file using a security policy, you must first choose a security policy by invoking the <span class="FM_Courier">security</span>&#160;object <span class="FM_Courier">chooseSecurityPolicy</span>&#160;method and then encrypt the file by invoking the Doc object’s <span class="FM_Courier">encryptUsingPolicy</span> method.</p>
  <p class="BodyLevel1">The <span class="FM_Courier">security</span>&#160;object <span class="FM_Courier">chooseSecurityPolicy</span>&#160;method opens a dialog box that permits the user to choose from a list of security policies filtered according to a SecurityPolicyOptions object. </p>
  <p class="BodyLevel1">The Doc object <span class="FM_Courier">encryptUsingPolicy</span> method accepts three parameters:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">oPolicy </span>— the policy object to use when encrypting the document</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">oGroups</span> — an array of Group objects that the handler should use when applying the policy</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">oHandler</span> — the SecurityHandler object to be used for encryption</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">bUI</span> — whether the UI is displayed</p>
  <p class="BodyLevel1">In the following example, a newly created document is encrypted for a list of recipients, using the <span class="FM_Courier">encryptUsingPolicy</span>&#160;method, by choosing and applying a security policy. A Policy Server must be configured for publishing before running this example.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Create the new document</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var myDoc = app.newDoc();</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Choose the list of recipients</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var recipients = [{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>userEntities: [</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{email: &quot;user1@example.com&quot;},</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{email: &quot;user2@example.com&quot;},</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{email: &quot;user3@example.com&quot;}</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>]</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}];</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Encrypt the document using the security policy:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var results = myDoc.encryptUsingPolicy({</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>oPolicy: &quot;adobe_secure_for_recipients&quot;,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>oGroups: recipients</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>});</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if ( results.errorCode == 0) </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>console.println(&quot;The policy applied was: &quot; + results.policyApplied.name);</p>
  </div>
</body>
</html>