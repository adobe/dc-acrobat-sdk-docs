<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Saving a file with an encryption dictionary</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Security.fm" />
 <link rel="stylesheet" href="Plugins_Security.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.14.2.0_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Security/Setting_security_for_a_document.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Security/Opening_an_encrypted_file.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Working with Document Security > Setting security for a document" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Saving a file with an encryption dictionary</h3>
  <p class="BodyLevel1">To save a file with a new encryption dictionary, use the following callbacks in the <span class="FM_Courier">PDCryptHandlerRec</span>:</p>
  <p class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><span class="FM_Courier">PDCryptNewSecurityDataProc</span>&#160;creates and initializes a security data structure. It is called with <span class="FM_Courier">encryptDict </span>(a Cos object) set either to NULL or to a valid encryption dictionary, in which case the fields of the encryption dictionary are read and placed into the security data structure. For information about a Cos object, see <a href="../Plugins_Cos/Working_with_Cos_Objects.htm#XREF_86959_Working_with_COS">Working with Cos Objects</a>.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><span class="FM_Courier">PDCryptUpdateSecurityDataProc</span>&#160;gets the current security data structure by invoking the <span class="FM_Courier">PDDocGetNewSecurityData</span>&#160;method. It then makes a copy of the structure with which to work. This new copy is freed if an error or cancel condition is encountered. The user is requested to log in to their PKI infrastructure to access the user’s keys and certificates.</p>
  <p class="FM_Indent1">If the security data structure was seeded with information from <span class="FM_Courier">encryptDict</span>, an internal authorize procedure is called. This procedure decrypts and examines the data fields in the security data structure copy that are set to indicate the user’s permissions and, possibly, information relating to the document symmetric key.</p>
  <p class="FM_Indent1">A user interface is provided to enable your plug-in to specify a list of recipients for the document. If all goes well, the <span class="FM_Courier">secDataP</span>&#160;argument to <span class="FM_Courier">PDCryptUpdateSecurityDataProc</span>&#160;is sent to the copy of the security data structure, and <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> frees the original security data structure.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><span class="FM_Courier">PDCryptFillEncryptDictProc</span>&#160;writes data from the security data structure into the encryption dictionary. When <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;is done with the security data structure, it invokes the <span class="FM_Courier">PDCryptFreeSecurityDataPro</span>c method.</p>
  </div>
</body>
</html>