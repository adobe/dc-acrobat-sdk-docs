<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Finding words in an PDF document</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJSGuide\JS_Dev_SearchIndexEssentials.fm" />
 <link rel="stylesheet" href="JS_Dev_SearchIndexEssentials.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.1.11.1.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_Dev_SearchIndexEssentials/Searching_for_text_in_PDF_documents.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_Dev_SearchIndexEssentials/Searching_across_multiple_PDF_documents.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > Developing Acrobat Applications Using JavaScript > Search and Index Essentials > Searching for text in PDF documents" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Finding words in an PDF document</h3>
  <p class="BodyLevel1"><a name="IX_queries"></a><a name="IX_query"></a>The <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">query</span>&#160;method is used to search for text within a PDF document. It accepts three parameters:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">cQuery</span> — the search text</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">cWhere</span> — where to search:</p>
  <p class="FM_Indent2"><span class="FM_CourierBold">ActiveDoc</span> — within the active document</p>
  <p class="FM_Indent2"><span class="FM_CourierBold">Folder</span> — within a specified folder</p>
  <p class="FM_Indent2"><span class="FM_CourierBold">Index</span> — within a specified index</p>
  <p class="FM_Indent2"><span class="FM_CourierBold">ActiveIndexes</span> — within the active set of available indexes (the default)</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">cDIPath</span> — the path to a folder or index used in the search</p>
  <p class="BodyLevel1">The simplest type of search is applied to the text within the PDF document. For example, the following code performs a case-insensitive search for the word <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> within the current document:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.query(&quot;<uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&quot;, &quot;ActiveDoc&quot;);</p>
  <h4><a name="TOC_Using_advanced_search"></a><a name="IX_matching_criterion"></a><a name="IX_advanced_options"></a>Using advanced search options</h4>
  <p class="BodyLevel1">You can set the <span class="FM_Courier">search</span>&#160;object properties to use advanced searching options, which can be used to determine how to match search strings, and whether to use proximity or stemming.</p>
  <p class="BodyLevel1"><a name="IX_matching_words"></a><a name="IX_wordMatching"></a>To determine how the words in the search string will be matched, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">wordMatching</span>&#160;property to one of the following values:</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">MatchPhrase</span> — match the exact phrase</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">MatchAllWords</span> — match all the words without regard to the order in which they appear</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">MatchAnyWord</span> — match any of the words in the search string</p>
  <p class="FM_Indent1"><span class="FM_CourierBold">BooleanQuery</span> — perform a Boolean query for multiple-document searches (the default)</p>
  <p class="BodyLevel1">For example, the following code matches the phrases “My Search” or “Search My”:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.wordMatching = &quot;MatchAllWords&quot;;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.query(&quot;My Search&quot;);</p>
  <p class="BodyLevel1">To determine whether proximity is used in searches involving multiple documents or index definition files, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">wordMatching</span>&#160;property to <span class="FM_Courier">MatchAllWords</span>&#160;and set its <span class="FM_Courier">proximity</span>&#160;property to <span class="FM_Courier">true</span>. In the example below, all instances of the words <span class="FM_Courier">My</span>&#160;and <span class="FM_Courier">Search</span>&#160;that are not separated by more than 900 words will be listed in the search:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.wordMatching = &quot;MatchAllWords&quot;;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.proximity = true;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.query(&quot;My Search&quot;);</p>
  <p class="BodyLevel1">To use stemming in the search, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">stem</span>&#160;property to <span class="FM_Courier">true</span>. For example, the following search lists words that begin with “run”, such as “running” or “runs”:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.stem = true;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.query(&quot;run&quot;);</p>
  <p class="BodyLevel1">To specify that the search should only identify occurrences of complete words, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">matchWholeWord</span>&#160;property to <span class="FM_Courier">true</span>. For example, the following code matches “nail”, but not “thumbnail” or “nails”:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.matchWholeWord = true;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.query(&quot;nail&quot;);</p>
  <p class="BodyLevel1">To set the maximum number of documents to be returned as part of a query, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">maxDocs</span>&#160;property to the desired number (the default is 100). For example, the following code limits the number of documents to be searched to 5:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.maxDocs = 5;</p>
  <p class="BodyLevel1">To refine the results of the previous query, set the <span class="FM_Courier">search</span>&#160;object <span class="FM_Courier">refine</span>&#160;property to <span class="FM_Courier">true</span>, as shown in the following code:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>search.refine = true;</p>
  </div>
</body>
</html>