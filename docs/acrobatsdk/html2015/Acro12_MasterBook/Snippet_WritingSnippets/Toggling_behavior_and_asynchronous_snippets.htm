<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Toggling behavior and asynchronous snippets</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\SnippetRunnerCookbook\Snippet_WritingSnippets.fm" />
 <link rel="stylesheet" href="Snippet_WritingSnippets.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "1.4.2.0_2";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Snippet_WritingSnippets/Passing_parameters_to_snippets.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Snippet_WritingSnippets/Handling_exceptions.htm">
 <meta name="topic-breadcrumbs" content="Introduction to SDK > Snippet Runner Cookbook > Writing Snippets" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_52396_Toggling_and"></a>Toggling behavior and asynchronous snippets</h2>
  <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>This section applies to Acrobat plug-in snippets only; not to the PDF Library SDK. </p>
  <p class="BodyLevel1">SnippetRunner provides utility methods for toggling behavior. For example, FormCalculationsSnip turns on and off the ability to perform form calculations. It uses the <span class="FM_Courier">toggleSnippetCheck</span>&#160;method (see SnippetRunnerUtils.cpp) to turn the state on if it was previously off, and vice versa.</p>
  <p class="BodyLevel1">Other snippets that toggle behavior include AVPageViewToggleWireframeDrawingSnip, and AVAppShowAnnotProperties.</p>
  <p class="BodyLevel1">Some snippets define and register callbacks in the same manner as plug-ins. (See the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span>&#160;and <a href="../Plugins_Introduction/Plugins_Introduction.htm#XREF_97017_Developing_Plug"><span class="FM_HyperText">Overview</span></a>&#160;for information regarding <span class="FM_Courier">ASCallback</span>&#160;objects, <span class="FM_Courier">ASCallbackCreateProto</span>&#160;and <span class="FM_Courier">ASCallbackDestroy</span>). Specifically, to register a snippet for a notification, use <span class="FM_Courier">AVAppRegisterNotification</span>&#160;and provide a callback function with the appropriate arguments. To register your snippet for a specific event, such as <span class="FM_Courier">IdleProc</span>, <span class="FM_Courier">PageViewDrawing</span>, <span class="FM_Courier">PageViewClicks</span>&#160;or <span class="FM_Courier">PageViewAdjustCursor</span>, use the related <span class="FM_Courier">AVAppRegister</span><span class="FM_CourierItalic">XXX</span>&#160;method. You can toggle a snippet to Off by checking for its On state and unregistering via the complementary <span class="FM_Courier">AVAppUnregister</span><span class="FM_CourierItalic">XXX</span> method.</p>
  <p class="BodyLevel1">Such snippets can be <span class="FM_Italic">asynchronous</span>&#160;in the sense that they register a callback whose output (or other result) does not appear until a particular event occurs. Snippets that register for notifications include: <span class="FM_Courier">OptContNotificationTracerSnip</span>, <span class="FM_Courier">AVAppFrontDocChangeNotSnip</span>, <span class="FM_Courier">AVAppRegisterForPageViewDrawingSnip</span>, <span class="FM_Courier">PDDocDidDeletePagesNotSnip</span>&#160;and <span class="FM_Courier">IdleProcSnip</span>.</p>
  </div>
</body>
</html>