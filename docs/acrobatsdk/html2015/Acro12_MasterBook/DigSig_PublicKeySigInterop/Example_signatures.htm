<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Example signatures</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\Other\PPKAppearances\DigSig_PublicKeySigInterop.fm" />
 <link rel="stylesheet" href="DigSig_PublicKeySigInterop.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "3.0_3";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/DigSig_PublicKeySigInterop/Annotation_appearances.htm">
 <meta name="brsnext" value="Acro12_MasterBook/DigSig_PublicKeySigInterop/Appearance_watermarks.htm">
 <meta name="topic-breadcrumbs" content="Digital Signature Appearances" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_65484_Example_Signatures"></a>Example signatures</h2>
  <p class="BodyLevel1">These example signatures are referred to later in this document.</p>
  <p class="FM_NoteTip"><span class="FM_Z_NoteCaution">Tip:<span style="padding-left: 3pt;" class="FMAutoNumber_1"></span></span>Signature status icons may or may not appear depending on your version of Acrobat and how it is configured. For example, in Acrobat 9.0, icons appear in the signature pane rather than in the signature field. Also note that icon styles have changed across past versions of Acrobat and Adobe Reader.</p>
  <ol style="Direction:Direction:ltr;
;
">
   <li style="list-style: decimal;">
   <p class="FM_5Head_Example"><a name="XREF_77047_Figure1_1"></a>Signature with no watermark</p>
</li>
   <p class="FM_GraphicBody"><img alt="plain_sig.gif" style=" width:100%; margin-bottom:6.000pt; margin-left:5.250pt; margin-top:5.250pt; margin-right:6.000pt; max-width:201.000pt;" id="image0" src="plain_sig.gif" />&nbsp;</p>
   <li style="list-style: decimal;">
   <p class="FM_5Head_Example"><a name="XREF_76186_Figure1_3_Invalid"></a><a name="XREF_52654_Figure1_10_Acrobat"></a>PubSec generated signature appearance with watermark<uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable></p>
</li>
   <p class="FM_GraphicBody"><img alt="inkypinky_sigap.jpg" style=" width:100%; margin-bottom:0.000pt; max-width:222.545pt;" id="image1" src="inkypinky_sigap.jpg" />&nbsp;</p>
   <li style="list-style: decimal;">
   <p class="FM_5Head_Example"><a name="XREF_97403_Signature"></a>PubSec generated signature appearance <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable> with overlays</p>
</li>
   <p class="BodyLevel1">Tooltip overlays are a common usability feature that make it easier for signature validators to determine signature status. Product versions prior to 9.0 also display a signature status icon. After 9.0, the status icon only appears in the signature pane. </p>
   <p class="FM_GraphicBody"><img alt="overlay.gif" style=" width:100%; margin-bottom:6.000pt; margin-left:5.250pt; margin-top:5.250pt; margin-right:6.000pt; max-width:150.750pt;" id="image2" src="overlay.gif" />&nbsp;</p>
   
   <h2><a name="TOC_Standard_AP_dictionary"></a><a name="XREF_12431_Standard_AP"></a>Standard AP dictionary and layers</h2>
   <p class="BodyLevel1">A signature’s appearance is contained in the N (Normal) attribute of the signature annotation’s AP dictionary. The R (Rollover) and D (Down) attributes are not used. The appearance is contained in a number of XObjects that are assembled to create layers. These XObjects are pulled together with the Do page marking operator as described in <a href="#XREF_43219_Assembling_XObject">Assembling XObject layers</a>.</p>
   <p class="BodyLevel1">Signature appearances use two standard layers and can have a variable number of optional user-definable layers. Each layer is represented by its own XObject. </p>
   <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>Prior to <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;6.0, signature appearances were manipulated at run-time in order to display the validity of the signature. The validity was shown as a graphic icon and with an additional, optional text message. The manipulated portions of the signature appearance were contained in layers n1, n3 and n4. Beginning with version 6, <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;does not maintain support for signature appearances that can be manipulated, though legacy signatures with these appearances may continue to display correctly. Use of layers n1, n3, and n4 is not recommended. </p>
   <p class="BodyLevel1">The standard XObject layers are as follows:</p>
   <p class="FM_Indent1"><span class="FM_Bold">n0</span>: The background layer that is preset when creating the signature field (such as when using the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;form creation tool). In the example appearances in <a href="#XREF_65484_Example_Signatures">Example signatures</a>, this layer is blank.</p>
   <p class="FM_Indent1"><span class="FM_Bold">n2</span>: The signature appearance layer that contains information about the signature. In the example <a href="#XREF_77047_Figure1_1"><span class="FM_HyperText">Signature with no watermark</span></a>, this is the layer that contains the line art for the handwritten signature and the text giving the signer’s name, date, reason, and location. The content of this layer can be dynamically created when the signature is created, but thereafter it remains static. Specifically, it remains static when the validity state is changed. </p>
   <p class="BodyLevel1">The layers are painted in sequence, beginning with n0.</p>
   <p class="BodyLevel1">Handlers can define their own custom layers. Custom layers must not use the names n0<span class="FM_Bold">&#160;</span>through n4.</p>
   
   <h2><a name="TOC_Assembling_XObject_layers"></a><a name="XREF_43219_Assembling_XObject"></a>Assembling XObject layers</h2>
   <p class="BodyLevel1">An appearance is assembled with the top-level and second-level XObjects and the standard layers. Care should be taken to follow the recommendations for setting the matrix values to indicate unity transforms.</p>
   
   <h3><a name="TOC_Top_level_XObject"></a>Top-level XObject</h3>
   <p class="BodyLevel1">The AP dictionary’s N attribute references a top-level XObject. This top-level XObject is necessary to properly resize signature appearances when these appearances are referred to by more then one signature field. For an example, see object 17 in the graphic <a href="#XREF_91758_Figure1_8">Signature appearance objects in a PDF file</a>. </p>
   <p class="BodyLevel1">The top-level XObject performs a <span class="FM_Courier">Do</span> on the second-level XObject as follows:</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>q 1 0 0 1 0 0 cm /FRM Do Q</p>
   <p class="BodyLevel1">The in-line cm matrix may change if the signature is resized. The Matrix is unity (x,y translation of zero, scale factor = 1), and the BBox is the current bounding box of the annotation. </p>
   <p class="BodyLevel1">The location of a signature within a document can have a bearing on its legal meaning. For this reason, signature fields never refer to more than one annotation. If more than one location is associated with a signature, the meaning may become ambiguous. Regardless, all signatures should include the top-level XObject.</p>
   
   <h3><a name="TOC_Second_level_XObject"></a>Second-level XObject</h3>
   <p class="BodyLevel1">The standard layer n0 appears by name in the Resource dictionary of the second-level XObject’s dictionary. The Matrix of this XObject is unity and the BBox is that of the original annotation.</p>
   <p class="BodyLevel1">The XObject stream appears as follows:</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>q 1 0 0 1 0 0 cm /n0 Do Q</p>
   
   <h3><a name="TOC_Layer_n0"></a>Layer n0</h3>
   <p class="BodyLevel1">This layer renders the background and border of the annotation. The attributes that specify the background and border exist in the signature field dictionary. These attributes are not set if the signature is created on-the-fly by the plug-in. However, if <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;was used to create a blank signature field, these values are set.</p>
   <p class="BodyLevel1">The <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;forms HFT calls can help in the process of obtaining these values. For example, to extract border and background information, refer to <span class="FM_Courier">AFPDWidgetGetAreaColors</span>&#160;and <span class="FM_Courier">AFPDWidgetGetBorder</span>. Other <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;forms HFT calls create the n0 XObject. These API calls are documented in the <span class="FM_Italic">Acrobat and PDF Library API Reference</span>.</p>
   <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>For information on the DigSigHFT calls that can be used to create appearances, see <a href="#XREF_89177_New_Appearance_APIs">DigSigHFT appearance APIs</a>.</p>
   <p class="BodyLevel1">If you are using a blank n0 layer, use this call to obtain the blank object:</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>DigSigGetStdXObj ( cosDoc, DSBlankXObj ) ;</p>
   
   <h3><a name="TOC_Layer_n2"></a>Layer n2</h3>
   <p class="BodyLevel1">The handler can create any appearance for this layer. The layer is static. It is not changed when the validity state of the signature is changed.</p>
   <p class="BodyLevel1">All appearance handlers that render text honor the font type and color defaults that were set for the signature annotation. These defaults can be obtained by calling <span class="FM_Courier">AFPDFieldGetDefaultTextAppearance</span>&#160;as defined in the <span class="FM_Italic">Acrobat and PDF Library API Reference</span>.</p>
   
   <h3><a name="TOC_Signature_annotation"></a>Signature annotation with no appearance</h3>
   <p class="BodyLevel1">PDF signatures can be visible or invisible. In both situations there is an associated annotation. For invisible signatures, the annotation has a rectangle array with values [ 0 0 0 0 ]. This annotation is usually attached to the viewed page when the signature is created. Despite not having an appearance, the annotation AP and N dictionaries may be present in some versions of <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>. If present, N references the <span class="FM_Courier">DSBlankXObj</span>&#160;(blank) XObject. </p>
   <h3><a name="TOC_Signature_objects"></a>Signature objects</h3>
   <p class="BodyLevel1">The following graphic shows the relationship of the signature objects in an example PDF file. </p>
   <p class="FM_Z_Caption"><a name="XREF_56661_Figure1_7"></a>Signature objects in a PDF file</p>
   <p class="FM_GraphicWide"><img alt="SigBase.jpg" style=" width:100%; margin-bottom:0.000pt; max-width:491.592pt;" id="image3" src="SigBase.jpg" />&nbsp;</p>
   <p class="BodyLevel1">The XObjects, <span class="FM_Courier">DSUnknown</span>&#160;and <span class="FM_Courier">DSInvalid</span>, are shared XObjects that are used for run-time manipulation of signature appearances. These XObjects are used only for signature appearances with layers n1 and n3. Documents that do not contain these layers do not require these two layers to be present. <span class="FM_Courier">DSBlank</span>&#160;is used by layer n0. Since version 6.0, Acrobat does not create signatures with layers n1 and n3.</p>
   <p class="BodyLevel1">The objects that contain the appearance for this example PDF file are shown in the following graphic.</p>
   <p class="FM_Z_Caption"><a name="XREF_91758_Figure1_8"></a>Signature appearance objects in a PDF file</p>
   <p class="FM_GraphicBody"><img alt="SigWithAP.jpg" style=" width:100%; margin-bottom:0.000pt; max-width:401.994pt;" id="image4" src="SigWithAP.jpg" />&nbsp;</p>
   
   <h2><a name="TOC_DigSigHFT_appearance_APIs"></a><a name="XREF_89177_New_Appearance_APIs"></a>DigSigHFT appearance APIs</h2>
   <p class="BodyLevel1">Several API calls in the DigSigHFT make the generation of signature appearances easier for third-party developers. These procedures also make it easier to create signatures that conform to the layered XObject approach. The procedures are declared in DigSigHFT.h and documented in the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span><span class="FM_Italic">. </span>The calls are:</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DigSigCreateStdXObj</span>&#160;— Creates a standard XObject from one of the values in the enum <span class="FM_Courier">DSXObjType</span>. This call allows a handler to get the predefined XObject for either a signature: </p>
   <ul type="disc" style="Direction:Direction:ltr;
;
">
    <li>
    <p class="FM_Bullet2">A signature in a document which has not changed but for which the signer’s certificate cannot be validated (the signature icon is a question mark that covers a pen); or, </p>
</li>
    <li>
    <p class="FM_Bullet2">A signature on a document that has not changed and which has a validated certificate (the signature icon is a green check mark).</p>
</li>
   </ul>
   <p class="FM_Indent1"><span class="FM_CourierBold">DigSigAPCreateLayeredStream</span>&#160;— Creates the N dictionary and lower level XObjects given the XObjects for the various layers. The layers have defaults, so you do not need to define them.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DigSigAPXObjectFromXObjList</span>&#160;— Creates a single XObject from multiple components. Use this routine to combine graphics and text components to make layer n2. Controls are given for placement of the graphics and text within the annotation. </p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DigSigAPXObjectFromLogo</span>&#160;— Creates an XObject from a string that contains the marking operators needed to draw an object. Adobe’s signature handlers use this routine to create the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;logo that is used as a signature watermark. As an example, the string that is used to create the logo is created by concatenating the strings shown in the following example.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DigSigAPCreateCompositeTextXObj</span>&#160;— Combines various text elements into a single text XObject. This call calls <span class="FM_Courier">DigSigAPXObjectFromXObjList</span>&#160;to do the actual stitching of text elements. </p>
   <li style="list-style: decimal;">
   <p class="FM_5Head_Example"><a name="XREF_98259_Example1_1_Example"></a>Example string to use with DigSigAPXObjectFromLogo</p>
</li>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Precise bbox of Acrobat logo stream stmLogoLogo</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>const ASFixedRect CSSEngine::stmLogoBBox =</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{ 0,0,0x00630000,0x00630000 }; // 0,0,99,99</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Stream data for Acrobat logo</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>const char* const CSSEngine::stmLogoData[] = {</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;% Acrobat Logo&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;q&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;0 J 0 j 4 M []0 d&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;1 0 0 1 0 -1 cm&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;1 0.85 0.85 rg&quot;,/* faded red */</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;0 i&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;96.1 24.7 m&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;96.4 24.7 l&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;96.8 24.7 97 24.6 97 24.3 c&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;51.4 45.2 60.3 39.4 65.1 36.6 c&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;53.5 34.6 40.1 31.1 28.1 25.9 c&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;h f&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;Q&quot;,</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>NULL</p>
   <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>};</p>
   
   <h2><a name="TOC_Appearance_management"></a><a name="XREF_34500_Acrobat_6_0"></a>Appearance management with PubSec</h2>
   <p class="BodyLevel1">The authoring of public key security handlers involves using common signature appearance code in the PubSec software module. PubSec is a layer of code between the DigSigHFT and the PubSecHFT. Plug-in authors can allow PubSec to take care of all signature appearance generation and maintenance, but they may also continue to create their own signature appearances.</p>
   <p class="BodyLevel1">For more information on the PubSec API, see the <span class="FM_Italic">Acrobat and PDF Library API Reference</span>.</p>
   
   <h3><a name="TOC_Appearance_file"></a>Appearance file</h3>
   <p class="BodyLevel1">PubSec maintains a user-configurable database of signature appearances that can be used when signing a document. Users configure signature appearances using the preferences settings in <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>. The PubSec signing dialog boxes access this same database, thereby enabling end users to configure and choose the which signature appearance to use. The database is a PDF file called appearances.acrodata that, for Windows, is stored in the Application Data section of a user’s file system. An example path is:</p>
   <p class="FM_Indent1">C:\Documents and Settings\&lt;user&gt;\Application Data\Adobe\Acrobat\&lt;version&gt;\Security\appearances.acrodata</p>
   <p class="BodyLevel1">The PubSec signature appearance database is accessible via the <span class="FM_Courier">DSAPFile</span>&#160;interface of PubSecHFT. The <span class="FM_Courier">DSAPFile</span>&#160;interface exposes enough calls to allow maintenance of the database. Maintenance includes enumeration, addition, modification, and deletion calls:</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileAcquire</span>&#160;— Acquires the <span class="FM_Courier">DSAPFile</span>&#160;object for PubSec’s signature appearance database file. If the file has not already been acquired, it will be opened. PubSec acquires the database file whenever it is needed by PubSec, so handlers do not need to acquire this file unless it needs to access the file for other reasons. </p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileRelease</span>&#160;— Releases the file, with the potential to close and save the file. </p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileSave</span>&#160;– Saves the file if it is dirty, leaving the file open. </p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileGetCount</span>&#160;— Returns the number of configured appearance entries in the appearance database file.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileCanDeleteNthEntry</span>&#160;— Returns true if this entry in the <span class="FM_Courier">DSAPFile</span>&#160;can be edited (that is, is not read-only). Index values that are less then zero correspond to the default appearance, which is called the StandardText appearance in the user interface.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileGetNewNthName</span>&#160;— Gets a copy of the name of the Nth appearance object in the file. Use this when building a list of appearances for a user to choose from or edit.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileRemoveNthEntry</span> — Deletes the Nth appearance entry from the file.</p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileEditNthEntry</span>&#160;— Displays a user interface that allows the user to edit the Nth entry of the appearance file. Passing in indexes larger than the number of entries in the appearance file will create a new entry in addition to displaying the aforementioned user interface. </p>
   <p class="FM_Indent1"><span class="FM_CourierBold">DSAPFileCopyNthEntry</span>&#160;— Creates a copy of the Nth entry in the appearance file and appends the copy to the end of the list of signature appearances in the file. When copying default appearance entries, the resulting copy will not be considered a default appearance entry.</p>
   
   <h3><a name="TOC_Annotation_appearance"></a>Annotation appearance</h3>
   <p class="BodyLevel1">Signatures that are created by PubSec use the layered XObject approach. </p>
   <li style="list-style: decimal;">
   <p class="FM_5Head_Example">Signature appearance</p>
</li>
  </ol>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>q 1 0 0 1 0 0 cm /n0 Do Q</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>q 1 0 0 1 0 0 cm /n2 Do Q</p>
  <p class="BodyLevel1">PubSec correctly displays legacy signatures that use the n1, n3, and n4 layers, but support of these layers in future versions of <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;may be discontinued at any time. At run time, PubSec changes these layers to show the validity state. PubSec looks for the presence of these layers to determine if run-time appearance modification is required. In some situations, PubSec will specifically warn against the presence of signatures with these layers because, for conformance with various signed document standards, signature appearances should be static.</p>
  </div>
</body>
</html>