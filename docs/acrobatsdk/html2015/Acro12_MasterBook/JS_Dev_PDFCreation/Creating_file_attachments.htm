<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Creating file attachments</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJSGuide\JS_Dev_PDFCreation.fm" />
 <link rel="stylesheet" href="JS_Dev_PDFCreation.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.1.4.1.0_3";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_Dev_PDFCreation/Combining_and_extracting_files.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_Dev_PDFCreation/Cropping_and_rotating_pages.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > Developing Acrobat Applications Using JavaScript > Creating and Modifying PDF Documents > Creating and modifying PDF files" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="XREF_39711_Creating_File"></a>Creating file attachments</h3>
  <p class="BodyLevel1">Another way you can “combine files” is by attaching one or more files to your PDF document. This is useful for packaging a collection of documents and send them together by emailing the PDF file. This section describes the basic object, properties and methods of attaching and manipulating attachments.</p>
  <p class="BodyLevel1"><a name="IX_file_attachments"></a><a name="IX_methods"></a>These are the objects, properties and methods relevant to file attachments.</p>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:6.00pt; float:alignleft; width:100%; direction:ltr; max-width:460.80pt;" cellspacing="0">
   <tr style=" height : 22.50pt;">
   <th style="width : 180.000pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableHead">Name</p>
</th>
   <th style="width : 280.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableHead">Description</p>
</th>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.createDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Creates a file attachment.</p>
</td>
</tr>
   <tr style=" height : 35.00pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.dataObjects</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Returns an array of <span class="FM_Courier">Data</span>&#160;objects representing all files attached to the document.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.exportDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Saves the file attachment to the local file system</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.getDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Acquires the <span class="FM_Courier">Data</span> object of a particular attachment.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.importDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Attaches a file to the document.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.removeDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Removes a file attachment from the document.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.openDataObject()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Returns the Doc object for an attached PDF file.</p>
</td>
</tr>
   <tr style=" height : 35.00pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.getDataObjectContents()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Allows access to the contents of the file attachment associated with a <span class="FM_Courier">Data</span> object.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">Doc.setDataObjectContents()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Rights to the file attachment.</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">util.streamFromString()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Converts a stream from a string</p>
</td>
</tr>
   <tr style=" height : 22.50pt;">
   <td style="width : 180.000pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_CodeReference">util.stringFromStream()</p>
</td>
   <td style="width : 280.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Converts a string from a stream.</p>
</td>
</tr>
  </table>
</div>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example">Saving form data to and reading form data from an attachment</p>
</li>
  </ul>
  <p class="BodyLevel1">This example takes the response given in a text field of this document and appends it to an attached document. (Perhaps this document is circulating by email, and the user can add in their comments through a multiline text field.) This example uses four of the methods listed above.</p>
  <p class="FM_CodeReference">var v = this.getField(&quot;myTextField&quot;).value;</p>
  <p class="FM_CodeReference">// Get the contents of the file attachment with the name &quot;MyNotes.txt&quot;</p>
  <p class="FM_CodeReference">var oFile = this.getDataObjectContents(&quot;MyNotes.txt&quot;);</p>
  <p class="FM_CodeReference">// Convert the returned stream to a string</p>
  <p class="FM_CodeReference">var cFile = util.stringFromStream(oFile, &quot;utf-8&quot;);</p>
  <p class="FM_CodeReference">// Append new data at the end of the string</p>
  <p class="FM_CodeReference">cFile += &quot;\r\n&quot; + v;</p>
  <p class="FM_CodeReference">// Convert back to a stream</p>
  <p class="FM_CodeReference">oFile = util.streamFromString( cFile, &quot;utf-8&quot;);</p>
  <p class="FM_CodeReference">// Overwrite the old attachment</p>
  <p class="FM_CodeReference">this.setDataObjectContents(&quot;MyNotes.txt&quot;, oFile);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">// Read the contents of the file attachment to a multiline text field</p>
  <p class="FM_CodeReference">var oFile = this.getDataObjectContents(&quot;MyNotes.txt&quot;);</p>
  <p class="FM_CodeReference">var cFile = util.stringFromStream(oFile, &quot;utf-8&quot;);</p>
  <p class="FM_CodeReference">this.getField(&quot;myTextField&quot;).value = cFile;</p>
  <p class="BodyLevel1"><a name="IX_ECMA_357_Standard_see_E4X"></a><a name="IX_E4X"></a>Beginning with <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;8, the JavaScript interpreter includes E4X, the ECMA-357 Standard that provides native support of XML in JavaScript. See the document <span class="FM_Italic">ECMAScript for XML (E4X) Specification</span>&#160;for the complete specification of E4X. The next example illustrates the use of E4X and file attachments.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example"><a name="IX_accessing_XML_attachments"></a>Accessing an XML attachment using E4X</p>
</li>
  </ul>
  <p class="BodyLevel1">The following script describes a simple database system. The database is an XML document attached to the PDF file. The user enters the employee ID into a text field, the JavaScript accesses the attachment, finds the employee’s record and displays the contents of the retrieved record in form fields.</p>
  <p class="BodyLevel1">We have a PDF file, <span class="FM_Courier">employee.pdf</span>, with three form fields, whose names are <span class="FM_Courier">employee.id</span>, <span class="FM_Courier">employee.name.first</span>&#160;and <span class="FM_Courier">employee.name.last</span>. Attached to the PDF file is an XML document created by the following script:</p>
  <p class="FM_CodeReference">// Some E4X code to create a database of info</p>
  <p class="FM_CodeReference">x = &lt;employees/&gt;;</p>
  <p class="FM_CodeReference">function popXML(x,id,fname,lname)</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;y = &lt;a/&gt;;</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;y.employee.@id = id;</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;y.employee.name.first = fname;</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;y.employee.name.last = lname;</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;x.employee += y.employee;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">popXML(x,&quot;334234&quot;, &quot;John&quot;, &quot;Public&quot;);</p>
  <p class="FM_CodeReference">popXML(x,&quot;324234&quot;, &quot;Jane&quot;, &quot;Doe&quot;);</p>
  <p class="FM_CodeReference">popXML(x,&quot;452342&quot;, &quot;Davey&quot;, &quot;Jones&quot;);</p>
  <p class="FM_CodeReference">popXML(x,&quot;634583&quot;, &quot;Tom&quot;, &quot;Jefferson&quot;);</p>
  <p class="BodyLevel1">Copy and paste this code into the console and execute it. You’ll see the XML document as the output of this script. The output was copied and pasted into a document named <span class="FM_Courier">employee.xml</span>, and saved to the same folder as <span class="FM_Courier">employee.pdf</span>.</p>
  <p class="BodyLevel1">You can attach <span class="FM_Courier">employee.xml</span> using the UI, but the script for doing so is as follows:</p>
  <p class="FM_CodeReference">var thisPath = this.path.replace(/\.pdf$/, &quot;.xml&quot;);</p>
  <p class="FM_CodeReference">try { this.importDataObject(&quot;employees&quot;, thisPath); }</p>
  <p class="FM_CodeReference"> &#160;&#160;&#160;catch(e) { console.println(e) };</p>
  <p class="BodyLevel1">Of the three form fields in the document <span class="FM_Courier">employee.pdf</span>, only <span class="FM_Courier">employee.id</span>&#160;has any script. The following is a custom keystroke script:</p>
  <p class="FM_CodeReference">if (event.willCommit) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>try {<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Get the data contents of the &quot;employees&quot; attachment</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var oDB = this.getDataObjectContents(&quot;employees&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Convert to a string</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var cDB = util.stringFromStream(oDB);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Use the eval method to evaluate the string, you get an XML variable</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var employees = eval(cDB);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Retrieve record with the id input in the employee.id field</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var record = employees.employee.(@id == event.value);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// If the record is an empty string, or there was nothing entered...</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if ( event.value != &quot;&quot; &amp;&amp; record.toString() == &quot;&quot; ) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>app.alert(&quot;Record not found&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>event.rc = false;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Populate the two other fields</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>this.getField(&quot;employee.name.first&quot;).value = record.name.first;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>this.getField(&quot;employee.name.last&quot;).value = record.name.last;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} catch(e) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>app.alert(&quot;The DB is not attached to this document!&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>event.rc = false; &#160;&#160;&#160;&#160;&#160;&#160;&#160;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="FM_CodeReference">}</p>
  </div>
</body>
</html>