<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Define-event-list</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\Extended_API_For_Plugins\SaveAsXML\SaveAsXML_DeveloperInfo.fm" />
 <link rel="stylesheet" href="SaveAsXML_DeveloperInfo.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "7.1.1.1.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/SaveAsXML_DeveloperInfo/Walk-structure.htm">
 <meta name="brsnext" value="Acro12_MasterBook/SaveAsXML_DeveloperInfo/Define-proc-list.htm">
 <meta name="topic-breadcrumbs" content="Custom Configurations > Extending the Acrobat SaveAsXML Plug-in > About the Mapping Tables > Sample mapping table" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="IX_Define_event_list"></a><a name="XREF_51177_Define_event_list"></a>Define-event-list</h3>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Define-event-list Name = &quot;Block-events&quot;&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">Define-event-list</span>&#160;directive is similar to a macro or subroutine definition in most programming languages. It encapsulates and names a set of event directives. The directives are activated by a <span class="FM_Courier">Walk-structure</span>, <span class="FM_Courier">Walk-children</span>, or <span class="FM_Courier">Call-event-list</span>&#160;directive specifying the name of the event list in the <span class="FM_Courier">Use-event-list</span>&#160;attribute. </p>
  <h4><a name="TOC_Event2"></a><a name="IX_Event"></a>Event</h4>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Div&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Has-kids&quot; Event-class = &quot;Enter&quot;&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">Event</span>&#160;directive includes a set of attributes that are used to determine if the directives within it are to be processed. The directive in the sample is activated by entering (either from a parent element or from the prior peer element) a structural element (<span class="FM_Courier">Inf-type = &quot;Struct-elem&quot;</span>), where the element is role-mapped (<span class="FM_Courier">Name-type = &quot;Structure-role&quot;</span>) to <span class="FM_Courier">&quot;Div&quot;</span> and the element has children.</p>
  <p class="BodyLevel1">When an <span class="FM_Courier">Event</span>&#160;directive is activated, the directives within it (before its <span class="FM_Courier">&lt;/Event&gt;</span>&#160;tag) are processed. In this sample, the directive is:</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;Div&lt;/Emit-string&gt;</p>
  <p class="BodyLevel1">This issues the <span class="FM_Courier">&quot;Div&quot;</span> portion of the output element’s start-tag.</p>
  <h4><a name="TOC_Call_proc_list"></a><a name="IX_Call_proc_list"></a>Call-proc-list</h4>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Call-proc-list Name = &quot;Block-attributes&quot;&gt;&lt;/Call-proc-list&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">Call-proc-list</span>&#160;directive processes the properties associated with this structural element, using the processing list specified by the <span class="FM_Courier">Name</span>&#160;property on the <span class="FM_Courier">Call-proc-list</span>&#160;directive. </p>
  <p class="BodyLevel1">Although the event-list processing stops on the first match, the proc-list processing continues for every directive in the selected processing list. </p>
  <p class="BodyLevel1">The directive:</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="BodyLevel1">issues the closing <span class="FM_Courier">&quot;&gt;&quot;</span> on the output element’s start-tag.</p>
  <h4><a name="TOC_Walk_children"></a><a name="IX_Walk_children"></a><a name="XREF_34099_Walk_children"></a>Walk-children</h4>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Walk-children Use-event-list = &quot;Inline-events&quot;&gt;&lt;/Walk-children&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">Walk-children</span>&#160;directive is functionally identical to the <span class="FM_Courier">Walk-structure</span>&#160;directive, except that it walks the first level children of the current structural element.</p>
  <p class="BodyLevel1">The <span class="FM_Courier">&lt;/Event&gt;</span>&#160;tag indicates the end of the processing for this event. Remaining entries in this event-list follow a similar model.</p>
  <p class="BodyLevel1">The next <span class="FM_Courier">Event</span>&#160;included in this event-list handles events that are generated when exiting <span class="FM_Courier">Div</span>&#160;elements that have children. This generates the close tag on the output element.</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Div&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Has-kids&quot; Event-class = &quot;Exit&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;/Div&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="BodyLevel1">The final <span class="FM_Courier">Event</span>&#160;directive included in this event-list handles events that are generated on entering an element which has no children. It does not and should not contain a <span class="FM_Courier">Walk-children</span> directive.</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Div&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Empty&quot; Event-class = &quot;Enter&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;Div&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Call-proc-list Name = &quot;Block-attributes&quot;&gt;&lt;/Call-proc-list&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;/&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;/Define-event-list&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">&lt;/Define-event-list&gt;</span>&#160;tag ends the list of entries in the <span class="FM_Courier">Block-events</span>&#160;event-list. </p>
  <p class="BodyLevel1">The following event-list handles inline elements and is similar to the one above.</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Define-event-list Name = &quot;Inline-events&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Span&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Has-kids&quot; Event-class = &quot;Enter&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;Span&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Call-proc-list Name = &quot;Span-attributes&quot;&gt;&lt;/Call-proc-list&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Walk-children Use-event-list = &quot;Inline-events&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Walk-children&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Span&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Has-kids&quot; Event-class = &quot;Exit&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;/Span&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Struct-elem&quot; Name-type = &quot;Structure-role&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-name = &quot;Span&quot; Alternate-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Node-content = &quot;Empty&quot; Event-class = &quot;Enter&quot;&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;&amp;lt;Span&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Call-proc-list Name = &quot;Span-attributes&quot;&gt;&lt;/Call-proc-list&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;Emit-string ...&gt;/&amp;gt;&lt;/Emit-string&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="BodyLevel1">For event-lists that process structural elements that contain text or graphics, an <span class="FM_Courier">Event</span>&#160;entry similar to the following is required. The code in the SaveAsXML plug-in that traverses the logical structure tree also reports entering and exiting of the marked content containers (the wrappers around the low-level text and graphic content in the PDF page’s marking stream). The labels on these nodes are hidden in the Tags view in <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>. (The corresponding <span class="FM_Courier">Event</span>&#160;for a <span class="FM_Courier">Pds-mc</span>&#160;element where the content is <span class="FM_Courier">Image</span>&#160;is more complex. See the mapping tables distributed with SaveAsXML for complete examples.)</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Event&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inf-type = &quot;Pds-mc&quot; Name-type = &quot;Any&quot; Node-name = &quot;-none-&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Alternate-name = &quot;-none-&quot; Node-content = &quot;Has-text-only&quot;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Event-class = &quot;Enter&quot;&gt;</p>
  <p class="BodyLevel1">This <span class="FM_Courier">Event</span> directive processes the low-level marked content containers (<span class="FM_Courier">Inf-type = &quot;Pds-mc&quot;</span>) that actually contain the text (<span class="FM_Courier">Node-content = &quot;Has-text-only&quot;</span>). A corresponding exit directive is not required.</p>
  <h4><a name="TOC_Proc_doc_text"></a><a name="IX_Proc_doc_text"></a>Proc-doc-text</h4>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;Proc-doc-text do-br-substitution = &quot;do-br-substitution&quot;&gt;&lt;/Proc-doc-text&gt;</p>
  <p class="BodyLevel1">The <span class="FM_Courier">Proc-doc-text</span>&#160;directive converts the text from the active marked content container in the PDF page’s marking stream to the output encoding specified in the <span class="FM_Courier">Encode-out</span>&#160;attribute of the <span class="FM_Courier">Root</span>&#160;node and then emits the converted data to the output file. The <span class="FM_Courier">do-br-substitution</span>&#160;attribute controls whether the LF character is to be converted to a <span class="FM_Courier">&lt;BR/&gt;</span>&#160;tag in the output stream, converted to a space, or discarded.</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/Event&gt;</p>
  <p class="FM_CodeReference">&nbsp;&nbsp;&lt;/Define-event-list&gt;</p>
  </div>
</body>
</html>