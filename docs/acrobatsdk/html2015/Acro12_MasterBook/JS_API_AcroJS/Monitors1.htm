<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Monitors</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJS\JS_API_AcroJS.fm" />
 <link rel="stylesheet" href="JS_API_AcroJS.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.2.1.47";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_API_AcroJS/Monitor_properties.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_API_AcroJS/Monitors_methods.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > JavaScript for Acrobat API Reference > JavaScript API" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_57963_Monitors_Object"></a>Monitors</h2>
  <p class="BodyLevel1">A Monitors object is equivalent to a read-only array of <span class="FM_Courier">Monitor</span>&#160;objects, each one representing a single monitor. Elements can be accessed using the usual array notation and the <span class="FM_Courier">length</span> property.</p>
  <p class="BodyLevel1">The <span class="FM_Courier">app.monitors</span>&#160;property returns a Monitors object that includes every monitor connected to the user’s system. JavaScript code can loop through this array to get information about the available monitors and select one for a full screen or pop-up media player.</p>
  <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>The Monitors object returned by <span class="FM_Courier">app.monitors</span>&#160;is unsorted (the monitors are not listed in any particular order). </p>
  <p class="BodyLevel1">The Monitors object has a number of filter methods that select one or more monitors based on various criteria. All of the monitor selection options provided in the PDF file format are implemented as calls to these filter methods.</p>
  <p class="BodyLevel1">None of the filter methods modify the original Monitors object. They each return a new Monitors object, which normally contains one or more Monitor objects. If a single monitor matches the filtering criterion better than any other, the result Monitors object contains that monitor. If more than one monitor satisfies the filtering criterion equally (for example, for the <span class="FM_Courier">bestColor</span>&#160;method, if more than one monitor has the same greatest color depth), the result contains all of those monitors.</p>
  <p class="BodyLevel1">Several of the filter methods have an optional minimum or required parameter. If this parameter is specified and no monitor meets that minimum requirement, the result Monitors object is empty. Otherwise, if the original Monitors object was not empty, the result always contains at least one monitor.</p>
  <p class="BodyLevel1">Wherever a filter method refers to height, width, or area, the dimensions are in pixels.</p>
  <h5>Example</h5>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var monitors = app.monitors;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for ( var i = 0; i&lt; monitors.length; i++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>console.println(&quot;monitors[&quot;+i+&quot;].colorDepth = &quot;+monitors[i].colorDepth);</p>
  <p class="BodyLevel1"><span class="FM_Courier">Monitors.length</span>&#160;contains the number of elements in the Monitors object. For the Monitors object returned by <span class="FM_Courier">app.monitors</span>, this is the number of monitors in the user’s system. For a Monitors object returned by one of the filter methods, this number may be smaller.</p>
  </div>
</body>
</html>