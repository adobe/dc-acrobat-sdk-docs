<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Field</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJS\JS_API_AcroJS.fm" />
 <link rel="stylesheet" href="JS_API_AcroJS.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.2.1.32";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_API_AcroJS/FDF_methods.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_API_AcroJS/Field_versus_widget_attributes.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > JavaScript for Acrobat API Reference > JavaScript API" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_36795_Field_Object"></a>Field</h2>
  <p class="BodyLevel1">This object represents an <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;form field (that is, a field created using the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;form tool or the Doc <span class="FM_Courier">addField</span>&#160;method). In the same manner that a form author can modify an existing field’s properties, such as the border color or font, the JavaScript user can use the Field object to perform the same modifications. </p>
  <p class="BodyLevel1">Before a field can be accessed, it must be bound to a JavaScript variable through a method provided by the Doc. More than one variable may be bound to a field by modifying the field’s object properties or accessing its methods. This affects all variables bound to that field. </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var f = this.getField(&quot;Total&quot;);</p>
  <p class="BodyLevel1">This example allows the script to manipulate the form field “Total” by means of the variable <span class="FM_Courier">f</span>. </p>
  <p class="BodyLevel1">Fields can be arranged hierarchically within a document. For example, form fields with names like “FirstName” and “LastName” are called <span class="FM_Italic">flat names</span>&#160;and there is no association between them. By changing the field names, a hierarchy of fields within the document can be created. </p>
  <p class="BodyLevel1">For example, “Name.First” and “Name.Last” forms a tree of fields. The period (‘.’) separator in <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;forms denotes a hierarchy shift. “Name” in these fields is the parent; “First” and “Last” are the children. Also, the field “Name” is an <span class="FM_Italic">internal</span>&#160;field because it has no visible appearance. “First” and “Last” are <span class="FM_Italic">terminal</span> fields that appear on the page.</p>
  <p class="BodyLevel1"><uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;form fields that share the same name also share the same value. Terminal fields can have different presentations of that data. For example, they can appear on different pages, be rotated differently, or have a different font or background color, but they have the same value. Therefore, if the value of one presentation of a terminal field is modified, all others with the same name are updated automatically.</p>
  <p class="BodyLevel1">Each presentation of a terminal field is referred to as a <span class="FM_Italic">widget</span>. An individual widget does not have a name but is identified by index (0-based) within its terminal field. The index is determined by the order in which the individual widgets of this field were created (and is unaffected by tab-order). </p>
  <p class="BodyLevel1">You can determine the index for a specific widget by using the Fields navigation tab in <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>. The index is the number that follows the ‘#’ sign in the field name shown. (In <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;6.0 or later, the widget index is displayed only if the field has more than one widget.) You can double-click an entry in the Fields panel to go to the corresponding widget in the document. Alternatively, if you select a field in the document, the corresponding entry in the Fields panel is highlighted.</p>
  <p class="BodyLevel1">Beginning with <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;6.0, <span class="FM_Courier">getField</span>&#160;can be used to retrieve the Field object of one individual widget of a field. This notation consists of appending a “.” (period) followed by the widget index to the field name passed. When this approach is used, the Field object returned by <span class="FM_Courier">getField</span>&#160;encapsulates only one individual widget. You can use the Field objects returned this way anywhere you would use a Field object returned by passing the unaltered field name. However, the set of nodes that are affected may vary, as shown in the following table.</p>
  <p class="BodyLevel1">Beginning with Acrobat 8.0, the LiveCycle Reader Extensions Field right is checked for <span class="FM_Courier">Field</span>&#160;objects only if the JavaScript code is executed outside the PDF file (from the JavaScript console, through batch execution, or through <span class="FM_Courier">JSObject</span>).</p>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-left:4.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:4.00pt; float:alignleft; width:100%; direction:ltr; max-width:460.80pt;" cellspacing="0">
   <tr style=" height : 33.00pt;">
   <th style="width : 118.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableHead">Action</p>
</th>
   <th style="width : 194.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableHead">Field object that represents all <br />widgets</p>
</th>
   <th style="width : 147.600pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableHead">Field object that represents one specific widget</p>
</th>
</tr>
   <tr style=" height : 33.00pt;">
   <td style="width : 118.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Get a widget property</p>
</td>
   <td style="width : 194.400pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Gets the property of widget # 0.</p>
</td>
   <td style="width : 147.600pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Gets the property of the widget.</p>
</td>
</tr>
   <tr style=" height : 70.50pt;">
   <td style="width : 118.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Set a widget property</p>
</td>
   <td style="width : 194.400pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Sets the property of all widgets that are children of that field. <br />(The <span class="FM_Courier">rect</span>&#160;property and the <span class="FM_Courier">setFocus</span>&#160;method are exceptions that apply to widget # 0. See example below.)</p>
</td>
   <td style="width : 147.600pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Sets the property of the widget.</p>
</td>
</tr>
   <tr style=" height : 33.00pt;">
   <td style="width : 118.800pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Get a field property</p>
</td>
   <td style="width : 194.400pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Gets the property of the field.</p>
</td>
   <td style="width : 147.600pt; border-bottom-style: solid; border-bottom-width: 0px; border-bottom-color: #999999; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Gets the property of the parent field.</p>
</td>
</tr>
   <tr style=" height : 33.00pt;">
   <td style="width : 118.800pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Set a field property</p>
</td>
   <td style="width : 194.400pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Sets the property of the field.</p>
</td>
   <td style="width : 147.600pt; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">Sets the property of the parent field.</p>
</td>
</tr>
  </table>
</div>
  <p class="BodyLevel1">The following example changes the <span class="FM_Courier">rect</span>&#160;property of the second radio button (the first would have index 0) of the field “my radio”.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var f = this.getField(&quot;my radio.1&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>f.rect = [360, 677, 392, 646];</p>
  </div>
</body>
</html>