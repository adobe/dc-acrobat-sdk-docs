<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Events methods</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Acrobat_SDK\Acrobat_12.0 - Nov 2015\docs_fm\JavaScript\AcroJS\JS_API_AcroJS.fm" />
 <link rel="stylesheet" href="JS_API_AcroJS.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "5.2.1.30.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/JS_API_AcroJS/Events2.htm">
 <meta name="brsnext" value="Acro12_MasterBook/JS_API_AcroJS/FDF.htm">
 <meta name="topic-breadcrumbs" content="JavaScript > JavaScript for Acrobat API Reference > JavaScript API > Events" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Events methods</h3>
  <p class="BodyLevel1"><a href="#XREF_48718_add"><span class="FM_HyperText">add</span></a></p>
  <p class="BodyLevel1"><a href="#XREF_27002_dispatch"><span class="FM_HyperText">dispatch</span></a></p>
  <p class="BodyLevel1"><a href="#XREF_18138_remove"><span class="FM_HyperText">remove</span></a></p>
  <h4><a name="TOC_add"></a><a name="XREF_48718_add"></a>add</h4>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-left:4.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:4.00pt; float:alignleft; width:100%; direction:ltr; max-width:118.80pt;" cellspacing="0">
   <tr style=" height : 24.98pt;">
   <td style="width : 32.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">6.0</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
</tr>
  </table>
</div>
  <p class="BodyLevel1">Adds any number of <span class="FM_Courier">EventListener</span>&#160;objects to the dispatch table for this <span class="FM_Courier">Events</span>&#160;object. Any previous listeners are preserved and when an event is triggered, all matching listener methods are called.</p>
  <p class="BodyLevel1">The standard event dispatcher first calls any <span class="FM_Courier">onEveryEvent</span>&#160;methods in the order they were added, then calls any <span class="FM_Courier">on</span>&#160;events for the specific event being dispatched, also in the order they were added. Finally, it sets a very short timer (one millisecond) to call any <span class="FM_Courier">after</span>&#160;events. When that timer is triggered, the <span class="FM_Courier">after</span>&#160;events are called in the same order described for on events.</p>
  <p class="BodyLevel1">See the description of <span class="FM_Courier">on</span>&#160;and <span class="FM_Courier">after</span>&#160;events in the introductory paragraphs to <a href="EventListener.htm#XREF_12169_EventListener"><span class="FM_HyperText_Courier">EventListener</span></a>&#160;object. </p>
  <p class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>If you try to add the same EventListener twice, the second attempt is ignored. If you add an EventListener from inside an event method, the new listenerâ€™s methods will be called as part of the dispatching for the current event.</p>
  <h5>Parameters</h5>
  <p class="BodyLevel1">Any number of parameters, each one an <span class="FM_Courier">EventListener</span> object.</p>
  <h5>Example</h5>
  <p class="BodyLevel1">Add an EventListener for the onPlay event. The player is a MediaPlayer object.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>player.events.add</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>({</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>onPlay: function() { console.println( &quot;onPlay&quot; ); }</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>});</p>
  <p class="BodyLevel1">See also <a href="#XREF_18138_remove"><span class="FM_HyperText_Courier">remove</span></a>.</p>
  <h4><a name="TOC_dispatch1"></a><a name="XREF_27002_dispatch"></a>dispatch</h4>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-left:4.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:4.00pt; float:alignleft; width:100%; direction:ltr; max-width:118.80pt;" cellspacing="0">
   <tr style=" height : 24.98pt;">
   <td style="width : 32.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">6.0</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
</tr>
  </table>
</div>
  <p class="BodyLevel1">When a MediaPlayer triggers an event, the Multimedia plug-in creates an <span class="FM_Courier">event</span>&#160;object and calls <span class="FM_Courier">MediaPlayer.events.dispatch(event)</span>. Similarly, a ScreenAnnot calls <span class="FM_Courier">ScreenAnnot.events.dispatch(event)</span>.</p>
  <p class="BodyLevel1">The dispatch method is the only part of the event dispatching system that the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;Multimedia plug-in calls directly. You can substitute your own, entirely different event dispatching system by providing your own <span class="FM_Courier">MediaPlayer.events</span>&#160;object with its own <span class="FM_Courier">dispatch</span>&#160;method. </p>
  <p class="BodyLevel1">The <span class="FM_Courier">dispatch</span>&#160;method is responsible for calling each of the EventListeners associated with the event, as identified by <span class="FM_Courier">oMediaEvent.name.</span>&#160;In most cases, a PDF file will not provide its own <span class="FM_Courier">dispatch</span>&#160;method but will use the standard event dispatching system.</p>
  <h5>Parameters</h5>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-left:4.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:4.00pt; float:alignleft; width:100%; direction:ltr; max-width:460.80pt;" cellspacing="0">
   <tr style=" height : 20.50pt;">
   <td style="width : 86.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody"><span class="FM_Courier">oMediaEvent</span>&#160;</p>
</td>
   <td style="width : 374.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">An <span class="FM_Courier">event</span> object.</p>
</td>
</tr>
  </table>
</div>
  <p class="BodyLevel1">If you write your own <span class="FM_Courier">dispatch</span>&#160;method, note that <span class="FM_Courier">oMediaEvent.name</span>&#160;may contain spaces. The standard <span class="FM_Courier">dispatch</span>&#160;method makes a copy of <span class="FM_Courier">oMediaEvent.name</span>&#160;in <span class="FM_Courier">oMediaEvent.media.id</span>&#160;with the spaces removed, to allow the name to be used directly as part of a JavaScript event method name.</p>
  <p class="BodyLevel1">Also, if you write your own <span class="FM_Courier">dispatch</span>&#160;method, it will be called synchronously when each event occurs, and any processing you do will be subject to the same limitations as described for <span class="FM_Courier">on</span>&#160;event methods (see <a href="EventListener.htm#XREF_12169_EventListener"><span class="FM_HyperText_Courier">EventListener</span></a>&#160;object). In particular, the method cannot make any calls to a <span class="FM_Courier">MediaPlayer</span>&#160;object nor do anything that can indirectly cause a MediaPlayer method to be called. </p>
  <p class="BodyLevel1">The <span class="FM_Courier">dispatch</span>&#160;method is not usually called directly from JavaScript code, although it can be. </p>
  <h5>Example</h5>
  <p class="BodyLevel1">Create a new media player with a custom event dispatcher. This is an advanced technique that would rarely be used in a typical PDF JavaScript.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var player = doc.media.newPlayer(</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>events:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dispatch: function( e )</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>console.println( 'events.dispatch' + e.toSource() );</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>});</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Synthesize and dispatch a Script event, as if one had been <br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// encountered while the media was playing. With the standard event<br /><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// dispatcher, this will call any and all event listeners that have been </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// added for this event. With the custom dispatcher above, it will log a </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// message to the console.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var event = new Event;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>event.name = &quot;Script&quot;;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>event.media = { command: &quot;test&quot;, param: &quot;value&quot; };</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>player.events.dispatch( event );</p>
  <h4><a name="TOC_remove2"></a><a name="XREF_18138_remove"></a>remove</h4>
<div width="100%" align="left">
  <table dir="ltr" style=" border-spacing:0; padding-left:4.00pt; padding-top:6.00pt; padding-right:6.00pt; padding-bottom:4.00pt; float:alignleft; width:100%; direction:ltr; max-width:118.80pt;" cellspacing="0">
   <tr style=" height : 24.98pt;">
   <td style="width : 32.400pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-left-style: solid; border-left-width: 1px; border-left-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">6.0</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
   <td style="width : 28.800pt; border-top-style: solid; border-top-width: 1px; border-top-color: #000000; border-right-style: solid; border-right-width: 1px; border-right-color: #000000; border-bottom-style: solid; border-bottom-width: 1px; border-bottom-color: #000000; vertical-align : top;padding-left: 6.00pt; padding-top: 3.00pt; padding-right: 6.00pt; padding-bottom: 3.00pt;">
   <p class="FM_TableBody">&nbsp;</p>
</td>
</tr>
  </table>
</div>
  <p class="BodyLevel1">The method removes one or more EventListeners that were previously added with <span class="FM_Courier">Events.add</span>. If you use an object literal directly in <span class="FM_Courier">Events.add</span>, you will not be able to remove that listener using <span class="FM_Courier">Media.remove</span>&#160;because there is no way to pass a reference to the same object. To be able to remove an EventListener, you must pass it to the <span class="FM_Courier">add</span>&#160;method in a variable instead of as an object literal, so that you can pass the same variable to <span class="FM_Courier">remove</span>, as in the example below.</p>
  <p class="BodyLevel1">The <span class="FM_Courier">remove</span>&#160;method can be called from inside an event method to remove any EventListener, even the listener that the current event method is part of. The current event method continues executing, but no other event methods in the same EventListener object will be called.</p>
  <h5>Parameters</h5>
  <p class="BodyLevel1">Any number of <span class="FM_Courier">EventListener</span>&#160;objects. </p>
  <h5>Example</h5>
  <p class="BodyLevel1">Assume <span class="FM_Courier">player</span> is a MediaPlayer object.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>var listener = { afterStop: function() { app.alert(&quot;Stopped!&quot;); } }</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>player.events.add( listener );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// Add listener</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>.....</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>player.events.remove( listener );&nbsp;&nbsp;&nbsp;// Later, remove it</p>
  </div>
</body>
</html>