<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Using callback functions</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Pimech.fm" />
 <link rel="stylesheet" href="Plugins_Pimech.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.2.1_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Pimech/Summarizing_a_plug-inâ€™s_life_cycle.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Pimech/Notifications.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Understanding Plug-ins" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="IX_using_callback_functions"></a><a name="IX_core_API_1"></a><a name="IX_callbacks_1"></a><a name="IX_callbacks"></a><a name="XREF_20671_8_7_Callbacks"></a>Using callback functions</h2>
  <p class="BodyLevel1"><uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;invokes callback functions that you define to perform a specific task. For example, when a user clicks a button located on a toolbar, a callback method is invoked. (See <a href="../Plugins_Toolbutton/Creating_toolbar_button_callback_functions.htm#XREF_31936_Creating_toolbar">Creating toolbar button callback functions</a>.)</p>
  <p class="BodyLevel1">To create a callback function, you can invoke the <span class="FM_Courier">ASCallbackCreateProto</span>, <span class="FM_Courier">ASCallbackCreateReplacement</span>, and <span class="FM_Courier">ASCallbackCreateNotification</span>&#160;methods to convert functions into callback functions and to perform type checking. This enables the compiler to determine whether the correct prototypes are used for a specific callback function. For information about these methods, see the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span>.</p>
  <p class="BodyLevel1"><a name="IX_debug_macro"></a>Type checking only occurs if the <span class="FM_Courier">DEBUG</span> macro is set to 1 at the time your plug-in is compiled. Be sure to set it appropriately in your development environment and remove it when you build the shipping version of your plug-in.</p>
  <p class="BodyLevel1">The following code example shows the syntax to create a callback function:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVExecuteProc ExecProcPtr = NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ExecProcPtr= ASCallbackCreateProto(AVExecuteProc, &amp;ShowMessage);</p>
  <p class="BodyLevel1">The <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro returns a callback of the specified type that invokes the user-defined function whose address is passed as the second argument. In this example, the <span class="FM_Courier">ShowMessage</span>&#160;function is converted to a callback function (the <span class="FM_Courier">ShowMessage</span>&#160;function is a user-defined function that is invoked when a specific action occurs).</p>
  <p class="BodyLevel1">The <span class="FM_Courier">ASCallbackCreateProto</span>&#160;macro returns a pointer to a function that can be invoked by a plug-in or by <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>. Use the <span class="FM_Courier">ASCallbackDestroy</span>&#160;method to dispose of a callback that is no longer required.</p>
  <p class="BodyLevel1">All callbacks must be declared with Pascal calling conventions. To make your code portable between platforms, declare all your callback functions using the <span class="FM_Courier">ACCB1</span>&#160;and <span class="FM_Courier">ACCB2</span> macros:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>static ACCB1 const char* ACCB2 ShowMessage(Thing*&nbsp;foo);</p>
  </div>
</body>
</html>