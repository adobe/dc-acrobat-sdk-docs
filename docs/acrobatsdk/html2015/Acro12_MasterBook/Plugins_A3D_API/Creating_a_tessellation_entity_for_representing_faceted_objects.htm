<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Creating a tessellation entity for representing faceted objects</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_A3D_API.fm" />
 <link rel="stylesheet" href="Plugins_A3D_API.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.19.4_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_A3D_API/Creating_a_3D_annotation_that_references_the_PRC_file.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Exceptions/Handling_Exceptions1.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Parsing and Creating PRC Files" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_79448_Creating_a_PRC"></a>Creating a tessellation entity for representing faceted objects</h2>
  <p class="BodyLevel1">This section explains how to add tessellation base data to an existing representation item. The Acrobat 3D SDK defines a dedicated type you can use to create faceted entities. </p>
  <h6>Create the tessellation base data</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTessBaseData</span>&#160;structure and set its member values to represent the facets. The following explanation assumes facets are defined as triangles, although you could define facets having more than three points.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_uiCoordSize</span>. Set this member to the number of coordinates required to represent all facets in the object. This value is calculated as 9 * <span class="FM_Courier">facetSize</span>. The 9 multiplier is the number of points in each facet (3) times the number of coordinates in each point (3). The <span class="FM_Courier">facetSize</span>&#160;variable represents the number of facets in the object. </p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_pdCoords</span>. Set this member to an array of <span class="FM_Italic">N</span>&#160;<span class="FM_Courier">A3DDouble</span>&#160;entries, where <span class="FM_Italic">N</span>&#160;is the value calculated for the <span class="FM_Courier">m_uiCoordSize</span> member.</p>
</li>
  </ul>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add coordinates for each vertex of each facet to the array referenced by the <span class="FM_Courier">m_pdCoords</span>&#160;member. The X, Y, and Z coordinates for each vertex are represented in sequential entries in the array, as shown in this example:</p>
  <p class="FM_CodeReference">sTessBaseData.m_pdCoords[j++] = x;</p>
  <p class="FM_CodeReference">sTessBaseData.m_pdCoords[j++] = y;</p>
  <p class="FM_CodeReference">sTessBaseData.m_pdCoords[j++] = z;</p>
  <h6>Create the tessellation facet data</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTess3DData</span> structure and set its members to represent the facet normals:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_uiNormalSize</span>. Set this member to the size of the array required to represent the normals for all facets in the objects. This is calculated as 3 * <span class="FM_Courier">facetSize</span>. The 3 multiplier is the number of cordinates to represent each vector. </p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_pdNormals</span>. Set this member to an array of <span class="FM_Italic">N</span>&#160;<span class="FM_Courier">A3DDouble</span>&#160;entries, where <span class="FM_Italic">N</span>&#160;is the value calculated for the <span class="FM_Courier">m_uiNormalSize</span> member.</p>
</li>
   <li>
   <p class="FM_Bullet2"><span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiTriangulatedIndexSize</span>. Set this member to the number of entries required to represent the indexes associated with each facet in the objects. Each facet can have one to four indexes that reference texture coordinates, one index that references a facet normal, and three indexes that reference vertices. Normals are read from the <span class="FM_Courier">m_pdNormals</span>&#160;array, and textures are read from the <span class="FM_Courier">m_pdTextureCoords</span> array.</p>
</li>
   <li>
   <p class="FM_Bullet2"><span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_puiTriangulatedIndexes</span>. Set this member to an array of <span class="FM_Italic">N</span>&#160;<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">ASUns32</span>&#160;entries, where <span class="FM_Italic">N</span>&#160;is the number of entries in the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiTriangulatedIndexSize</span>&#160;member. This array contains the indexes of the points (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdCoords</span>), normals (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdNormals</span>), and texture arrays for each faceâ€™s triangulated representation. The entries in this array correspond to the contents in the <span class="FM_Courier">A3DTessFaceData</span>&#160;entity. </p>
</li>
  </ul>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add the indexes for each facet, considering the number of entries to represent each facet. Each facet contains the following sequential representations in this array:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">(Optional) Index of the first texture in the array referenced by the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdTextureCoords</span>&#160;member. This entry can be followed by three more entries for additional texture indexes.</p>
</li>
   <li>
   <p class="FM_Bullet2">Index of the facet normal in the array referenced by the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdNormals</span> member.</p>
</li>
   <li>
   <p class="FM_Bullet2">Index of the first facet vertex in the array referenced by the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdCoords</span> member.</p>
</li>
   <li>
   <p class="FM_Bullet2">Index of the second facet vertex in the array referenced by the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdCoords</span> member.</p>
</li>
   <li>
   <p class="FM_Bullet2">Index of the third facet vertex in the array referenced by the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pdCoords</span> member.</p>
</li>
  </ul>
  <p class="FM_Indent1">In the following example for STL data, <span class="FM_Courier">facetSize</span>&#160;is set to 0 for the first facet represented by the array and to 1 for the second facet in the array. </p>
  <p class="FM_CodeReference">sTess3DData.m_puiTriangulatedIndexes[4 * facetSize] = i;</p>
  <p class="FM_CodeReference">sTess3DData.m_puiTriangulatedIndexes[4 * facetSize + 1] = j;</p>
  <p class="FM_CodeReference">sTess3DData.m_puiTriangulatedIndexes[4 * facetSize+2] = j + 3;</p>
  <p class="FM_CodeReference">sTess3DData.m_puiTriangulatedIndexes[4 * facetSize+3] = j + 6;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add the coordinates of each facet normal to the array referenced by the <span class="FM_Courier">m_pdNormals</span>&#160;member. The X, Y, and Z coordinates for each vector are represented in sequential entries in the array, as shown in this example:</p>
  <p class="FM_CodeReference">sTess3DData.m_pdNormals[i++] = x;</p>
  <p class="FM_CodeReference">sTess3DData.m_pdNormals[i++] = y;</p>
  <p class="FM_CodeReference">sTess3DData.m_pdNormals[i++] = z;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each face, create an <span class="FM_Courier">A3DTessFaceData</span> entity and set its member values as follows:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_usUsedEntitiesFlags</span>. Set this member to an enumeration that specifies the entities used in the current face tessellation. For example, the <span class="FM_Courier">kA3DTessFaceDataTriangleOneNormal</span>&#160;enumeration specifies that the face data is a triangle with a single normal facet. </p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_uiSizesTriangulatedSize</span>. Set this member to the number of entries in the array referenced by the <span class="FM_Courier">m_puiSizesTriangulated</span> member.</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_puiSizesTriangulated</span>. Set this value to the repetition sequence applied to the <span class="FM_Courier">m_usUsedEntitiesFlags</span>&#160;member. A single entry with a value of 1 indicates that the first flag in <span class="FM_Courier">m_usUsedEntitiesFlags</span>&#160;applies to all face data. </p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_uiStartTriangulated</span>. Set this value to the starting index for the wire in the array of point indexes of the <span class="FM_Courier">A3DTess3DData</span> entity.</p>
</li>
  </ul>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the <span class="FM_Courier">A3DTess3DData</span>&#160;structureâ€™s <span class="FM_Courier">m_psFaceTessData</span>&#160;member to reference an array that in turn references each face that applied to the facets. Set the <span class="FM_Courier">m_uiFaceTessSize</span>&#160;member to the number of faces in this array. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare a pointer to a null <span class="FM_Courier">A3DTess3D</span> entity.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the tessellation data by invoking the <span class="FM_Courier">A3DTess3DCreate</span>&#160;function, providing the location of the <span class="FM_Courier">A3DTess3DData</span>&#160;structure as the first argument and the location of the <span class="FM_Courier">A3DTess3D</span>&#160;pointer as the second argument. </p>
  <p class="FM_CodeReference">A3DTess3D* pTess3D = NULL;</p>
  <p class="FM_CodeReference">A3DTess3DCreate(&amp;sTess3DData, &amp;pTess3D);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>8.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the tessellation base data with in the <span class="FM_Courier">A3DTess3D</span>&#160;entity by invoking the <span class="FM_Courier">A3DTessBaseSet</span>&#160;function. </p>
  <p class="FM_CodeReference">A3DTessBaseSet(&amp;pTess3D, &amp;sTessBaseData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>9.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add the <span class="FM_Courier">A3DTess3D</span>&#160;data to a representation item. (See <a href="Creating_representation_item_PRC_entities.htm#XREF_60869_Creating"><span class="FM_HyperText">Creating representation item PRC entities</span></a>.)</p>
  <p class="BodyLevel1">The following code sample creates an A3D tessellation entity from a file that conforms to the STL format. It packages this entity with a poly Brep model representation item. STL is a file format native to the stereolithography CAD software created by 3D Systems. </p>
  <p class="FM_CodeReference">// Create structure for facet data</p>
  <p class="FM_CodeReference">A3DTessBaseData sTessBaseData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sTessBaseData);</p>
  <p class="FM_CodeReference">sTessBaseData.m_uiCoordSize = 9 * facetSize;</p>
  <p class="FM_CodeReference">sTessBaseData.m_pdCoords =</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(A3DDouble*)allocCllBck(sTessBaseData.m_uiCoordSize * sizeof(A3DDouble));</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// Create structure for nomal vector data</p>
  <p class="FM_CodeReference">A3DTess3DData sTess3DData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sTess3DData);</p>
  <p class="FM_CodeReference">sTess3DData.m_uiNormalSize = 3 * facetSize;</p>
  <p class="FM_CodeReference">sTess3DData.m_pdNormals = </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(A3DDouble*)allocCllBck(sTess3DData.m_uiNormalSize * sizeof(A3DDouble));</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// Total amount of indexes is calculated as follows:</p>
  <p class="FM_CodeComment">// (one normal + one triangle (3 points)) * Number of facets </p>
  <p class="FM_CodeReference">sTess3DData.m_uiTriangulatedIndexSize = 4 * facetSize;</p>
  <p class="FM_CodeReference">sTess3DData.m_puiTriangulatedIndexes =</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(ASUns32*)allocCllBck(sTess3DData.m_uiTriangulatedIndexSize *</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sizeof(ASUns32));</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// Set up variables used in reading STL data.</p>
  <p class="FM_CodeReference">A3DUTF8Char name[100];</p>
  <p class="FM_CodeReference">A3DUTF8Char dummy[100];</p>
  <p class="FM_CodeReference">A3DDouble x, y, z;</p>
  <p class="FM_CodeReference">ASInt32 iRet = 0;</p>
  <p class="FM_CodeReference">ASUns32 i = 0;</p>
  <p class="FM_CodeReference">ASUns32 j = 0;</p>
  <p class="FM_CodeReference">const A3DUTF8Char* pcName = NULL;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">rewind(stlFile);</p>
  <p class="FM_CodeReference">curr = 0;</p>
  <p class="FM_CodeReference">facetSize = 0;</p>
  <p class="FM_CodeReference">memset(sBuffer, 0, A3D_MAX_BUFFER);</p>
  <p class="FM_CodeReference">while(fgets(sBuffer, A3D_MAX_BUFFER, stlFile) &gt; 0) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sscanf(sBuffer, &quot;%s&quot;, key);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if(!_stricmp(key, &quot;solid&quot;)) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>iRet = sscanf(sBuffer, &quot;%s %s&quot;, key, name);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (iRet != 2)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sprintf(name,&quot;unnamed&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} else if (!_stricmp(key, &quot;facet&quot;)) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>iRet = sscanf(sBuffer,&quot;%s %s %lf %lf %lf&quot;,key,dummy,&amp;x,&amp;y,&amp;z);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_puiTriangulatedIndexes[4 * facetSize] = i;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_puiTriangulatedIndexes[4 * facetSize + 1] = j;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_puiTriangulatedIndexes[4 * facetSize + 2] = j + 3;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_puiTriangulatedIndexes[4 * facetSize + 3] = j + 6;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_pdNormals[i++] = x;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_pdNormals[i++] = y;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTess3DData.m_pdNormals[i++] = z;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>facetSize++;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>} else if (!_stricmp(key, &quot;vertex&quot;)) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>iRet = sscanf(sBuffer, &quot;%s %lf %lf %lf&quot;, key, &amp;x, &amp;y, &amp;z);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTessBaseData.m_pdCoords[j++] = x;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTessBaseData.m_pdCoords[j++] = y;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sTessBaseData.m_pdCoords[j++] = z;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>curr += strlen(sBuffer);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>prgIncCllBck(curr);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>memset(sBuffer, 0, A3D_MAX_BUFFER);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">fclose(stlFile);</p>
  <p class="FM_CodeReference">prgEndCllBck();</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// one can consider that STL consists in one single face made of total amount of triangles </p>
  <p class="FM_CodeReference">A3DTessFaceData sTessFaceData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sTessFaceData);</p>
  <p class="FM_CodeReference">sTessFaceData.m_usUsedEntitiesFlags = kA3DTessFaceDataTriangleOneNormal; </p>
  <p class="FM_CodeReference">sTessFaceData.m_uiSizesTriangulatedSize = 1; /* size of the next array */</p>
  <p class="FM_CodeReference">sTessFaceData.m_puiSizesTriangulated = &amp;facetSize;</p>
  <p class="FM_CodeReference">sTessFaceData.m_uiStartTriangulated = 0;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// so, only one face </p>
  <p class="FM_CodeReference">sTess3DData.m_uiFaceTessSize = 1;</p>
  <p class="FM_CodeReference">sTess3DData.m_psFaceTessData = &amp;sTessFaceData;</p>
  <p class="FM_CodeReference">A3DTess3D* pTess3D = NULL;</p>
  <p class="FM_CodeReference">A3DTess3DCreate(&amp;sTess3DData, &amp;pTess3D);</p>
  <p class="FM_CodeReference">A3DTessBaseSet(pTess3D, &amp;sTessBaseData);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// create a PolyBrepModel representation item </p>
  <p class="FM_CodeReference">A3DRiPolyBrepModel *pRiPolyBrepModel = NULL;</p>
  <p class="FM_CodeReference">A3DRiPolyBrepModelData sPolyBrepModelData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sPolyBrepModelData);</p>
  <p class="FM_CodeReference">sPolyBrepModelData.m_bIsClosed = TRUE;</p>
  <p class="FM_CodeReference">A3DRiPolyBrepModelCreate(&amp;sPolyBrepModelData, &amp;pRiPolyBrepModel);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">// assign the tessellation to the PolyBrepModel </p>
  <p class="FM_CodeReference">A3DRiRepresentationItemData sRiData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sRiData);</p>
  <p class="FM_CodeReference">sRiData.m_pTessBase = pTess3D;</p>
  <p class="FM_CodeReference">A3DRiRepresentationItemSet(pRiPolyBrepModel, &amp;sRiData);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">&nbsp;</p>
 </div>
</body>
</html>