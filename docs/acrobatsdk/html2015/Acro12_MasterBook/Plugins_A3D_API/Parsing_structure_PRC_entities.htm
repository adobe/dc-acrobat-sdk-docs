<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Parsing structure PRC entities</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_A3D_API.fm" />
 <link rel="stylesheet" href="Plugins_A3D_API.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.19.3.0_4";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_A3D_API/Initializing_the_Acrobat_3D_API.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_A3D_API/Parsing_representation_items.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Parsing and Creating PRC Files > Parsing a PRC file" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Parsing structure PRC entities </h3>
  <p class="BodyLevel1">The <span class="FM_HyperText"><a href="./API_References/PRCReference/3D_API_Reference/index.html">Acrobat 3D API Reference</a></span>&#160;groups the PRC entities that provide structure to the PRC document into the structure module. The PRC entities in the structure module are described here: </p>
  <p class="FM_Indent1"><span class="FM_Bold">Model file:</span> Is a root PRC entity. There is only one model file in a PRC file.</p>
  <p class="FM_Indent1"><span class="FM_Bold">Product occurrence:</span>&#160;Can contain multiple child product occurrences and one part definition. It can also reference other product occurrences used as prototypes or external data.</p>
  <p class="FM_Indent1"><span class="FM_Bold">Part definition:</span> Contains representation items.</p>
  <p class="FM_Indent1"><span class="FM_Bold">Filter:</span>&#160;Specifies inclusion or exclusion of topology, geometry, tessellation, or graphic entities, based on the entity's layer or entity type. </p>
  <h6><a name="XREF_40907_Parse_the_model"></a>Parse the model file data</h6>
  <p class="FM_Step"><a name="IX_A3DAsmModelFileLoadFromFi"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Load the PRC file into memory by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DAsmModelFileLoadFromFile</span>&#160;function. In the following example, the <span class="FM_Courier">acFileName</span>&#160;argument points to an <span class="FM_Courier">A3DUTF8Char</span>&#160;array that contains the name of the PRC file, the second parameter must be <span class="FM_Courier">NULL</span>, and the <span class="FM_Courier">p</span>&#160;pointer references a null <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DAsmModelFile</span>&#160;object in which the <uservariable x-value="Acrobat&nbsp;3D&nbsp;Library" x-showvalue="TRUE" name="ProdPart_Acro3DLib" x-format="ProdPart_Acro3DLib">Acrobat&nbsp;3D&nbsp;Library</uservariable>&#160;stores the PRC model file. </p>
  <p class="FM_CodeReference">A3DAsmModelFile* p = NULL;</p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DAsmModelFileLoadFromFile(acFileName, NULL, &amp;p);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Populate the model file with the model file data by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DAsmModelFileGet</span>&#160;function to place the data in that structure. The <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3D_INITIALIZE_DATA</span>&#160;macro clears the memory allocated to the structure and checks the size of the structure to avoid alignment problems. The <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DAsmModelFileGet</span>&#160;function creates a data structure from the model file pointer created in the previous step.</p>
  <p class="FM_CodeReference"><span class="FM_Courier">A3DAsmModelFileData sData;</span></p>
  <p class="FM_CodeReference"><span class="FM_Courier">A3D_INITIALIZE_DATA(sData);</span></p>
  <p class="FM_CodeReference"><span class="FM_Courier">ASInt32 iRet = A3DAsmModelFileGet(p, &amp;sData);</span></p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Save the value of the <span class="FM_Courier">m_dUnit</span>&#160;member in the structure in which you are saving data obtained from parsing the PRC file (your export structure). This member specifies a multiple of millimeters. The value of this member must be non-zero. A value of 1 indicates the units are in millimeters; and a value of 10 indicates the units are in centimeters.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the <span class="FM_Courier">m_bUnitFromCAD</span>&#160;is present, save its value in your export structure. If the <span class="FM_Courier">b</span><span class="FM_Courier">UnitFromCAD</span>&#160;member is true, then the <span class="FM_Courier">m_bUnit</span> is from the native CAD file. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse the entity base. (See <a href="Parsing_attributes_that_appear_in_an_entity_base.htm#XREF_60919_Parsing_root_base"><span class="FM_HyperText">Parsing root-base entity data</span></a>.)</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare an <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DMiscCascadedAttributes</span>&#160;structure. This will be the root entry in a stack on which you store child product occurrences and other subordinate structures. This stack is used to iterate through the PRC structure.</p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributes* pAttr;</p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributesCreate(&amp;pAttr);</p>
  <p class="FM_Indent1">As you parse subsequent PRC entities, you push the attributes onto this stack. For more information about using cascaded attribute stacks, see <a href="Parsing_PRC_entities_that_specify_graphics.htm#XREF_16174_Creating_and">Parsing PRC entities that specify graphics</a>&#160;or click the Related Pages tab on the <span class="FM_HyperText"><a href="./API_References/PRCReference/3D_API_Reference/index.html">Acrobat 3D API Reference</a></span>. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse each product occurrence pointer in the <span class="FM_Courier">sData.m_ppPOccurrences</span>&#160;array. The number of pointers is specified in <span class="FM_Courier">sData.m_uiPOccurrencesSize</span>.</p>
  <p class="FM_CodeReference">for (ASUns32 ui = 0; ui &lt; sData.m_uiPOccurrencesSize; ui++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>parsePOccurrence(sData.m_ppPOccurrences[ui], pAttr);</p>
  <p class="FM_Indent1">For information about parsing product occurrences, see <a href="#XREF_48520_To_parse_a_product"><span class="FM_HyperText">Parse a product occurrence</span></a>.</p>
  <h6><a name="XREF_48520_To_parse_a_product"></a>Parse a product occurrence</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse the entity base, saving the entity name and other relevant data to your export structure. (See <a href="Parsing_attributes_that_appear_in_an_entity_base.htm#XREF_60919_Parsing_root_base"><span class="FM_HyperText">Parsing root-base entity data</span></a>.)</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create and push a cascaded attributes structure for a product occurrence object, and push that structure onto the stack. (See <a href="Parsing_attributes_that_appear_in_an_entity_base.htm#XREF_84985_Creating_and"><span class="FM_HyperText">Parsing graphic attributes using miscellaneous cascaded attributes</span></a>.) Save relevant values to your export structure.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_31716_3_Create_and"></a>Declare and initialize an <span class="FM_Courier">A3DAsmProductOccurrenceData</span>&#160;structure. </p>
  <p class="FM_CodeReference">A3DAsmProductOccurrenceData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Get the product occurrence data by invoking the <span class="FM_Courier">A3DAsmProductOccurrenceGet</span> function.</p>
  <p class="FM_CodeReference">iRet = A3DAsmProductOccurrenceGet(p, &amp;sData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse the product occurrence data to identify subordinate or imported product occurrences and recursively parse the contents of each, as described in <a href="#XREF_48520_To_parse_a_product">Parse a product occurrence</a>&#160;(this section). The member names and their significance are described below:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_pPrototype</span>&#160;: Pointer to a product occurrence prototype, which typically represents a subassembly or part </p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_pExternalData</span> : Pointer to an external product occurrence</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_Courier">m_uiPOccurrencesSize</span>&#160;: Number of child product occurrences, where the <span class="FM_Courier">m_ppPOccurrences</span> array references those child product occurrences</p>
</li>
  </ul>
  <p class="FM_Indent1">The following example parses prototype or external product occurrences. The <span class="FM_Courier">sData</span>&#160;variable is a populated <span class="FM_Courier">A3DAsmProductOccurrenceData</span>&#160;structure. </p>
  <p class="FM_CodeReference">if (sData.m_pPrototype) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>parsePOccurrence(sData.m_pPrototype, pAttr);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">if (sData.m_pExternalData) {</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>parsePOccurrence(sData.m_pExternalData, pAttr);</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_Indent1">The following example parses child product occurrences (<span class="FM_Courier">sData.ppPOccurrences[ui]</span>. As before, the <span class="FM_Courier">sdata</span>&#160;variable is a populated <span class="FM_Courier">A3DAsmProductOccurrenceData</span>&#160;structure. </p>
  <p class="FM_CodeReference">for (ASUns32 ui = 0; ui &lt; sData.m_uiPOccurrencesSize; ui++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>parsePOccurrence(sData.m_ppPOccurrences[ui], pAttr);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the product occurrence data references a part (<span class="FM_Courier">sData.m_pPart</span>), parse it. (See <a href="#XREF_48520_To_parse_a_product">Parse a product occurrence</a>.) </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse any scene display parameters in the product occurrence. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>8.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DAsmProductOccurrenceData</span>&#160;structure created in Step <a href="#XREF_31716_3_Create_and"><span class="FM_HyperText">3</span></a>&#160;by invoking the <span class="FM_Courier">A3DAsmProductOccurrenceGet</span>&#160;function with the first argument set to <span class="FM_Courier">NULL</span>&#160;and the second argument pointing to the product occurrence data.</p>
  <p class="FM_CodeReference">iRet = A3DAsmProductOccurrenceGet(NULL, &amp;sData);</p>
  <h6><a name="XREF_91530_Parse_a_part"></a>Parse a part definition</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse the entity base, saving the entity name and other relevant data to your export structure. (See <a href="Parsing_attributes_that_appear_in_an_entity_base.htm#XREF_60919_Parsing_root_base"><span class="FM_HyperText">Parsing root-base entity data</span></a>.)</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create and push a cascaded attributes structure for a product occurrence object, and push that structure onto the stack. (See <a href="Parsing_attributes_that_appear_in_an_entity_base.htm#XREF_84985_Creating_and"><span class="FM_HyperText">Parsing graphic attributes using miscellaneous cascaded attributes</span></a>.) Record information from the data structure of the miscellaneous cascaded attributes structure that is meaningful to your representation.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_28760_Create_and"></a>Declare and initialize an <span class="FM_Courier">A3DAsmPartDefinitionData</span>&#160;structure, as shown in the following example:</p>
  <p class="FM_CodeReference">A3DAsmPartDefinitionData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">iRet = A3DAsmPartDefinitionGet(p, &amp;sData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Parse each representation item referenced by the part definition (See <a href="Parsing_representation_items.htm#XREF_89551_Parsing_entities"><span class="FM_HyperText">Parsing representation items</span></a>.) In the following example, <span class="FM_Courier">sData.m_uiRepItemsSize</span>&#160;is the number of representation item entities in the part definition, and entry in the <span class="FM_Courier">sData.m_ppRepItems[ui]</span>&#160;array references a separate representation item.</p>
  <p class="FM_CodeReference">for (ASUns32 ui = 0; ui &lt; sData.m_uiRepItemsSize; ui++)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>parseRI(sData.m_ppRepItems[ui], pAttr);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DAsmPartDefinitionData</span>&#160;structure created in Step <a href="#XREF_28760_Create_and"><span class="FM_HyperText">3</span></a>&#160;by invoking the <span class="FM_Courier">A3DAsmPartDefinitionGet</span>&#160;function with the first argument set to <span class="FM_Courier">NULL</span>&#160;and the second argument pointing to the part definition data.</p>
  <p class="FM_CodeReference">A3DAsmPartDefinitionGet(NULL, &amp;sData);</p>
  </div>
</body>
</html>