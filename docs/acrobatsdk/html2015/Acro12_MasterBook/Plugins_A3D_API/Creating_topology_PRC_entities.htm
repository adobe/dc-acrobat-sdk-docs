<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Creating topology PRC entities</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_A3D_API.fm" />
 <link rel="stylesheet" href="Plugins_A3D_API.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.19.4.0_5";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_A3D_API/Creating_representation_item_PRC_entities.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_A3D_API/Creating_geometry_PRC_entities.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Parsing and Creating PRC Files > Creating a PRC file that uses boundary representation" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3>Creating topology PRC entities</h3>
  <p class="BodyLevel1">The <span class="FM_HyperText"><a href="./API_References/PRCReference/3D_API_Reference/index.html">Acrobat 3D API Reference</a></span>&#160;groups the PRC entities that specify topology into the topology module. The topology module uses a hierarchy of faces to define the shapes of 3D objects.</p>
  <h6><a name="XREF_82589_To_populate_a_Brep"></a>Create a topology Brep data entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_66118_1_Create_a_null"></a>Create a null pointer to a topology Brep data entity. </p>
  <p class="FM_CodeReference">A3DTopoBrepData* pTopoBrepData = NULL;</p>
  <p class="FM_Indent1"><span class="FM_Z_NoteCaution">Tip</span>: Do not confuse the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoBrepData</span>&#160;entity with the <span class="FM_Courier">A3DTopoBrepDataData</span>&#160;structure. The former references a PRC entity (an opaque type), while the latter reveals the data in that entity. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each topology connex data in the Brep data entity, create a pointer that references a populated topology connex entity. (See <a href="#XREF_28148_To_create_topology"><span class="FM_HyperText">Create a topology connex entity</span></a>.) In the following example, <span class="FM_Courier">createTopoConnex</span>&#160;is a private function that returns a reference to a populated topology connex entity.</p>
  <p class="FM_CodeReference">A3DTopoConnex* p = createTopoConnex();</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the Brep representation item references multiple topology connex entities, allocate memory for an array of references to the topology connexes in the Brep data entity. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a <span class="FM_Courier">A3DTopoBrepDataData</span>&#160;structure. Set the <span class="FM_Courier">m_ppConnexes</span>&#160;member to reference the array of topology connex entities, and set the <span class="FM_Courier">m_uiConnexSize</span>&#160;member to the number of entries in the array.</p>
  <p class="FM_CodeReference">A3DTopoBrepDataData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">sData.m_ppConnexes = &amp;p;</p>
  <p class="FM_CodeReference">sData.m_uiConnexSize = 1;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoBrepDataData</span>&#160;structure as a PRC entity by invoking the <span class="FM_Courier">A3DAsmPartDefinitionCreate</span>&#160;function. The first argument is a pointer to the Brep-data data structure (<span class="FM_Courier">A3DTopoBrepDataData</span>), and the second is the pointer to the Brep data entity created in Step <a href="#XREF_66118_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoBrepDataCreate(&amp;sData, &amp;pTopoBrepData);</p>
  <h6><a name="XREF_28148_To_create_topology"></a>Create a topology connex entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_81092_1_Create_a_pointer"></a>Declare a pointer to a topology connex entity.</p>
  <p class="FM_CodeReference">A3DTopoConnex* pTopoConnex = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each topology shell in the topology connex entity, create a pointer that references a populated topology shell entity. (See <a href="#XREF_38928_To_create_a"><span class="FM_HyperText">Create a topology shell entity</span></a>.) In the following example, <span class="FM_Courier">createTopoShell</span> is a private function that returns a reference to a populated topology shell entity.</p>
  <p class="FM_CodeReference">A3DTopoShell* p = createTopoShell();</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the topology connex entity references multiple topology shell entities, allocate memory for an array to accommodate each topology shell entity pointer. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize an <span class="FM_Courier">A3DTopoConnexData</span>&#160;structure. Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_ppShells</span>&#160;member to reference the array that contains the pointers, and set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiShellSize</span> member to the number of pointers.</p>
  <p class="FM_CodeReference">A3DTopoConnexData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">sData.m_ppShells = &amp;p;</p>
  <p class="FM_CodeReference">sData.m_uiShellSize = 1;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the topology connex data as a PRC entity by invoking the <span class="FM_Courier">A3DTopoConnexCreate</span>&#160;function. The first argument is a pointer to the Brep-data data structure (<span class="FM_Courier">A3DTopoBrepDataData</span>), and the second is the pointer to the topology connex entity created in Step <a href="#XREF_81092_1_Create_a_pointer"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoConnexCreate(&amp;sData, &amp;pTopoConnex);</p>
  <h6><a name="XREF_38928_To_create_a"></a>Create a topology shell entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_18056_1_Create_a_null"></a>Declare a null pointer to a topology shell entity.</p>
  <p class="FM_CodeReference">A3DTopoShell* pTopoShell = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the topology shell references multiple topology face entities, create an array to accommodate each pointer. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each topology face in the topology shell, create a pointer that references a populated topology face entity. (See <a href="#XREF_58671_To_create_a"><span class="FM_HyperText">Create a topology face entity</span></a>.) In the following example, <span class="FM_Courier">createTopoFace</span>&#160;is a private function that returns a reference to a populated topology shell entity.</p>
  <p class="FM_CodeReference">A3DTopoFace* p = createTopoFace();</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize an <span class="FM_Courier">A3DTopoShellData</span>&#160;structure. Set the <span class="FM_Courier">m_ppFaces</span>&#160;member to reference the array of topology face entities, and set the <span class="FM_Courier">m_uiFaceSize</span>&#160;member to the number of topology shell face entities. </p>
  <p class="FM_CodeReference">A3DTopoShellData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">sData.m_ppFaces = &amp;p;</p>
  <p class="FM_CodeReference">sData.m_uiFaceSize = 1;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the <span class="FM_Courier">A3DTopoShellData</span>&#160;structure’s <span class="FM_Courier">m_pucOrientationWithShell</span>&#160;member to reference an ASUns8 integer that specifies the orientation of the surface normal with respect to the shell normal. If the shell is closed and otherwise arbitrary, the shell normal points outside the material. The following example specifies that the surface normal has the same orientation as the face and shell. </p>
  <p class="FM_NoteIndent"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>Despite the simplicity of the values it expresses, the <span class="FM_Courier">m_pucOrientationWithShell</span>&#160;is a pointer to an ASUns8 integer; it is not itself an ASUns8 integer.</p>
  <p class="FM_CodeReference">ASUns8 orient = 1;</p>
  <p class="FM_CodeReference">sData.m_pucOrientationWithShell = &amp;orient;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the topology shell data as a PRC entity by invoking the <span class="FM_Courier">A3DTopoShellCreate</span>&#160;function. The first argument is a pointer to the topology shell data, and the second is the pointer to the topology shell entity created in Step <a href="#XREF_18056_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoShellCreate(&amp;sData, &amp;pTopoShell);</p>
  <h6><a name="XREF_58671_To_create_a"></a>Create a topology face entity</h6>
  <p class="BodyLevel1">The example described here UV-maps onto a cylinder surface a topology loop representing a circular band. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_14957_1_Create_a_null"></a>Declare a null pointer to a topology face entity.</p>
  <p class="FM_CodeReference">A3DTopoFace* pTopoFace = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the topology face references multiple loop entities, declare an array to accommodate each pointer. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each loop in the topology face, create a pointer that references a populated loop entity. (See <a href="#XREF_79807_To_create_a"><span class="FM_HyperText">Create a topology loop entity</span></a>.) In the following example, <span class="FM_Courier">createTopoLoop</span>&#160;is a private function that returns a reference to a populated loop entity.</p>
  <p class="FM_CodeReference">A3DDouble outerradius = 0.5;</p>
  <p class="FM_CodeReference">A3DDouble innerradius = 0.4;</p>
  <p class="FM_CodeReference">A3DTopoLoop* loops[2];</p>
  <p class="FM_CodeReference">loops[0] = createTopoLoop(outerradius);</p>
  <p class="FM_CodeReference">loops[1] = createTopoLoop(innerradius);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize an <span class="FM_Courier">A3DTopoFaceData</span>&#160;structure. Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_ppLoops</span>&#160;member to reference the array of loop entity pointers, and set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiLoopSize</span>&#160;member to the number of loop entities in the array. Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiOuterLoopIndex</span>&#160;member to the array index of the topology loop that describes the outer loop. If unknown, set that member to <span class="FM_Courier">A3D_LOOP_UNKNOW_OUTER_INDEX</span>. </p>
  <p class="FM_Indent1">In the following example, <span class="FM_Courier">m_uiOuterLoopIndex</span>&#160;indicates that the outer loop is the first entry in the <span class="FM_Courier">loops</span> array.</p>
  <p class="FM_CodeReference">A3DTopoFaceData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">sData.m_ppLoops = loops;</p>
  <p class="FM_CodeReference">sData.m_uiLoopSize = 2;</p>
  <p class="FM_CodeReference">sData.m_uiOuterLoopIndex = 0;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare a pointer that references a populated surface base entity. (See <a href="Creating_geometry_PRC_entities.htm#XREF_54641_To_create_a"><span class="FM_HyperText">Create a surface cylinder entity</span></a>.) Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pSurface</span>&#160;member of the <span class="FM_Courier">A3DTopoFaceData</span>&#160;structure to reference the populated surface. In the following example, <span class="FM_Courier">createSurface</span>&#160;is a private function that returns a reference to a populated cylinder surface entity. The returned value is cast as a pointer to a surface base.</p>
  <p class="FM_CodeReference">A3DSurfBase * p = createSurface(); </p>
  <p class="FM_CodeReference">sData.m_pSurface = p;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the topology face data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoFaceCreate</span>&#160;function. The first argument is a pointer to the topology face data, and the second is the pointer to the topology face entity created in Step <a href="#XREF_14957_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoFaceCreate(&amp;sData, &amp;pTopoFace);</p>
  <h6><a name="XREF_79807_To_create_a"></a>Create a topology loop entity</h6>
  <p class="BodyLevel1">A loop is a connected series of co-edges and describes the boundary of a face. Generally, loops are closed, having no start or end point.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_78554_1_Create_a_null"></a>Declare a null pointer to a topology loop entity.</p>
  <p class="FM_CodeReference">A3DTopoLoop* pTopoLoop = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>If the topology loop references multiple co-edge entities, declare an array to accommodate each pointer. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each co-edge in the loop, do the following:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">Create a pointer that references a populated circle entity with a given radius. (See <a href="Creating_geometry_PRC_entities.htm#XREF_81895_To_create_a_great"><span class="FM_HyperText">Create a circular curve entity</span></a>.) </p>
</li>
   <li>
   <p class="FM_Bullet2">Create a pointer that references a populated co-edge entity with a given curve. (See <a href="#XREF_67390_To_create_a"><span class="FM_HyperText">Create a topology co-edge entity</span></a>.) </p>
</li>
  </ul>
  <p class="FM_Indent2">In the following example, <span class="FM_Courier">createCircle</span>&#160;is a private function that takes a radius and returns a reference to a populated circular curve entity, and <span class="FM_Courier">createTopoCoEdge</span>&#160;is a private function that takes a pointer to a circle entity and returns a reference to a populated co-edge entity. The circle-entity describes a curve.</p>
  <p class="FM_CodeReference">A3DCrvBase* p = createCircle(radius);</p>
  <p class="FM_CodeReference">A3DTopoCoEdge* q = createTopoCoEdge(p);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize an <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoLoopData</span>&#160;structure. Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_ppCoEdges</span>&#160;member to reference the array of co-edge entity pointers, and set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_uiCoEdgeSize</span>&#160;member to the number of entities in the array. </p>
  <p class="FM_CodeReference">A3DTopoLoopData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">sData.m_ppCoEdges = &amp;q;</p>
  <p class="FM_CodeReference">sData.m_uiCoEdgeSize = 1;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoLoopData</span>&#160;structure’s <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_ucOrientationWithSurface</span>&#160;member to specify the orientation of the loop relative to the surface normal vector. The following example specifies that the orientation is perpendicular to the surface normal vector (or parallel with the surface).</p>
  <p class="FM_CodeReference">sData.m_ucOrientationWithSurface = 1;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the topology face data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoLoopCreate</span>&#160;function. The first argument is a pointer to the topology loop data, and the second is the pointer to the topology loop entity created in Step <a href="#XREF_78554_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet=A3DTopoLoopCreate(&amp;sData, &amp;pTopoLoop);</p>
  <h6><a name="XREF_67390_To_create_a"></a>Create a topology co-edge entity</h6>
  <p class="BodyLevel1">A coedge is a directed edge. The two co-edges related to an edge point in the same or opposite directions along the edge. Each co-edge is associated with a loop of one of the two neighboring/adjacent faces.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_38878_1_Create_a_pointer"></a>Create a pointer to a populated <span class="FM_Courier">A3DTopoEdge</span>&#160;entity. (See <a href="#XREF_10967_Create_a_topology"><span class="FM_HyperText">Create a topology edge entity</span></a>.)</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a topology co-edge data entity.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_pUVCurve</span>&#160;member of the data entity to reference the circle entity created earlier (see <a href="#XREF_79807_To_create_a"><span class="FM_HyperText">Create a topology loop entity</span></a>).</p>
  <p class="FM_Indent1">Set the <span class="FM_Courier">m_pEdge</span>&#160;member to the edge entity created in Step <a href="#XREF_38878_1_Create_a_pointer"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_NoteIndent"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>To set the value of the <span class="FM_Courier">m_pUVCurve</span>&#160;member using meaningful data, you need your own modeler.</p>
  <p class="FM_CodeReference">A3DTopoCoEdgeData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_CodeReference">sData.m_pUVCurve = p;</p>
  <p class="FM_CodeReference">sData.m_pEdge = q;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">m_ucOrientationWithLoop member to indicate the relative orientation of the loop.</span></p>
  <p class="FM_CodeReference">sData.m_ucOrientationWithLoop = 1;<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> /* Same orientation as the adjacent co-edge</p>
  <p class="FM_CodeReference">sData.m_ucOrientationUVWithLoop = 1; </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the co-edge data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoEdgeCreate</span>&#160;function. The first argument is a pointer to the topology loop data, and the second is the pointer to the topology edge entity created in Step <a href="#XREF_38878_1_Create_a_pointer"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoCoEdgeCreate(&amp;sData, &amp;pp);</p>
  <h6><a name="XREF_10967_Create_a_topology"></a>Create a topology edge entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_40375_1_Create_a_null"></a>Declare a null pointer to a topology edge entity.</p>
  <p class="FM_CodeReference">A3DTopoEdge* pTopoEdge = NULL;</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a topology edge data structure.</p>
  <p class="FM_CodeReference">A3DTopoEdgeData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Populate the members with data.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Package the topology face data as a PRC entity by invoking the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">A3DTopoEdgeCreate</span>&#160;function. The first argument is a pointer to the topology loop data, and the second is the pointer to the topology edge entity created in Step <a href="#XREF_40375_1_Create_a_null"><span class="FM_HyperText">1</span></a>. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DTopoEdgeCreate(&amp;sData, &amp;pTopoEdge);</p>
  </div>
</body>
</html>