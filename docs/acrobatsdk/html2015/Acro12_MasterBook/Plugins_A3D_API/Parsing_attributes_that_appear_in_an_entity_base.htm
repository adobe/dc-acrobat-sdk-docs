<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Parsing attributes that appear in an entity base</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_A3D_API.fm" />
 <link rel="stylesheet" href="Plugins_A3D_API.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.19.3.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_A3D_API/Parsing_PRC_entities_that_specify_graphics.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_A3D_API/Terminating_the_interface_with_the_Acrobat_3D_API.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Parsing and Creating PRC Files > Parsing a PRC file" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="XREF_78726_Parsing"></a>Parsing attributes that appear in an entity base</h3>
  <p class="BodyLevel1">This section explains how to obtain data from the root-base entity or from the miscellaneous cascaded attributes. </p>
  <p class="BodyLevel1">The <uservariable x-value="Acrobat&nbsp;3D&nbsp;Library" x-showvalue="TRUE" name="ProdPart_Acro3DLib" x-format="ProdPart_Acro3DLib">Acrobat&nbsp;3D&nbsp;Library</uservariable>&#160;uses a parallel structure for representing attributes that apply to PRC entities that have a particular PRC entity base. Data that is specific to the entity is defined in <span class="FM_Courier">A3D</span><span class="FM_CourierItalic">EntityName</span><span class="FM_Courier">Data</span>&#160;structures (for example the <span class="FM_Courier">A3DAsmPartDefinitionData</span>&#160;structure). These structures are used to create or parse the entity. Other data is defined in entities specific to the global or base types. (See the Related Pages on the <span class="FM_HyperText"><a href="./API_References/PRCReference/3D_API_Reference/index.html">Acrobat 3D API Reference</a></span>.)</p>
  <h4><a name="TOC_Parsing_root_base_entity"></a><a name="XREF_60919_Parsing_root_base"></a>Parsing root-base entity data</h4>
  <p class="BodyLevel1">This section explains how to parse data stored in the root base for a PRC entity. The root base data applies to all PRC entities.</p>
  <h6>Parse the root-base entity data</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare and initialize a <span class="FM_Courier">A3DRootBaseData</span> structure.</p>
  <p class="FM_CodeReference">A3DRootBaseData sData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sData);</p>
  <p class="FM_Step"><a name="IX_A3DRootBaseGet_function"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Populate the <span class="FM_Courier">A3DRootBaseData</span>&#160;structure by invoking the <span class="FM_Courier">A3DRootBaseGet</span> function.</p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DRootBaseGet(p, &amp;sData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Save the value of the <span class="FM_Courier">m_pcName</span> to your export structure.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each <span class="FM_Courier">A3DMiscAttribute</span>&#160;entity referenced by the array that is referenced by <span class="FM_Courier">m_ppAttributes</span>, process the contents. (See <a href="#XREF_29718_Parse_the"><span class="FM_HyperText">Parse the miscellaneous attribute entity</span></a>.)</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DRootBaseData</span> structure.</p>
  <p class="FM_CodeReference">A3DRootBaseGet(NULL, &amp;sData);</p>
  <h6><a name="XREF_29718_Parse_the"></a>Parse the miscellaneous attribute entity</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_78650_1_Create_and"></a>Declare and initialize an <span class="FM_Courier">A3DMiscAttributeData</span> structure.</p>
  <p class="FM_Step"><a name="IX_A3DMiscAttributeGet"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Populate the <span class="FM_Courier">A3DMiscAttributeData</span>&#160;structure by invoking the <span class="FM_Courier">A3DMiscAttributeGet</span>&#160;function. The first argument references the <span class="FM_Courier">A3DMiscAttribute</span>&#160;entity (from root base data <span class="FM_Courier">m_ppAttributes</span>&#160;member), and the second argument references the <span class="FM_Courier">A3DMiscAttributeData</span> being populated.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Determine whether the root data contains modeler data by checking the <span class="FM_Courier">m_pSingleAttributesData</span>&#160;member. If its value is non-null, save the modeler data to your export structure. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Save the value of the <span class="FM_Courier">m_pcName</span> attribute to your export structure.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DMiscAttributeData</span>&#160;structure created in Step <a href="#XREF_78650_1_Create_and"><span class="FM_HyperText">1</span></a>.</p>
  <h4><a name="TOC_Parsing_graphic"></a><a name="XREF_84985_Creating_and"></a>Parsing graphic attributes using miscellaneous cascaded attributes</h4>
  <p class="BodyLevel1">Miscellaneous cascaded attributes manage the inheritable graphics data that can be applied to a PRC entity. Such inheritable data includes the show and remove settings, style attributes such as color and pattern, layer attributes, and coordinate system transformations. </p>
  <p class="BodyLevel1"><a name="IX_A3DGraphicsCreate"></a>The <span class="FM_Courier">A3DGraphicsCreate</span>&#160;function lets you set the graphics data for an entity. It also lets you set inheritance behavior for the attributes. These bits can specify that an attribute be inherited from a child entity or from a parent entity. </p>
  <p class="BodyLevel1"><a name="IX_A3DGraphicsGet_function"></a>The <span class="FM_Courier">A3DGraphicsGet</span>&#160;function gets the graphics data for an entity, but it does not take into account inherited settings. </p>
  <p class="BodyLevel1">The following diagram illustrates the steps required to create and push miscellaneous cascaded attributes, depending on whether the entity represents a tessellation face.</p>
  <h6>To create and push a miscellaneous cascaded attributes structure</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a href="#XREF_26284_To_create_the"><span class="FM_HyperText">Declare the structure for creating and pushing a cascaded attributes structure</span></a>.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create and push a cascaded attributes structure. For entities in the tessellation module, include a pointer to the tessellation base entity (see <a href="#XREF_14663_Create_and_push_a"><span class="FM_HyperText">Create and push a cascaded attributes structure for entities in the tessellated module</span></a>. For all other entities in the graphics module, see <a href="#XREF_21570_To_create_and_push"><span class="FM_HyperText">Create and push a cascaded attributes structure for graphic entities</span></a>. </p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a href="#XREF_55967_Delete_the"><span class="FM_HyperText">Delete the structure created for the miscellaneous cascaded attributes</span></a>.</p>
  <h6><a name="XREF_26284_To_create_the"></a>Declare the structure for creating and pushing a cascaded attributes structure</h6>
  <p class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_92176_1_xxxxCreate_an"></a>Declare an empty cascaded data structure in which the cascaded attributes are to be stored. The macro <span class="FM_Courier">A3D_INITIALIZE_DATA</span>&#160;clears the memory allocated to the structure and checks the size of the structure to avoid alignment problems.</p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributesData sAttrData;</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA(sAttrData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare a null pointer to a miscellaneous cascaded attributes object. </p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributes* pAttr;</p>
  <h6><a name="XREF_21570_To_create_and_push"></a>Create and push a cascaded attributes structure for graphic entities </h6>
  <p class="FM_StepReset"><a name="IX_A3DMiscCascadedAttributes"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an empty miscellaneous cascaded attributes object by invoking the <span class="FM_Courier">A3DMiscCascadedAttributesCreate</span>&#160;function, providing as an argument the address of the previously created null pointer. </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DMiscCascadedAttributesCreate(&amp;pAttr);</p>
  <p class="FM_Step"><a name="IX_A3DMiscCascadedAttributes_1"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span><a name="XREF_62288_2_Invoke_the"></a>Invoke the <span class="FM_Courier">A3DMiscCascadedAttributesPush</span>&#160;function, which creates the <span class="FM_Courier">A3DMiscCascadedAttributes</span>&#160;object for the current PRC entity and pushes the parent <span class="FM_Courier">A3DMiscCascadedAttributes</span>&#160;object onto the stack. Provide the following arguments to <span class="FM_Courier">A3DMiscCascadedAttributesPush</span>.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><a name="IX_A3DMiscCascadedAttributes_2"></a>The first argument (<span class="FM_Courier">pAttr</span>&#160;in the following example) is a pointer to an empty miscellaneous cascaded attribute object. The <span class="FM_Courier">A3DMiscCascadedAttributesPush</span>&#160;function populates this object. </p>
</li>
   <li>
   <p class="FM_Bullet2">The second argument (<span class="FM_Courier">pBase</span>&#160;in the following example) is a pointer to the PRC entity of interest, recast as a <span class="FM_Courier">const&nbsp;A3DRootBaseWithGraphics*</span>. </p>
</li>
   <li>
   <p class="FM_Bullet2">The third argument (<span class="FM_Courier">pFatherAttr</span>&#160;in the following example) is a pointer to the parent entity’s <span class="FM_Courier">A3DMiscCascadedAttributes</span>&#160;object. Do not confuse this structure with the parent entity’s <span class="FM_Courier">A3DMiscCascadedAttributesData</span>&#160;structure. </p>
</li>
  </ul>
  <p class="FM_Indent1">Here is an example: </p>
  <p class="FM_CodeReference"> &#160;&#160;iRet = A3DMiscCascadedAttributesPush (pAttr, pBase , pFatherAttr);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Get the data from the newly created cascaded attributes structure by invoking the <span class="FM_Courier">A3DMiscCascadedAttributesGet</span> function. Provide the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">The first argument (<span class="FM_Courier">pAttr</span>&#160;in the following example) references the cascaded attribute structure populated in Step <a href="#XREF_62288_2_Invoke_the"><span class="FM_HyperText">2</span></a>.</p>
</li>
   <li>
   <p class="FM_Bullet2">The second argument (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">sAttrData</span>&#160;in the following example) references the empty <span class="FM_Courier">A3DMiscCascadedAttributesData</span>&#160;structure created previously. (See <a href="#XREF_26284_To_create_the"><span class="FM_HyperText">Declare the structure for creating and pushing a cascaded attributes structure</span></a>.) The <span class="FM_Courier">A3DMiscCascadedAttributesGet</span>&#160;function stores the entity’s attributes in this structure.</p>
</li>
  </ul>
  <p class="FM_Indent1">Here is an example: </p>
  <p class="FM_CodeReference">iRet = A3DMiscCascadedAttributesGet(pAttr, &amp;sAttrData);</p>
  <h6><a name="XREF_14663_Create_and_push_a"></a>Create and push a cascaded attributes structure for entities in the tessellated module</h6>
  <p class="FM_Step"><a name="IX_A3DMiscCascadedAttributes_3"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Invoke the <span class="FM_Courier">A3DMiscCascadedAttributesPushTessFace</span>&#160;function, providing the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">The first argument (<span class="FM_Courier">pAttr</span>&#160;in the following example) is a pointer to an empty miscellaneous cascaded attribute object. The <span class="FM_Courier">A3DMiscCascadedAttributesPushTessFace</span>&#160;function populates this object. </p>
</li>
   <li>
   <p class="FM_Bullet2">The second argument (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">pRepItem</span>&#160;in the following example) is a pointer to the representation item that contains the tessellation face.</p>
</li>
   <li>
   <p class="FM_Bullet2">The third argument (<span class="FM_Courier">pTessBase</span>&#160;in the following example) is a pointer to the tessellation entity that contains the face, recast as a <span class="FM_Courier">const&nbsp;A3DTessBase* </span>pointer. This argument can be cast from the <span class="FM_Courier">A3DTess3D</span> entity.</p>
</li>
   <li>
   <p class="FM_Bullet2"><a name="IX_A3DTess3DGet_function_1"></a>The fourth argument (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">psTessFaceData</span>&#160;in the following example) references an array of pointers to the <span class="FM_Courier">A3DTessFaceData</span>&#160;structures that contain the face data. Use the <span class="FM_Courier">A3DTess3DGet</span>&#160;function to obtain that structure. </p>
</li>
   <li>
   <p class="FM_Bullet2">The fifth argument (<span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">uiFaceIndex</span>&#160;in the following example) is the face index used with the fourth argument to access the face data from the <span class="FM_Courier">m_psFaceTessData</span>&#160;member of the <span style="font-family : 'Courier Std'; font-size  : 10.0pt; ">psTess3DData</span>&#160;structure. </p>
</li>
   <li>
   <p class="FM_Bullet2">The sixth argument (<span class="FM_Courier">pFatherAttr</span>&#160;in the following example) is a pointer to the parent entity’s <span class="FM_Courier">A3DMiscCascadedAttributes</span>&#160;object. Do not confuse this structure with the parent entity’s <span class="FM_Courier">A3DMiscCascadedAttributesData</span>&#160;structure. </p>
</li>
  </ul>
  <p class="FM_Indent1">Here is an example: </p>
  <p class="FM_CodeReference">ASInt32 iRet = A3DMiscCascadedAttributesCreate(ppAttr);</p>
  <p class="FM_CodeReference">// This API is dedicated to tessellation</p>
  <p class="FM_CodeReference">iRet = A3DMiscCascadedAttributesPushTessFace(pAttr, pRepItem, pTessBase,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>psTessFaceData, uiFaceIndex, pFatherAttr);</p>
  <p class="FM_CodeReference">A3D_INITIALIZE_DATA((*psAttrData));</p>
  <p class="FM_CodeReference">iRet = A3DMiscCascadedAttributesGet(*ppAttr, psAttrData);</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Save relevant data to your export structure. </p>
  <h6><a name="XREF_55967_Delete_the"></a>Delete the structure created for the miscellaneous cascaded attributes</h6>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DMiscCascadedAttributes</span>&#160;structure by invoking the <span class="FM_Courier">A3DMiscCascadedAttributesDelete</span>&#160;function. </p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributesDelete(pAttr);</p>
  <p class="FM_Step"><a name="IX_A3DMiscCascadedAttributes_4"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Delete the <span class="FM_Courier">A3DMiscCascadedAttributesData</span>&#160;structure by invoking the <span class="FM_Courier">A3DMiscCascadedAttributesGet</span>&#160;function, setting the first argument to <span class="FM_Courier">NULL</span>&#160;and the second to the address of the structure. Here is an example:</p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributesGet(NULL, &amp;sAttrData);</p>
  <p class="FM_CodeReference">A3DMiscCascadedAttributes* pAttr;</p>
  </div>
</body>
</html>