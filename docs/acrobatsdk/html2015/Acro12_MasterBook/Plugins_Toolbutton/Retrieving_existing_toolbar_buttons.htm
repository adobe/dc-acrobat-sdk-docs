<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Retrieving existing toolbar buttons</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Toolbutton.fm" />
 <link rel="stylesheet" href="Plugins_Toolbutton.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.7.2_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Toolbutton/Creating_a_sub-menu_for_a_button.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Toolbutton/Attaching_a_button_to_a_toolbar.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Creating Toolbars and Buttons" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="IX_retrieving_toolbars"></a><a name="XREF_86395_Retrieving"></a>Retrieving existing toolbar buttons</h2>
  <p class="BodyLevel1">Instead of creating a new button, you can retrieve an existing button. You can, for example, retrieve a button from one toolbar and attach it to another toolbar. (See <a href="Attaching_a_button_to_a_toolbar.htm#XREF_75762_Attaching_a_button">Attaching a button to a toolbar</a>.)</p>
  <p class="BodyLevel1">To retrieve an existing toolbar button, invoke the <span class="FM_Courier">AVToolBarGetButtonByName</span>&#160;method and pass the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">An <span class="FM_Courier">AVToolBar</span>&#160;object that represents the toolbar from which the button is retrieved. </p>
</li>
   <li>
   <p class="FM_Bullet1">An <span class="FM_Courier">ASAtom</span>&#160;object that represents the button name. For information about button names, see the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span>.</p>
</li>
  </ul>
  <p class="BodyLevel1">The <span class="FM_Courier">AVToolBarGetButtonByName</span>&#160;method returns an <span class="FM_Courier">AVToolButton</span>&#160;object that corresponds to the specified button. If the name is not found, then this method returns <span class="FM_Courier">NULL</span>. Once you obtain a button, you can perform various tasks such as attaching it to another toolbar or retrieving its icon by invoking the <span class="FM_Courier">AVToolButtonGetIcon</span>&#160;method and passing the <span class="FM_Courier">AVToolButton</span> object that contains the icon.</p>
  <p class="BodyLevel1">The following code example retrieves the SecureTask button located on the Tasks toolbar and gets its icon.</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_5Head_Example"><a name="XREF_19658_Example1_5"></a>Retrieving existing toolbar buttons</p>
</li>
  </ul>
  <p class="FM_CodeComment">//Retrieve the Tasks toolbar</p>
  <p class="FM_CodeReference">const char * toolbarName= &quot;Tasks&quot; ;</p>
  <p class="FM_CodeReference">AVToolBar myToolBar = AVAppGetToolBarByName(toolbarName); </p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Retrieve the SecureTask button located on the Tasks toolbar</p>
  <p class="FM_CodeReference">AVToolButton mySecureButton = AVToolBarGetButtonByName(myToolBar,ASAtomFromString(&quot;SecureTask&quot;));</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeReference">if (mySecureButton == NULL)</p>
  <p class="FM_CodeReference">{</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;The button was not successfully retrieved&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return;</p>
  <p class="FM_CodeReference">}</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment">//Get the icon located on the button</p>
  <p class="FM_CodeComment">//Pass the AVToolButton object</p>
  <p class="FM_CodeReference">AVIcon mySecureIcon = AVToolButtonGetIcon(mySecureButton); </p>
  </div>
</body>
</html>