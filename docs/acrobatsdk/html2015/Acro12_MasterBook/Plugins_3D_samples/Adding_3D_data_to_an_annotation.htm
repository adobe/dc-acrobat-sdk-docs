<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/acrobatsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Adding 3D data to an annotation</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_3D_samples.fm" />
 <link rel="stylesheet" href="Plugins_3D_samples.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.18.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_3D_samples/Creating_annotations1.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_3D_samples/Creating_the_3D_annotation_dictionary_entries.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Creating 3D Annotations" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_21047_Adding_3D_data_to"></a>Adding 3D data to an annotation</h2>
  <p class="BodyLevel1">The <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;and PDF Library API does not contain methods for working specifically with 3D annotations. To add entries to a 3D annotation dictionary, you must use Cos-level API methods. These methods enable you to create PDF objects of any type (see the <uservariable x-value="PDF Reference" x-showvalue="TRUE" name="Ref_DocPDF" x-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></uservariable><span class="FM_Italic"></span>) and to set their values. </p>
  <p class="BodyLevel1">The Cos API uses two primary object types:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1"><span class="FM_Courier">CosDoc</span> represents an entire PDF document.</p>
</li>
   <li>
   <p class="FM_Bullet1"><span class="FM_Courier">CosObj</span>&#160;represents all other PDF objects: simple types like numbers and string values as well as complex types such as dictionaries, arrays, and streams. </p>
</li>
  </ul>
  <p class="BodyLevel1">The API provides methods for creating and working with different object types. The creation methods are of the form <span class="FM_Courier">CosNew</span><span class="FM_CourierItalic">Object</span>, where <span class="FM_CourierItalic">Object</span>&#160;is the object being created: for example, <span class="FM_Courier">CosNewDict</span>, which creates a dictionary object, <span class="FM_Courier">CosNewBoolean</span>, and <span class="FM_Courier">CosNewStream</span>.</p>
  <p class="BodyLevel1">The first two parameters for the <span class="FM_Courier">CosNew</span><span class="FM_CourierItalic">Object</span>&#160;methods (with the exception of <span class="FM_Courier">CosNewNull</span>, which takes no parameters) are these:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">The <span class="FM_Courier">CosDoc</span> object that represents the current document.</p>
</li>
   <li>
   <p class="FM_Bullet1">A Boolean parameter that specifies whether the new object should be indirect. Indirect objects (see the <uservariable x-value="PDF Reference" x-showvalue="TRUE" name="Ref_DocPDF" x-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></uservariable><span class="FM_Italic"></span>) are given object numbers and can be referred to from more than one place in a PDF file. Direct objects are specified only where they are used and cannot be referred to from anywhere else.</p>
</li>
  </ul>
  <p class="BodyLevel1">The remaining parameters vary depending on the object type:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">For simple types, the third parameter specifies its value. For arrays and dictionaries, the third parameter specifies the number of elements.</p>
</li>
   <li>
   <p class="FM_Bullet1">For streams, there are several additional parameters. See the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span>&#160;for details on each method.</p>
</li>
  </ul>
  <p class="BodyLevel1">The return value of these methods is the newly created object. In the API, this object is always a <span class="FM_Courier">CosObj</span>. That is, even though you call <span class="FM_Courier">CosNewDict</span>&#160;to create a dictionary object, and you use methods like <span class="FM_Courier">CosDictPut</span>&#160;to work with dictionary objects, there is not a formal object type called <span class="FM_Courier">CosDict</span>.</p>
  <p class="BodyLevel1">If necessary, you can determine the type of a <span class="FM_Courier">CosObj</span>&#160;by calling the <span class="FM_Courier">CosObjGetType</span>&#160;method, which returns a constant (<span class="FM_Courier">CosNull</span>, <span class="FM_Courier">CosInteger</span>, <span class="FM_Courier">CosFixed</span>, <span class="FM_Courier">CosReal</span>, <span class="FM_Courier">CosBoolean</span>, <span class="FM_Courier">CosName</span>, <span class="FM_Courier">CosString</span>, <span class="FM_Courier">CosDict</span>, <span class="FM_Courier">CosArray</span>, or <span class="FM_Courier">CosStream</span>). </p>
  <p class="BodyLevel1">Most of the code described here involves setting the entries of dictionaries (<span class="FM_Courier">CosObjs</span>&#160;of type <span class="FM_Courier">CosDict</span>). Dictionaries contain a number of key-value pairs, where the key is a <span class="FM_Italic">name object</span>&#160;and the value is any type of <span class="FM_Courier">CosObj</span>. </p>
  <p class="BodyLevel1">There are several common methods that can be used, which differ only in how the keys are specified. The <span class="FM_Courier">CosDictPutKeyString</span>&#160;method (available in <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;7.0 or later) allows the key to be specified as a string and is the recommended method, as in the following example:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(theDict,&nbsp;&nbsp;&nbsp;// The dictionary</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;TheKey&quot;, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The key: a string</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>theCosValue);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The value: a CosObj</p>
  <p class="BodyLevel1"><span class="FM_Courier">CosDictPut</span>&#160;requires the key to be specified as an <span class="FM_Courier">ASAtom</span>. <span class="FM_Courier">CosDictPutKey</span>&#160;requires the key to be a name object (a <span class="FM_Courier">CosObj</span>&#160;of type <span class="FM_Courier">CosName</span>). </p>
  </div>
</body>
</html>