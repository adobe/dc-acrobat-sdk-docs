<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Working with text annotations</title>

 

 <link rel="stylesheet" href="Creating_Annotations.css" />
 <link rel="stylesheet" href="../../HTMLStyling.css" />


 <script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker 2017" />
<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "3.6.1";
</script>
 <meta name="brsprev" value="PDFL_MasterBook/Creating_Annotations/About_annotations.htm">
 <meta name="brsnext" value="PDFL_MasterBook/Creating_Annotations/Working_with_redaction_annotations.htm">
 <meta name="topic-breadcrumbs" content="Developing Plug-ins and Applications > Creating Annotations" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

   
	<!-- Body place holder starts here-->
    <div dir="ltr">
  <p dir="ltr" class="FM_3Head"><a name="XREF_10819_Working_with_text"></a>Working with text annotations</p>
  <p dir="ltr" class="FM_Body">The PDF Library API lets you create text annotations and retrieve and modify attributes of an existing text annotation. <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> displays text annotations as sticky notes.</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Creating_text_annotations"></a><a name="IX_creating_annotations"></a><a name="IX_creating"></a><a name="IX_text_annotations_1"></a><a name="IX_text_annotations"></a><a name="XREF_15829_Creating_text"></a>Creating text annotations </p>
  <p dir="ltr" class="FM_Body">You can create a text annotation by performing the following tasks:</p>
  <p dir="ltr" class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a rectangle region that specifies the annotation’s location. To create a rectangle region, create an <span class="FM_Courier">ASFixedRect</span> object.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Define the rectangle’s borders by setting the <span class="FM_Courier">ASFixedRect</span>&#160;object’s left, top, right, and bottom attributes.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDDocAcquirePage"></a><a name="IX_PDDocAcquirePage_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDPage</span>&#160;object that represents the page that will contain the new annotation by invoking the <span class="FM_Courier">PDDocAcquirePage</span>&#160;method. The first argument passed to this method is a <span class="FM_Courier">PDDoc</span>&#160;object that represents the PDF document and the second is an <span class="FM_Courier">ASInt32</span>&#160;object that represents the page number on which the annotation is applied. This method returns a <span class="FM_Courier">PDPage</span>&#160;object. </p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDPageCreateAnnot"></a><a name="IX_PDPageCreateAnnot_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDAnnot</span>&#160;object by invoking the <span class="FM_Courier">PDPageCreateAnnot</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDPage</span> object that represents the page that will contain the new annotation.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASAtom</span>&#160;object that represents the annotation’s subtype. Because a text annotation is created, specify <span class="FM_Courier">Text</span>&#160;as the annotation’s subtype. (See the <span class="FM_HyperText"><a href="../../API_References/PDFL_API_Reference/index.html">PDF Library API Reference</a></span>.)</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The address of the <span class="FM_Courier">ASFixedRect</span> object.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_CastToPDTextAnnot"></a><a name="IX_CastToPDTextAnnot_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Cast the <span class="FM_Courier">PDAnnot</span>&#160;object to a <span class="FM_Courier">PDTextAnnot</span>&#160;object by invoking the <span class="FM_Courier">CastToPDTextAnnot</span>&#160;method. This method requires a <span class="FM_Courier">PDAnnot</span>&#160;object and returns a <span class="FM_Courier">PDTextAnnot</span> object.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDTextAnnotSetOpen"></a><a name="IX_PDTextAnnotSetOpen_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Open the text annotation by invoking the <span class="FM_Courier">PDTextAnnotSetOpen</span>&#160;method. Opening an annotation enables you to set its content. This method requires a <span class="FM_Courier">PDTextAnnot</span>&#160;object and an <span class="FM_Courier">ASBool</span>&#160;value that specifies <span class="FM_Courier">true</span>.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDTextAnnotSetContents_1"></a><a name="IX_PDTextAnnotSetContents"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the text of the annotation by invoking the <span class="FM_Courier">PDTextAnnotSetContents</span>&#160;method and passing the following arguments: </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDTextAnnot</span> object that represents the annotation for which text is set.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A character pointer that specifies the text to set.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASInt32</span> object that specifies the length of the character pointer.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDPageAddAnnot"></a><a name="IX_PDPageAddAnnot_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>8.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add the text annotation to the page by invoking the <span class="FM_Courier">PDPageAddAnnot</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDPage</span> object that represents the page that will contain the new annotation.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASInt32</span>&#160;object that specifies the index that controls where the annotation is added. The first annotation in the array has an index of zero. Passing a value of -2 adds the annotation to the end of the array.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDTextAnnot</span> object that represents the annotation.</p>
  <p dir="ltr" class="FM_Body">The following code example adds a text annotation to a PDF document page. In this code example, a <span class="FM_Courier">PDDoc</span>&#160;object named <span class="FM_Courier">myPDDoc</span>&#160;exists. (See <a href="../Documents_and_Files/Creating_a_PDDoc_object.htm#XREF_97094_Creating_a_PDDoc"><span class="FM_HyperText">Creating a PDDoc object</span></a>.)</p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Creating text annotations</p>
  <p dir="ltr" class="FM_CodeReference">PDPage page = NULL;</p>
  <p dir="ltr" class="FM_CodeReference">PDAnnot annot,textannot;</p>
  <p dir="ltr" class="FM_CodeReference">char* ptr = &quot;This is initial text&quot;;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create an ASFixed object and define its borders</p>
  <p dir="ltr" class="FM_CodeReference">ASFixedRect fr;</p>
  <p dir="ltr" class="FM_CodeReference">fr.left = ASInt32ToFixed(36);</p>
  <p dir="ltr" class="FM_CodeReference">fr.top = ASInt32ToFixed(792-36);</p>
  <p dir="ltr" class="FM_CodeReference">fr.right = ASInt32ToFixed(136);</p>
  <p dir="ltr" class="FM_CodeReference">fr.bottom = ASInt32ToFixed(792-136);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a PDPage object</p>
  <p dir="ltr" class="FM_CodeReference">page = PDDocAcquirePage(myPDDoc, 0);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a PDAnnot object</p>
  <p dir="ltr" class="FM_CodeReference">annot = PDPageCreateAnnot (page, ASAtomFromString(&quot;Text&quot;),&amp;fr);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Cast the PDAnnot object to a PDTextAnnot object</p>
  <p dir="ltr" class="FM_CodeReference">textannot = CastToPDTextAnnot(annot);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Open the annotation, set the text, and add it to a page</p>
  <p dir="ltr" class="FM_CodeReference">PDTextAnnotSetOpen (textannot, true);</p>
  <p dir="ltr" class="FM_CodeReference">PDTextAnnotSetContents (textannot, ptr, strlen (ptr));</p>
  <p dir="ltr" class="FM_CodeReference">PDPageAddAnnot(page,-2, textannot);</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Retrieving_existing"></a><a name="IX_retrieving_annotations"></a><a name="IX_retrieving"></a><a name="IX_annotations_1"></a><a name="XREF_93262_Retrieving"></a>Retrieving existing annotations</p>
  <p dir="ltr" class="FM_Body">You can use the PDF Library API to retrieve existing annotations located within a PDF document by performing the following tasks:</p>
  <p dir="ltr" class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDDoc</span>&#160;object that represents the PDF document that contains annotations. (See <a href="../Documents_and_Files/Creating_a_PDDoc_object.htm#XREF_97094_Creating_a_PDDoc"><span class="FM_HyperText">Creating a PDDoc object</span></a>.)</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDDocGetNumPages"></a><a name="IX_PDDocGetNumPages_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Search for existing annotations by iterating through the PDF document page by page. One way to perform this task is to create a for loop structure and invoke the <span class="FM_Courier">PDDocGetNumPages</span>&#160;method. This method requires a <span class="FM_Courier">PDDoc</span>&#160;object as an argument and returns the number of pages within the document.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDDocAcquirePage_1"></a><a name="IX_PDDocAcquirePage_method_1"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each page within the PDF document, obtain a <span class="FM_Courier">PDPage</span>&#160;object by invoking the <span class="FM_Courier">PDDocAcquirePage</span> method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDDoc</span> object that represents the PDF document that contains the page.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASInt32</span> object that represents the page number.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDPageGetNumAnnots"></a><a name="IX_PDPageGetNumAnnots_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>After you obtain a <span class="FM_Courier">PDPage</span>&#160;object, get the number of annotations located on the page by invoking the <span class="FM_Courier">PDPageGetNumAnnots</span>&#160;method. This method requires a <span class="FM_Courier">PDPage</span>&#160;object as an argument and returns an <span class="FM_Courier">ASInt32</span>&#160;object representing the number of annotations located on the page. </p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDPageGetAnnot"></a><a name="IX_PDPageGetAnnot_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>For each annotation on a page, invoke the <span class="FM_Courier">PDPageGetAnnot</span>&#160;method. This method requires a <span class="FM_Courier">PDPage</span>&#160;object and an <span class="FM_Courier">ASInt32</span>&#160;object that represents the index of the annotation. This method returns a <span class="FM_Courier">PDAnnot</span>&#160;object. </p>
  <p dir="ltr" class="FM_Body"><a name="IX_ASAtomGetString"></a><a name="IX_ASAtomGetString_method"></a><a name="IX_annotation_subtype"></a><a name="IX_PDAnnotGetSubtype"></a><a name="IX_PDAnnotGetSubtype_method"></a>The following code example retrieves existing annotations located within a PDF document. After an annotation is retrieved, information about the annotation is displayed within an alert box. Information about the annotation is retrieved by invoking the <span class="FM_Courier">PDAnnotGetSubtype</span>&#160;method. This method returns an <span class="FM_Courier">ASAtom</span>&#160;object representing the annotation’s subtype. For example, if the annotation is a stamp, then an <span class="FM_Courier">ASAtom</span>&#160;object storing the value <span class="FM_Courier">Stamp</span>&#160;is returned. You can get the string value from an <span class="FM_Courier">ASAtom</span>&#160;object by invoking the <span class="FM_Courier">ASAtomGetString</span>&#160;method and passing the <span class="FM_Courier">ASAtom</span>&#160;object. </p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Retrieving existing annotations</p>
  <p dir="ltr" class="FM_CodeReference">PDPage page;</p>
  <p dir="ltr" class="FM_CodeReference">ASInt32 i,i2;</p>
  <p dir="ltr" class="FM_CodeReference">PDAnnot annot;</p>
  <p dir="ltr" class="FM_CodeReference">char* ptr;</p>
  <p dir="ltr" class="FM_CodeReference">char buf[200];</p>
  <p dir="ltr" class="FM_CodeReference">ASAtom atom;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Iterate through the PDF document page by page</p>
  <p dir="ltr" class="FM_CodeReference">for (i = 0; i &lt; PDDocGetNumPages(myPDDoc); i ++){</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get each page within the document</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>page = PDDocAcquirePage(myPDDoc, i);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get each annotation on the page</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i2 = 0; i2 &lt; PDPageGetNumAnnots(page); i2++) {</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get a specific annotation</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>annot = PDPageGetAnnot(page,i2);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (PDAnnotIsValid(annot))<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Display subtype information about the annotation</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>atom = PDAnnotGetSubtype(annot);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Cast the ASAtom object to a character pointer</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ptr = (char*) ASAtomGetString(atom);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sprintf(buf, &quot;The annotation’s subtype is %s&quot;, ptr);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (buf);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>In the previous code example, assume a <span class="FM_Courier">PDDoc</span>&#160;object named <span class="FM_Courier">myPDDoc</span>&#160;exists. (See <a href="../Documents_and_Files/Creating_a_PDDoc_object.htm#XREF_97094_Creating_a_PDDoc"><span class="FM_HyperText">Creating a PDDoc object</span></a>.)</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Modifying_text"></a><a name="IX_modifying_annotations"></a><a name="IX_PDTextAnnotGetContents_1"></a><a name="IX_PDTextAnnotGetContents"></a><a name="IX_PDAnnotGetSubtype_1"></a><a name="IX_PDAnnotGetSubtype_method_1"></a><a name="IX_modifying"></a><a name="IX_annotations_2"></a><a name="XREF_71304_Modifying_text"></a>Modifying text annotations</p>
  <p dir="ltr" class="FM_Body">You can modify an annotation after you retrieve it. For example, you can retrieve an existing text annotation and modify its text. For information about retrieving an annotation, see <a href="#XREF_93262_Retrieving"><span class="FM_HyperText">Retrieving existing annotations</span></a>.</p>
  <p dir="ltr" class="FM_Body">Before you modify an annotation, determine whether the annotation is the correct subtype. That is, before modifying a text annotation, ensure that the annotation is a <span class="FM_Courier">Text</span>&#160;annotation. You can determine whether an annotation is the correct subtype by invoking the <span class="FM_Courier">PDAnnotGetSubtype</span>&#160;method. This method requires a <span class="FM_Courier">PDAnnot</span>&#160;object and returns an <span class="FM_Courier">ASAtom</span> object that specifies the annotation’s subtype.</p>
  <p dir="ltr" class="FM_Body">When modifying a text annotation, it is recommended that you check its contents. For example, you can retrieve all text annotations in a PDF document, retrieve the annotation’s text, and modify annotations that contain specific text. To retrieve the text of an annotation, invoke the <span class="FM_Courier">PDTextAnnotGetContents</span>&#160;method and pass the following arguments:</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDTextAnnot</span> object that contains text to retrieve.</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A character pointer that is populated with the annotation’s text.</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASInt32</span> object that represents the size of the character pointer.</p>
  <p dir="ltr" class="FM_Body">The following code example iterates through all annotations located in a PDF document. Each valid annotation is checked to determine whether it is a <span class="FM_Courier">Text</span>&#160;annotation. This task is performed by invoking the <span class="FM_Courier">PDAnnotGetSubtype</span>&#160;method. If the annotations is a <span class="FM_Courier">Text</span>&#160;annotation, then the annotation’s text is retrieved by invoking the <span class="FM_Courier">PDTextAnnotGetContents</span> method.</p>
  <p dir="ltr" class="FM_Body">Because the size of the annotation’s text is unknown, the <span class="FM_Courier">PDTextAnnotGetContents</span>&#160;is invoked twice. The first time it is invoked, <span class="FM_Courier">NULL</span>&#160;is passed as the buffer address (second argument) and <span class="FM_Courier">0</span>&#160;is specified as the buffer size (third argument). The text length is returned to an <span class="FM_Courier">ASInt32</span>&#160;object named <span class="FM_Courier">bufSize</span>. The <span class="FM_Courier">ASmalloc</span>&#160;method is invoked which allocates <span class="FM_Courier">bufSize</span> bytes to the character pointer.</p>
  <p dir="ltr" class="FM_Body">The second time <span class="FM_Courier">PDTextAnnotGetContents</span>&#160;is invoked, the allocated character pointer is passed as well as the <span class="FM_Courier">ASInt32</span>&#160;object named <span class="FM_Courier">bufSize</span>. The character pointer is populated with the annotation’s text. </p>
  <p dir="ltr" class="FM_Body">Next the <span class="FM_Courier">strcmp</span>&#160;method is invoked to compare the annotation’s text with a specific string value. If the annotation’s text matches the string value, then the <span class="FM_Courier">PDTextAnnotSetContents</span>&#160;method is invoked, which replaces the annotation’s text with new text. </p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Modifying a text annotation</p>
  <p dir="ltr" class="FM_CodeReference">PDPage page;</p>
  <p dir="ltr" class="FM_CodeReference">ASInt32 i,i2;</p>
  <p dir="ltr" class="FM_CodeReference">PDAnnot annot;</p>
  <p dir="ltr" class="FM_CodeReference">char setbuf[200];</p>
  <p dir="ltr" class="FM_CodeReference">ASAtom atom;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Iterate through the PDF document page by page</p>
  <p dir="ltr" class="FM_CodeReference">for (i = 0; i &lt; PDDocGetNumPages(myPDDoc); i ++){</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get each page within the document</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>page = PDDocAcquirePage(myPDDoc, i);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get each annotation on the page</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>for (i2 = 0; i2 &lt; PDPageGetNumAnnots(page); i2++) {</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get a specific annotation</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>annot = PDPageGetAnnot(page,i2);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (PDAnnotIsValid(annot)){</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Determine if the annotation is a Text annotation</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (PDAnnotGetSubtype(annot) == ASAtomFromString(&quot;Text&quot;)) {</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a character pointer to store the annotation's text</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>char * annBuf; </p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASInt32 bufSize = PDTextAnnotGetContents(annot, NULL, 0) +1;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Allocate the size of bufSize to the character pointer</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>annBuf = (char*)ASmalloc((os_size_t)bufSize);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Populate annBuf with the annotation's text</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDTextAnnotGetContents(annot, annBuf, bufSize);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Compare the contents of annBuf with a string</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (strcmp(annBuf,&quot;This is initial text&quot;) == 0){</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Modify the annotation's text</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>sprintf (setbuf, &quot;This is the new text for the annotation.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDTextAnnotSetOpen (annot, true);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDTextAnnotSetContents (annot, setbuf, strlen(setbuf));</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> }</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>}</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>In the previous code example, assume a <span class="FM_Courier">PDDoc</span>&#160;object named <span class="FM_Courier">myPDDoc</span>&#160;exists. (See <a href="../Documents_and_Files/Creating_a_PDDoc_object.htm#XREF_97094_Creating_a_PDDoc"><span class="FM_HyperText">Creating a PDDoc object</span></a>.)</p>
  </div>
<!-- Body place holder ends here-->

    <!-- Footer place holder starts here-->
    <div style="padding:0.4em 0;text-align:center;width:100%;position:relative;">
    	<hr/>
		<p style="font-size:0.7em;margin:0; font-family:adobe-clean, sans-serif"><a target="_blank" href="http://help.adobe.com/en_US/legalnotices/index.html">Legal Notices</a> | <a target="_blank" href="http://www.adobe.com/privacy.html">Online Privacy Policy</a></p>
	</div>
	<!-- Footer place holder ends here-->

</body>
</html>