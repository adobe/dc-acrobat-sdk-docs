<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/pdflsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Working with Cos streams</title>

 

 <link rel="stylesheet" href="Working_with_Cos_Objects.css" />
 <link rel="stylesheet" href="../../HTMLStyling.css" />


 <script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker 2017" />
<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "3.14.6";
</script>
 <meta name="brsprev" value="PDFL_MasterBook/Working_with_Cos_Objects/Working_with_Cos_names.htm">
 <meta name="brsnext" value="PDFL_MasterBook/Creating_3D_Annotations/Creating_3D_Annotations.htm">
 <meta name="topic-breadcrumbs" content="Developing Plug-ins and Applications > Working with Cos Objects" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

   
	<!-- Body place holder starts here-->
    <div dir="ltr">
  <p dir="ltr" class="FM_3Head"><a name="XREF_87366_Working_with_Cos"></a>Working with Cos streams</p>
  <p dir="ltr" class="FM_Body">This section discusses ways in which you can work with Cos streams. (See <a href="About_Cos_objects.htm#XREF_63762_Cos_streams"><span class="FM_HyperText">Cos streams</span></a>.)</p>
  <p dir="ltr" class="FM_Body">A stream is represented by an <span class="FM_Courier">ASStm</span>&#160;object definition. A data stream can be a buffer in memory, a file, or an arbitrary user-written procedure. When writing or extracting data streams, an <span class="FM_Courier">ASStm</span>&#160;object must be converted to a Cos stream.</p>
  <p dir="ltr" class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>Before reading this section, it is strongly recommended that you are familiar with concepts discussed earlier in this chapter, such as <span class="FM_Courier">Cos</span>&#160;arrays and Cos dictionaries. </p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Creating_Cos_streams"></a><a name="IX_cos_streams_1"></a>Creating Cos streams</p>
  <p dir="ltr" class="FM_Body">You can create a data stream in memory and then insert the stream into a PDF document page. The following diagram shows the result of a data stream that creates a thin black line segment being inserted into a PDF document.</p>
  <div align="center"><img alt="lineStream.jpg" id="image15" src="../../assets/lineStream.jpg" style="max-width: 100% ;height: auto" />
  </div>
  <p dir="ltr" class="FM_GraphicBody">&nbsp;</p>
  <p dir="ltr" class="FM_Body">The following example shows the syntax of a stream that creates a thin line segment:</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>150 250 m 150 350 l S</p>
  <p dir="ltr" class="FM_Body">In contrast, the following example shows the syntax of a stream that inserts the text <span class="FM_Courier">Hello</span>&#160;<span class="FM_Courier">There</span>&#160;into a PDF document:</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>BT /F0 1 Tf 24 0 0 24 36 756 Tm 0 Tr 0 g 0 Tc 0 Tw \(Hello There) Tj ET</p>
  <p dir="ltr" class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>For information about stream syntax, see the <span data-name="Ref_DocPDF" data-val="PDF Reference" data-showval="TRUE" data-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></span><span class="FM_Italic"></span>. This reference is available within the portfolio called <span class="FM_HyperText"><a href="http://www.adobe.com/devnet/pdf.html">PDF Reference and Related Documentation</a></span>, which is located at the <span class="FM_HyperText"><a href="http://www.adobe.com/go/pdf_developer">Adobe PDF Technology Center</a></span>.</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Creating_a_stream"></a><a name="IX_cos_stream_dictionary"></a><a name="XREF_71942_Creating_a_stream"></a>Creating a stream dictionary</p>
  <p dir="ltr" class="FM_Body">Each Cos stream has a stream dictionary that contains a <span class="FM_Courier">Length</span>&#160;entry that indicates how many bytes are used for the stream’s data (if the stream has a filter, the <span class="FM_Courier">Length</span>&#160;entry is the number of bytes of encoded data). A limit of 4096 bytes exists for the <span class="FM_Courier">Length</span>&#160;entry. A stream dictionary also has optional entries that are not discussed in this section. For more information about stream dictionaries, see the <span class="FM_Italic"><span data-name="Ref_DocPDF" data-val="PDF Reference" data-showval="TRUE" data-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></span></span><span class="FM_Italic"></span><span class="FM_Italic"></span>.</p>
  <p dir="ltr" class="FM_Body">In addition, most filters are defined so that the data is self-limiting; that is, they use an encoding scheme in which an explicit end-of-data (EOD) marker delimits the extent of the data. Finally, streams are used to represent many objects from whose length attributes can be inferred. All of these constraints must be consistent.</p>
  <p dir="ltr" class="FM_Body">For example, an image with 10 rows and 20 columns, using a single color component and 8 bits per component, requires exactly 200 bytes of image data. If the stream uses a filter, there must be enough bytes of encoded data in the PDF file to produce those 200 bytes. An error occurs if the <span class="FM_Courier">Length</span>&#160;entry is too small, if an explicit EOD marker occurs too soon, or if the decoded data does not contain 200 bytes. It is also an error if the stream contains too much data, with the exception that there may be an extra end-of-line marker in the PDF file before the <span class="FM_Courier">endstream</span>&#160;keyword. All streams created in this section have a stream dictionary defined.</p>
  <p dir="ltr" class="FM_Body">For each stream that you want to insert into a PDF document, create a stream dictionary that contains at least the <span class="FM_Courier">Length</span> entry, as shown in the following example:</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&lt;&lt;/Length 100&gt;&gt;</p>
  <p dir="ltr" class="FM_6HeadStep"><span class="FM_Z_Arrow">ä<span style="padding-left: 8pt;" class="FMAutoNumber_1"></span></span>To create a stream dictionary with the Length entry defined:</p>
  <p dir="ltr" class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosDoc</span>&#160;object that represents a PDF file by invoking the <span class="FM_Courier">PDDocGetCosDoc</span> method.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an <span class="FM_Courier">ASUns32</span> object that represents the stream length.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosObj</span>&#160;object that represents the length of the stream by invoking the <span class="FM_Courier">CosNewInteger</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosDoc</span> object that you created in step 1.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASBool</span>&#160;object that specifies whether the <span class="FM_Courier">CosObj</span>&#160;object is an indirect or direct object. If <span class="FM_Courier">true</span>, the string is an indirect object. If <span class="FM_Courier">false</span>, the string is a direct object. (See <a href="About_Cos_objects.htm#XREF_86862_About_direct_and"><span class="FM_HyperText">About direct and indirect objects</span></a>.)</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">ASUns32</span> object created in step 2 that represents the stream length.</p>
  <p dir="ltr" class="FM_Indent1">The <span class="FM_Courier">CosNewInteger</span>&#160;method returns a <span class="FM_Courier">CosObj</span> object that represents the stream length.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosObj</span>&#160;object that represents the Cos dictionary. (See <a href="Creating_Cos_dictionaries.htm#XREF_10844_Creating_a_Cos"><span class="FM_HyperText">Creating Cos dictionaries</span></a>.) </p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the stream dictionary key and value by invoking the <span class="FM_Courier">CosDictPutKeyString</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">CosObj</span>&#160;object that you created in step 4 that represents the dictionary. </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A character pointer that specifies the name of the key, which in this situation is <span class="FM_Courier">Length</span>. </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">CosObj</span> object created in step 3 that specifies the length of the stream.</p>
  <p dir="ltr" class="FM_Body">The following code example creates a stream dictionary. The first part of this code example creates a <span class="FM_Courier">PDPage</span>&#160;object by using an <span class="FM_Courier">AVDoc</span>&#160;object. For information about this application logic, see <a href="../Page_Views_and_Contents/Displaying_page_views.htm#XREF_91421_Creating_a"><span class="FM_HyperText">Creating a PDEContent object</span></a>. </p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Creating a stream dictionary</p>
  <p dir="ltr" class="FM_CodeComment">//Create a PDPage object using the current page</p>
  <p dir="ltr" class="FM_CodeReference">AVDoc avDoc = AVAppGetActiveDoc();</p>
  <p dir="ltr" class="FM_CodeReference">AVPageView pageView = AVDocGetPageView(avDoc);</p>
  <p dir="ltr" class="FM_CodeReference">PDPageNumber pageNum = AVPageViewGetPageNum(pageView);</p>
  <p dir="ltr" class="FM_CodeReference">PDDoc pdDoc = AVDocGetPDDoc(avDoc); </p>
  <p dir="ltr" class="FM_CodeReference">PDPage pdPage = PDDocAcquirePage(pdDoc, pageNum);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Use the PDPage object to get the CosDoc object</p>
  <p dir="ltr" class="FM_CodeReference">CosDoc cd = PDDocGetCosDoc(PDPageGetDoc(pdPage));</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Define a stream to draw a line</p>
  <p dir="ltr" class="FM_CodeReference">char buf [500]; </p>
  <p dir="ltr" class="FM_CodeReference">sprintf(buf,&quot;150 250 m 150 350 l S&quot;);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Get the stream length</p>
  <p dir="ltr" class="FM_CodeReference">ASUns32 streamLength = (ASUns32)strlen(buf);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a CosObj object that represents the stream length</p>
  <p dir="ltr" class="FM_CodeReference">CosObj LengthEntry = CosNewInteger(cd, false,streamLength);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a CosObj that represents a stream dictionary</p>
  <p dir="ltr" class="FM_CodeComment">//and sets its key-value pairs</p>
  <p dir="ltr" class="FM_CodeReference">CosObj AttrDict = CosNewDict(cd, false, 5);</p>
  <p dir="ltr" class="FM_CodeReference">char *Length_KStr = &quot;Length&quot;;</p>
  <p dir="ltr" class="FM_CodeReference">CosDictPutKeyString(AttrDict, Length_KStr, LengthEntry);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Determine if the stream dictionary is valid</p>
  <p dir="ltr" class="FM_CodeReference">if (CosObjEqual (AttrDict, CosNewNull ()) == true)</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;The attributes dictionary could not be created.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return;</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_Note"><span class="FM_Z_NoteCaution">Note:<span style="padding-left: 4pt;" class="FMAutoNumber_1"></span></span>This code example creates a <span class="FM_Courier">CosObj</span>&#160;object named <span class="FM_Courier">AttrDict</span> that represents a stream dictionary.</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Inserting_a_Cos_stream"></a><a name="IX_inserting_a_cos_stream"></a>Inserting a Cos stream into a PDF document</p>
  <p dir="ltr" class="FM_Body">When inserting a stream into a PDF document, ensure that the stream is valid; otherwise, a run-time error occurs. This section explains how to create a stream that draws a thin black line segment and then inserts the stream into the current PDF page. </p>
  <p dir="ltr" class="FM_6HeadStep"><span class="FM_Z_Arrow">ä<span style="padding-left: 8pt;" class="FMAutoNumber_1"></span></span>To insert a stream into the current PDF document page:</p>
  <p dir="ltr" class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDPage</span>&#160;object that represents the current PDF page. (See <a href="../Page_Views_and_Contents/Displaying_page_views.htm#XREF_91421_Creating_a"><span class="FM_HyperText">Creating a PDEContent object</span></a>.)</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosDoc</span>&#160;object that represents a PDF file by invoking the <span class="FM_Courier">PDDocGetCosDoc</span> method.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Define the stream that draws a thin black line segment. You can populate a character array with a stream by invoking the <span class="FM_Courier">sprintf</span> method.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an <span class="FM_Courier">ASUns32</span> object that represents the stream length.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosObj</span>&#160;object that represents the stream dictionary. (See <a href="#XREF_71942_Creating_a_stream"><span class="FM_HyperText">Creating a stream dictionary</span></a>.)</p>
  <p dir="ltr" class="FM_Step"><a name="IX_ASMemStmRdOpen"></a><a name="IX_ASMemStmRdOpen_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Read the stream into memory by invoking the <span class="FM_Courier">ASMemStmRdOpen</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A character pointer that contains the data stream</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASUns32</span> object that specifies the stream length</p>
  <p dir="ltr" class="FM_Indent1">This method returns an <span class="FM_Courier">ASStm</span> object that represents an in-memory data stream.</p>
  <p dir="ltr" class="FM_Step"><a name="IX_CosNewStream"></a><a name="IX_CosNewStream_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a new Cos stream that is based on data located in the <span class="FM_Courier">ASStm</span>&#160;object by invoking the <span class="FM_Courier">CosNewStream</span> method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosDoc</span>&#160;object that specifies the PDF document in which the Cos stream is inserted (pass the <span class="FM_Courier">CosDoc</span> object created in step 2).</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASBool</span>&#160;object that specifies whether the Cos stream is an indirect object. Because all streams are indirect objects, this argument must be set to <span class="FM_Courier">true</span>. </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASStm</span>&#160;object that contains the stream data (pass the <span class="FM_Courier">ASStm</span>&#160;object created in step 6). </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosStreamStartAndCode</span>&#160;object that specifies the byte offset from which data reading starts. You can pass <span class="FM_Courier">0</span>&#160;to ensure that data reading starts at the beginning of the stream. </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>An <span class="FM_Courier">ASBool</span>&#160;object that specifies whether the data is encoded using filters specified in the stream dictionary before it is written to the Cos stream.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosObj</span>&#160;object that represents the stream dictionary (pass the <span class="FM_Courier">CosObj</span>&#160;object created in step 5). </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosObj</span>&#160;object that represents the parameters that are used by the encoding filter if the source data is encoded before it is written to the file. If encoding parameters are not required, this value is ignored. For information about encoding filters, see the <span data-name="Ref_DocPDF" data-val="PDF Reference" data-showval="TRUE" data-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></span><span class="FM_Italic"></span>. This reference is available within the portfolio called <span class="FM_HyperText"><a href="http://www.adobe.com/devnet/pdf.html">PDF Reference and Related Documentation</a></span>, which is located at the <span class="FM_HyperText"><a href="http://www.adobe.com/go/pdf_developer">Adobe PDF Technology Center</a></span>.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosByteMax</span>&#160;object that specifies the amount of data read from the source. If this value is <span class="FM_Courier">-1</span>, data is read from the source until it reaches the end of the stream.</p>
  <p dir="ltr" class="FM_Indent1">The <span class="FM_Courier">CosNewStream</span>&#160;method returns a <span class="FM_Courier">CosObj</span>&#160;object that represents the Cos stream. </p>
  <p dir="ltr" class="FM_Step"><a name="IX_PDPageAddCosContents_1"></a><a name="IX_PDPageAddCosContents"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>8.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Replace the contents of the specified page with the Cos stream by invoking the <span class="FM_Courier">PDPageAddCosContents</span> method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">PDPage</span>&#160;object that represents the current page of the PDF document (pass the <span class="FM_Courier">PDPage</span>&#160;object created in step 1). </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>A <span class="FM_Courier">CosObj</span>&#160;object that contains the Cos stream. </p>
  <p dir="ltr" class="FM_Body">The following code example creates a Cos stream and inserts it into the current page of a PDF document. </p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Inserting a Cos stream into a PDF document page</p>
  <p dir="ltr" class="FM_CodeComment">//Declare local variables used in this code example</p>
  <p dir="ltr" class="FM_CodeReference">CosDoc cd;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj PageStrm, LengthEntry, AttrDict;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj EncodeParms = CosNewNull();</p>
  <p dir="ltr" class="FM_CodeReference">ASStm OpenedStream;</p>
  <p dir="ltr" class="FM_CodeReference">char buf [500];</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a PDPage object using the current page</p>
  <p dir="ltr" class="FM_CodeReference">AVDoc avDoc = AVAppGetActiveDoc();</p>
  <p dir="ltr" class="FM_CodeReference">AVPageView pageView = AVDocGetPageView(avDoc);</p>
  <p dir="ltr" class="FM_CodeReference">PDPageNumber pageNum = AVPageViewGetPageNum(pageView);</p>
  <p dir="ltr" class="FM_CodeReference">PDDoc pdDoc = AVDocGetPDDoc(avDoc);</p>
  <p dir="ltr" class="FM_CodeReference">PDPage pdPage = PDDocAcquirePage(pdDoc, pageNum); // acquire current page</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Use the PDPage object to create a CosDoc object</p>
  <p dir="ltr" class="FM_CodeReference">cd = PDDocGetCosDoc(PDPageGetDoc(pdPage));</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Define a stream that creates a thin line segment</p>
  <p dir="ltr" class="FM_CodeReference">sprintf(buf,&quot;150 250 m 150 350 l S&quot;);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Get the stream length</p>
  <p dir="ltr" class="FM_CodeReference">ASUns32 streamLength = (ASUns32)strlen(buf);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a CosObj object that represents the stream length</p>
  <p dir="ltr" class="FM_CodeReference">LengthEntry = CosNewInteger(cd, false,streamLength);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create a CosObj that represents a stream dictionary</p>
  <p dir="ltr" class="FM_CodeComment">//and set it key-value pairs</p>
  <p dir="ltr" class="FM_CodeReference">AttrDict = CosNewDict(cd, false,5);</p>
  <p dir="ltr" class="FM_CodeReference">char *Length_KStr = &quot;Length&quot;;</p>
  <p dir="ltr" class="FM_CodeReference">CosDictPutKeyString(AttrDict, Length_KStr, LengthEntry);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Determine if the stream dictionary is valid</p>
  <p dir="ltr" class="FM_CodeReference">if (CosObjEqual (AttrDict, CosNewNull ()) == true)</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;The stream dictionary could not be created&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return;</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_CodeComment">//Read the stream into memory by invoking the ASMemStmRdOpen method</p>
  <p dir="ltr" class="FM_CodeReference">OpenedStream = ASMemStmRdOpen(buf,streamLength);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a new Cos stream using data from the ASStm object</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PageStrm = CosNewStream(cd, true, OpenedStream, 0,</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&#160;false, // StmDataIsNotDecoded </p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> AttrDict, //The stream dictionary</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span> EncodeParms, -1);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Close the stream</p>
  <p dir="ltr" class="FM_CodeReference">ASStmClose(OpenedStream);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">AVAlertNote (&quot;Trying to create new CosStream&quot;);</p>
  <p dir="ltr" class="FM_CodeReference">CosObjDestroy (AttrDict);</p>
  <p dir="ltr" class="FM_CodeReference">ASStmClose (OpenedStream);</p>
  <p dir="ltr" class="FM_CodeReference">return;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Completely replace the contents of the specified page with newContents</p>
  <p dir="ltr" class="FM_CodeReference">PDPageAddCosContents (pdPage, PageStrm);</p>
  <p dir="ltr" class="FM_NoteCaution"><span class="FM_Z_NoteCaution">Caution:<span style="padding-left: 7pt;" class="FMAutoNumber_1"></span></span>If you execute this code example without having a PDF document open, you will cause an <span data-name="AdobeReaderProd" data-val="Adobe&nbsp;Reader" data-showval="TRUE" data-format="AdobeReaderProd">Adobe&nbsp;Reader</span>&#160;or <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;run-time error. The run-time error occurs because this code example creates a <span class="FM_Courier">PDPage</span> object that is based on the current PDF document page.</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Populating_a_PDF"></a>Populating a PDF document with a content stream</p>
  <p dir="ltr" class="FM_Body">This section explains how to use the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;core API to create a new PDF document, insert a page into the document, and populate the page with a Cos content stream that inserts the text <span class="FM_Courier">Hello</span>&#160;<span class="FM_Courier">There</span>. When inserting a content stream into a PDF document, in addition to creating a stream dictionary, you must also create a resource dictionary and a page dictionary. A resource dictionary defines attributes such as the font that a content stream uses and a page dictionary defines attributes such as the page’s height and width. For information about these dictionaries, see the <span data-name="Ref_DocPDF" data-val="PDF Reference" data-showval="TRUE" data-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></span><span class="FM_Italic"></span>. This reference is available within the portfolio called <span class="FM_HyperText"><a href="http://www.adobe.com/devnet/pdf.html">PDF Reference and Related Documentation</a></span>, which is located at the <span class="FM_HyperText"><a href="http://www.adobe.com/go/pdf_developer">Adobe PDF Technology Center</a></span>.</p>
  <p dir="ltr" class="FM_Body">The following example shows the resource dictionary that is created in this section.</p>
  <p dir="ltr" class="FM_CodeReference">4 0 obj</p>
  <p dir="ltr" class="FM_CodeReference">&lt;&lt;</p>
  <p dir="ltr" class="FM_CodeReference">/Font &lt;&lt; /F0 5 0 R &gt;&gt;</p>
  <p dir="ltr" class="FM_CodeReference">/ProcSet 6 0 R</p>
  <p dir="ltr" class="FM_CodeReference">&gt;&gt;</p>
  <p dir="ltr" class="FM_CodeReference">endobj</p>
  <p dir="ltr" class="FM_Body">The following example shows the font descriptor that is created in this section.</p>
  <p dir="ltr" class="FM_CodeReference">5 0 obj</p>
  <p dir="ltr" class="FM_CodeReference">&lt;&lt;</p>
  <p dir="ltr" class="FM_CodeReference">/Type /Font</p>
  <p dir="ltr" class="FM_CodeReference">/Subtype /Type1</p>
  <p dir="ltr" class="FM_CodeReference">/Name /F0</p>
  <p dir="ltr" class="FM_CodeReference">/BaseFont /Courier</p>
  <p dir="ltr" class="FM_CodeReference">/Encoding /WinAnsiEncoding</p>
  <p dir="ltr" class="FM_CodeReference">&gt;&gt;</p>
  <p dir="ltr" class="FM_CodeReference">endobj</p>
  <p dir="ltr" class="FM_Body">The following example shows the Procset resource created in this section. </p>
  <p dir="ltr" class="FM_CodeReference">This is a procset resource.</p>
  <p dir="ltr" class="FM_CodeReference">6 0 obj</p>
  <p dir="ltr" class="FM_CodeReference">[</p>
  <p dir="ltr" class="FM_CodeReference">/PDF /Text</p>
  <p dir="ltr" class="FM_CodeReference">]</p>
  <p dir="ltr" class="FM_CodeReference">endobj</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_Body">The following example shows the page dictionary that is created in this section. </p>
  <p dir="ltr" class="FM_CodeReference">This is the page dictionary.</p>
  <p dir="ltr" class="FM_CodeReference">7 0 obj</p>
  <p dir="ltr" class="FM_CodeReference">&lt;&lt;</p>
  <p dir="ltr" class="FM_CodeReference">/Type /Page</p>
  <p dir="ltr" class="FM_CodeReference">/MediaBox [ 0 0 612 792 ]</p>
  <p dir="ltr" class="FM_CodeReference">/Parent 2 0 R</p>
  <p dir="ltr" class="FM_CodeReference">/Resources 4 0 R</p>
  <p dir="ltr" class="FM_CodeReference">/Contents 8 0 R</p>
  <p dir="ltr" class="FM_CodeReference">&gt;&gt;</p>
  <p dir="ltr" class="FM_CodeReference">endobj</p>
  <p dir="ltr" class="FM_Body">The following diagram shows the PDF document that is created in this section. </p>
  <p dir="ltr" class="FM_GraphicBody"><img alt="HelloPDF.jpg" id="image16" src="../../assets/HelloPDF.jpg" style="max-width: 100% ;height: auto" />&nbsp;</p>
  <p dir="ltr" class="FM_6HeadStep"><span class="FM_Z_Arrow">ä<span style="padding-left: 8pt;" class="FMAutoNumber_1"></span></span>To create a PDF document and populate it with a Cos content stream:</p>
  <p dir="ltr" class="FM_StepReset"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Define the media box rectangle used in the PDF document’s page. </p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFixedRect MedBox;</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>MedBox.left = ASInt32ToFixed (0);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>MedBox.top = ASInt32ToFixed (792);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>MedBox.right = ASInt32ToFixed (612);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>MedBox.bottom = ASInt32ToFixed (0);</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Define the stream that is written to the PDF document page, as shown in the following example.</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>char* StreamBuf = (char*)&quot;BT /F0 1 Tf 24 0 0 24 36 756 Tm 0 Tr 0 g 0 Tc 0 Tw \</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>(Hello There) Tj ET&quot;;</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDDoc</span>&#160;object that represents the new document by invoking the <span class="FM_Courier">PDDocCreate</span>&#160;method. After the document is created, at least one page must be added before <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;or <span data-name="AdobeReaderProd" data-val="Adobe&nbsp;Reader" data-showval="TRUE" data-format="AdobeReaderProd">Adobe&nbsp;Reader</span>&#160;can display the document.</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDDoc NewDoc = PDDocCreate ();</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">PDPage</span>&#160;object that represents the page by invoking the <span class="FM_Courier">PDDocCreatePage</span>&#160;method and passing the following arguments:</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">PDDoc</span>&#160;object that you created. </p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">PDBeforeFirstPage</span> enum value that specifies where to place the page.</p>
  <p dir="ltr" class="FM_Bullet2"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>The <span class="FM_Courier">ASFixedRect</span> object that defines the media box rectangle.</p>
  <p dir="ltr" class="FM_Indent1">This method returns a <span class="FM_Courier">PDPage</span>&#160;object that represents the new page. </p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create a <span class="FM_Courier">CosObj</span>&#160;object that represents a resource dictionary. In the following code example, a resource dictionary is created in a user-defined function named <span class="FM_Courier">SetResourceForPage</span>. </p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>6.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Set the page’s resource key. In the following code example, the page’s resource’s key is set in a user-defined function named <span class="FM_Courier">CreateResourceDicts</span>.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>7.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Add a Cos stream to the page. In the following code example, a Cos stream is added to the page in a user-defined function named <span class="FM_Courier">AddStreamToPage</span>. </p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>8.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Open the PDF document in <span data-name="AdobeReaderProd" data-val="Adobe&nbsp;Reader" data-showval="TRUE" data-format="AdobeReaderProd">Adobe&nbsp;Reader</span>&#160;or <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>. In the following code example, this task occurs in the user-defined function named <span class="FM_Courier">MakeTheFile</span>.</p>
  <p dir="ltr" class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>9.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Save the PDF document. In the following code example, this task occurs in the user-defined function named <span class="FM_Courier">MakeTheFile</span>.</p>
  <p dir="ltr" class="FM_Body">The following code example represents an entire C source file that creates a PDF document and populates it with a Cos content stream. This source file is made up by various user-defined functions. To make it easier to view these functions, all function signatures are bolded. The entry point to this source file is the <span class="FM_Courier">MakeTheFile</span>&#160;function. You can invoke the <span class="FM_Courier">MakeTheFile</span>&#160;function from a menu item or toolbar button to execute this code example.</p>
  <p dir="ltr" class="FM_5Head_Example"><span class="FM_Z_Example">Example:&nbsp;</span>Creating a PDF document and populating it with a Cos content stream</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;ascalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;avcalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;avcalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;coscalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;pdcalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;ascalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;corcalls.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &quot;dos.h&quot;</p>
  <p dir="ltr" class="FM_CodeReference">#include &lt;io.h&gt;</p>
  <p dir="ltr" class="FM_CodeReference">#include &lt;stdlib.h&gt;</p>
  <p dir="ltr" class="FM_CodeReference">#include &lt;stdio.h&gt;</p>
  <p dir="ltr" class="FM_CodeReference">#include &lt;string.h&gt;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Declare global variables</p>
  <p dir="ltr" class="FM_CodeReference">CosObj PageStrm; /* To hold the newly created Cos stream */</p>
  <p dir="ltr" class="FM_CodeReference">CosObj AttrDict; /* As returned by CreateAttribsDict */</p>
  <p dir="ltr" class="FM_CodeReference">CosObj EncodeDict;</p>
  <p dir="ltr" class="FM_CodeComment">/*</p>
  <p dir="ltr" class="FM_CodeComment">** Used to specify what filters are used to encode the stream if</p>
  <p dir="ltr" class="FM_CodeComment">** used for output.</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference">CosObj ResDict; /* Resource dictionary for the page */</p>
  <p dir="ltr" class="FM_CodeReference">CosObj FontDictObj;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj FontDict;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj procArray;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">/*</p>
  <p dir="ltr" class="FM_CodeComment">** Set the page’s resource key. Return true if everything is valid,</p>
  <p dir="ltr" class="FM_CodeComment">** else false.</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference"><span class="FM_Bold">ASBool SetResourceForPage (PDPage page)</span>&#160;</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeReference">CosObj PageCosObj;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Make sure that the page is valid</p>
  <p dir="ltr" class="FM_CodeReference">if (!page)</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Get a CosDoc object by using the PDPage page passed to this object</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PageCosObj = PDPageGetCosObj(page);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (CosDictKnown (PageCosObj, ASAtomFromString (&quot;Resources&quot;) == true))</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (CosDictGet (PageCosObj, ASAtomFromString (&quot;Resources&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Place the ResDict object into the page's Resource Dictionary</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (PageCosObj, ASAtomFromString (&quot;Resources&quot;), ResDict);</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">return true;</p>
  <p dir="ltr" class="FM_CodeReference">} /* end of SetResourceForPage*/</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">/*</p>
  <p dir="ltr" class="FM_CodeComment">** Create the font’s resources. Return true if all is valid, else false.</p>
  <p dir="ltr" class="FM_CodeComment">** Creates the required font and proc set dictionaries; then creates the</p>
  <p dir="ltr" class="FM_CodeComment">** global resource dictionary for the PDF page</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference"><span class="FM_Bold">ASBool CreateResourceDicts (CosDoc cd)</span>&#160;</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ResDict = CosNewDict (cd, true, 10);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Trying to create the resource dictionary.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>FontDictObj = CosNewDict (cd, true, 5);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Trying to create the font’s dictionary.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (ResDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">/* Create this font descriptor dictionary.</p>
  <p dir="ltr" class="FM_CodeComment">** &lt;&lt;</p>
  <p dir="ltr" class="FM_CodeComment">** /Type /Font</p>
  <p dir="ltr" class="FM_CodeComment">** /Subtype /Type1</p>
  <p dir="ltr" class="FM_CodeComment">** /Name /F0</p>
  <p dir="ltr" class="FM_CodeComment">** /BaseFont /Courier</p>
  <p dir="ltr" class="FM_CodeComment">** /Encoding /WinAnsiEncoding</p>
  <p dir="ltr" class="FM_CodeComment">** &gt;&gt;</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDictObj, ASAtomFromString (&quot;Type&quot;),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewName (cd, false, ASAtomFromString (&quot;Font&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDictObj, ASAtomFromString (&quot;Subtype&quot;),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewName (cd, false, ASAtomFromString (&quot;Type1&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDictObj, ASAtomFromString (&quot;Name&quot;),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewName (cd, false, ASAtomFromString (&quot;F0&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDictObj, ASAtomFromString (&quot;BaseFont&quot;),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewName (cd,false, ASAtomFromString (&quot;Courier&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDictObj, ASAtomFromString (&quot;Encoding&quot;),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewName (cd,false, ASAtomFromString (&quot;WinAnsiEncoding&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Trying to add key-value pairs to the Font descriptor dictionary.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>FontDict = CosNewDict (cd, false, 2);</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Trying to create page’s resource dictionary.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference">return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeComment">/* Add entries to the page’s resource dictionary.</p>
  <p dir="ltr" class="FM_CodeComment">** &lt;&lt;</p>
  <p dir="ltr" class="FM_CodeComment">** /Font &lt;&lt; /F0 5 0 R &gt;&gt;</p>
  <p dir="ltr" class="FM_CodeComment">** /ProcSet 6 0 R</p>
  <p dir="ltr" class="FM_CodeComment">** &gt;&gt;</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeComment">/* Add /Font key-value pair to resource dictionary */</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (FontDict, ASAtomFromString (&quot;F0&quot;), FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (ResDict, ASAtomFromString (&quot;Font&quot;), FontDict);</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote &#160;(&quot;Trying to add key-value pairs to the page’s resource dict.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (ResDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeComment">/* Create the following proc set resource array.</p>
  <p dir="ltr" class="FM_CodeComment">** [</p>
  <p dir="ltr" class="FM_CodeComment">** /PDF /Text</p>
  <p dir="ltr" class="FM_CodeComment">** ]</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>procArray = CosNewArray (cd, true, 5);</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote &#160;(&quot;Trying to create proc set array.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (ResDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference">CosArrayPut (procArray, 0, CosNewName (cd, false, ASAtomFromString (&quot;PDF&quot;)));</p>
  <p dir="ltr" class="FM_CodeReference">CosArrayPut (procArray, 1, CosNewName (cd, false, ASAtomFromString (&quot;Text&quot;)));</p>
  <p dir="ltr" class="FM_CodeComment">/*</p>
  <p dir="ltr" class="FM_CodeComment">** Place the proc set key-value pair into the page’s resource dictionary.</p>
  <p dir="ltr" class="FM_CodeComment">*/</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPut (ResDict, ASAtomFromString (&quot;ProcSet&quot;), procArray);</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDictObj);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (FontDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (ResDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (procArray);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">return true;</p>
  <p dir="ltr" class="FM_CodeReference">} </p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">// Create and return the stream’s dictionary that defines the Length attribute</p>
  <p dir="ltr" class="FM_CodeReference"><span class="FM_Bold">CosObj CreateAttribsDict(CosDoc Doc, ASInt32 Len)</span>&#160;</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeComment">//Declare local variables</p>
  <p dir="ltr" class="FM_CodeReference">CosObj Dict; /* Holds newly created dictionary */</p>
  <p dir="ltr" class="FM_CodeReference">ASAtom Key; /* Key used to retrieve CosObj in dictionary */</p>
  <p dir="ltr" class="FM_CodeReference">CosObj Value; /* Assigned, then added to dictionary */</p>
  <p dir="ltr" class="FM_CodeReference">CosObj DecodeArray;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create the stream dictionary</p>
  <p dir="ltr" class="FM_CodeReference">Dict = CosNewDict(Doc, false, 10);</p>
  <p dir="ltr" class="FM_CodeReference">Key = ASAtomFromString(&quot;Length&quot;);</p>
  <p dir="ltr" class="FM_CodeReference">Value = CosNewInteger(Doc, false, Len);</p>
  <p dir="ltr" class="FM_CodeReference">CosDictPut(Dict, Key, Value);</p>
  <p dir="ltr" class="FM_CodeReference">return Dict;</p>
  <p dir="ltr" class="FM_CodeReference">} </p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Add stream to page. Return false if there are problems</p>
  <p dir="ltr" class="FM_CodeReference"><span class="FM_Bold">ASBool AddStreamToPage (PDPage page, char* StreamBuf, ASInt32 StreamBufLen)</span>&#160;</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeComment">//Declare local variables</p>
  <p dir="ltr" class="FM_CodeReference">CosDoc cd;</p>
  <p dir="ltr" class="FM_CodeReference">ASStm Stm=NULL;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj PageStrm;</p>
  <p dir="ltr" class="FM_CodeReference">CosObj EncodeParms = CosNewNull();</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create the CosDoc object</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>cd = PDDocGetCosDoc (PDPageGetDoc (page));</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Unable to get CosDoc&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Retrieve the Attributes dictionary</p>
  <p dir="ltr" class="FM_CodeReference">AttrDict = CreateAttribsDict (cd, StreamBufLen);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">if (CosObjEqual (AttrDict, CosNewNull ()) == true){</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Not making stream. Attribs dict not created.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_CodeComment">//Read the stream into memory by invoking the ASMemStmRdOpen method</p>
  <p dir="ltr" class="FM_CodeReference">Stm = ASMemStmRdOpen (StreamBuf, StreamBufLen);</p>
  <p dir="ltr" class="FM_CodeReference">if (!Stm){</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Unable to open data stream to create content stream.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Creates a new Cos stream using data from the ASStm object</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PageStrm = CosNewStream(cd, true, Stm, -1,</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>false,</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AttrDict, /* attributesDict */</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>EncodeParms,</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>-1);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">ASStmClose (Stm);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Trying to create new CosStream.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObjDestroy (AttrDict);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASStmClose (Stm);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return false;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Add the content stream to the page</p>
  <p dir="ltr" class="FM_CodeReference">PDPageAddCosContents (page, PageStrm);</p>
  <p dir="ltr" class="FM_CodeReference">return true;</p>
  <p dir="ltr" class="FM_CodeReference">} /* end of AddStreamToPage */</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Create the new PDF document</p>
  <p dir="ltr" class="FM_CodeReference"><span class="FM_Bold">void MakeTheFile (void)</span>&#160;</p>
  <p dir="ltr" class="FM_CodeReference">{</p>
  <p dir="ltr" class="FM_CodeComment">//Declare local variables</p>
  <p dir="ltr" class="FM_CodeReference">volatile PDDoc NewDoc = NULL;</p>
  <p dir="ltr" class="FM_CodeReference">volatile PDPage NewPage;</p>
  <p dir="ltr" class="FM_CodeReference">ASFixedRect MedBox;</p>
  <p dir="ltr" class="FM_CodeReference">ASInt32 PageCount = 0;</p>
  <p dir="ltr" class="FM_CodeReference">char* StreamBuf = NULL;</p>
  <p dir="ltr" class="FM_CodeReference">int StreamBufLen = 0;</p>
  <p dir="ltr" class="FM_CodeReference">ASBool result ; </p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Set up the page’s media box.</p>
  <p dir="ltr" class="FM_CodeReference">MedBox.left = ASInt32ToFixed (0);</p>
  <p dir="ltr" class="FM_CodeReference">MedBox.top = ASInt32ToFixed (792);</p>
  <p dir="ltr" class="FM_CodeReference">MedBox.right = ASInt32ToFixed (612);</p>
  <p dir="ltr" class="FM_CodeReference">MedBox.bottom = ASInt32ToFixed (0);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Define a stream to set the text matrix and write out the text</p>
  <p dir="ltr" class="FM_CodeReference">StreamBuf = (char*)&quot;BT /F0 1 Tf 24 0 0 24 36 756 Tm 0 Tr 0 g 0 Tc 0 Tw \(Hello There) Tj ET&quot;;</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment">//Get the length of StreamBufLen - this is where is it determined</p>
  <p dir="ltr" class="FM_CodeReference">StreamBufLen = strlen (StreamBuf);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a PDDoc object</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>NewDoc = PDDocCreate();</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (NewDoc)<span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>{</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Invoke the PDDocCreatePage method</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>NewPage = PDDocCreatePage(NewDoc, PDBeforeFirstPage, MedBox);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (!NewPage)</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASRaise (0);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Invoke CreateResourceDicts</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (CreateResourceDicts(PDDocGetCosDoc(NewDoc)) == false)</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASRaise (0);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Invoke SetResourceForPage method</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>result = SetResourceForPage(NewPage);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>// Invoke AddStreamToPage</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>result = AddStreamToPage (NewPage, StreamBuf, StreamBufLen);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (result == false) </p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASRaise (0);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDPageRelease (NewPage);</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Problem creating document.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (NewPage) PDPageRelease (NewPage);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (NewDoc) PDDocClose (NewDoc);</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>return;</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">DURING</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Open the new doc</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVDocOpenFromPDDoc(NewDoc, NULL);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Save the PDF document to the root of C and name it cosPDFDocument.pdf</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDDocSave(NewDoc, PDSaveFull | PDSaveLinearized ,ASPathFromPlatformPath<br />(&quot;C:\\cosPDFDocument.pdf&quot;), NULL, NULL, NULL);</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
  <p dir="ltr" class="FM_CodeReference">HANDLER</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote (&quot;Cannot open new document.&quot;);</p>
  <p dir="ltr" class="FM_CodeReference">END_HANDLER</p>
  <p dir="ltr" class="FM_CodeReference">}</p>
  <p dir="ltr" class="FM_CodeReference">&nbsp;</p>
 </div>
<!-- Body place holder ends here-->

    <!-- Footer place holder starts here-->
    <div style="padding:0.4em 0;text-align:center;width:100%;position:relative;">
    	<hr/>
		<p style="font-size:0.7em;margin:0; font-family:adobe-clean, sans-serif"><a target="_blank" href="http://help.adobe.com/en_US/legalnotices/index.html">Legal Notices</a> | <a target="_blank" href="http://www.adobe.com/privacy.html">Online Privacy Policy</a></p>
	</div>
	<!-- Footer place holder ends here-->

</body>
</html>