<!DOCTYPE HTML>
<html>
<head><meta http-equiv="refresh" content="2;url=https://opensource.adobe.com/dc-acrobat-sdk-docs/pdflsdk/" /><meta name="robots" content="noindex, nofollow">

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Upgrading existing plug-ins</title>

 

 <link rel="stylesheet" href="Plug-in_and_PDF_Library.css" />
 <link rel="stylesheet" href="../../HTMLStyling.css" />


 <script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe FrameMaker 2017" />
<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "3.3.4";
</script>
 <meta name="brsprev" value="PDFL_MasterBook/Plug-in_and_PDF_Library/Creating_a_sample_PDF_Library_application.htm">
 <meta name="brsnext" value="PDFL_MasterBook/Plug-in_and_PDF_Library/Migrating_a_PDF_Library_application_from_CodeWarrior_to_Xcode.htm">
 <meta name="topic-breadcrumbs" content="Developing Plug-ins and Applications > Creating Plug-in and PDF Library Applications" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>

   
	<!-- Body place holder starts here-->
    <div dir="ltr">
  <p dir="ltr" class="FM_3Head"><a name="XREF_17856_Upgrading_existing"></a>Upgrading existing plug-ins</p>
  <p dir="ltr" class="FM_Body">This section discusses how to upgrade an existing <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;plug-in to work with a newer version of <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>. </p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Upgrading_plug_ins"></a>Upgrading plug-ins (<span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9 to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> X)</p>
  <p dir="ltr" class="FM_Body">Starting Acrobat X, the number of top-level menu items has been reduced. The menu items available from Acrobat X onwards are: File, Edit, View, Window, and Help. If any of your previous plug-ins or scripts referred to a top-level menu item that no longer exists, you will need to update the plug-in or script. Refer the samples in the SDK to see how these changes can be made.</p>
  <p dir="ltr" class="FM_Body">In Acrobat X, the toolbar commands are available through the Tools pane on the right side of the display. Accordingly, methods and properties to customize the toolbar such as <span class="FM_Courier">app.addToolButton</span>, <span class="FM_Courier">app.hideToolBarButton</span>, and <span class="FM_Courier">app.removeToolButton</span>, now apply to the Tools pane area. For example, <span class="FM_Courier">app.addToolButton</span>&#160;adds a button to the Plugin Addon Tools panel in the Tools pane. </p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Upgrading_plug_ins1"></a>Upgrading plug-ins (<span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> 9)</p>
  <p dir="ltr" class="FM_Body">If you are porting an <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 plug-in to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9 and if that plug-in uses any of the extended APIs, you must rebuild your plug-in. If your plug-in selectively imports the header files extended APIs (rather than importing all header files), you must modify your plug-in to include the <span class="FM_CourierItalic">Name</span><span class="FM_Courier">HFTProc.h</span>&#160;files that correspond to those extended APIs.</p>
  <p dir="ltr" class="FM_Body">If you are porting an <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 plug-in to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9 and if that plug-in does not use the extended APIs, it should be binary compatible with <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0. You can test existing plug-ins for compatibility with <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0. If they do not work, they may need to be rebuilt with the new headers in the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0 SDK. Additionally, for your plug-in to use new functionality that is available with the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0 SDK, you must update the directory that stores header files with <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0 header files. (See <a href="Creating_a_sample_plug-in.htm#XREF_78469_Including_Acrobat"><span class="FM_HyperText">Including Acrobat&nbsp;SDK library files</span></a>.)</p>
  <p dir="ltr" class="FM_Body">For Mac OS, plug-ins developed for <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 are, in most cases, binary compatible with <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;9.0 and &#160;can be Carbon or Cocoa bundles. Plug-ins developed for Acrobat 7 or earlier do not load in <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 or 9. This incompatibility reflects differences in how plug-ins are built:</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>In <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;7, plug-ins are built as frameworks or bundles. </p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>In <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8, all plug-ins are built as Carbon bundles against the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 SDK headers. This approach ensures compatibility with Mac OS X system frameworks and libraries (rather than MSL), GCC 4.0, and Mach-O as supported by the Xcode development environment. </p>
  <p dir="ltr" class="FM_Body">And it reflects changes to the linker main entry point:</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>In <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;7 and earlier, the main entry point is <span class="FM_Courier">_main</span>.</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>In <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 and greater, the main entry point is <span class="FM_Courier">_AcroPluginMain</span>. </p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Upgrading_plug_ins_in"></a>Upgrading plug-ins in Windows (<span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;7 to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> 8)</p>
  <p dir="ltr" class="FM_Body">In general, <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;7 and earlier plug-ins require no code modification to make them compatible with <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 running on any Windows platform. The <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 SDK is supported on Visual Studio .NET 2003 and Visual Studio .NET 2005, so you must upgrade your plug-ins from previous versions of Visual Studio.</p>
  <p dir="ltr" class="FM_Body">Use Visual Studio .NET 2005 to automatically convert your project from previous versions of Visual Studio. Once converted, you must also make the following changes to your plug-in’s project:</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>Update the relative path of the header files.</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>Files that are located in the header files folders and are source files of the project need to have their paths updated. For each plug-in, you need to update the path for PIMain.c. To update these files, delete the source file from your project and then add it from the correct path.</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>Turn on the GS switch for each plug-in being upgraded. In Visual Studio 2005, click Project &gt; Properties &gt;&#160;C/C++ &gt; Code Generation and set the Buffer Security Check flag to Yes (/GS).</p>
  <p dir="ltr" class="FM_Bullet1"><span class="FM_Z_Bullet">•<span style="padding-left: 12pt;" class="FMAutoNumber_1"></span></span>Turn on incremental linking for each plug-in being upgraded. In Visual Studio 2005, click Project &gt; Properties &gt;&#160;Linker &gt; General, and set the Enable Incremental Linking flag to Yes.</p>
  <p dir="ltr" class="FM_Body">Once you have upgraded your project to Visual Studio .NET 2005, recompile your plug-in using the headers provided in the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 SDK. Place the resulting DLLs in the plug-ins folder, which is co-located with the Acrobat executable. </p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Upgrading_plug_in"></a><a name="XREF_59825_Upgrading_Plug_ins"></a>Upgrading plug-in projects on Mac OS (<span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;7 to <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> 8)</p>
  <p dir="ltr" class="FM_Body">For <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8, the supported Mac OS X development environment is now Xcode (formerly the supported environment was Metrowerks CodeWarrior). With this change comes a new set of headers, frameworks and libraries that may or may not be compatible with existing plug-in code and with existing CodeWarrior projects. <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 plug-ins must be built as Carbon bundles (not frameworks). </p>
  <p dir="ltr" class="FM_Body">Specifically, <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;8 SDK sample plug-ins have debug and release targets that are built against the MacOSX10.4u.sdk SDK. These are universal binaries and use Z-strings. <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;is a Cocoa application whose user interface uses NSViews, therefore, plug-ins must be built as Objective C++. Note that the linker main entry point has changed from <span class="FM_Courier">_main</span>&#160;to <span class="FM_Courier">_AcroPluginMain</span>&#160;and is defined in the new Info.plist. Creator remains CARO and type remains XTND. For a complete list of compatible plug-in build settings, see the MacSDKConfiguration Xcode configuration files and ProjectConfigurations files included in the <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span> 8 SDK.</p>
  <p dir="ltr" class="FM_4Head"><a name="TOC_Detecting_supported_APIs"></a>Detecting supported APIs</p>
  <p dir="ltr" class="FM_Body"><span data-name="AcrobatProfProd" data-val="Acrobat&nbsp;Pro" data-showval="TRUE" data-format="AcrobatProfProd">Acrobat&nbsp;Pro</span>&#160;and <span data-name="AcrobatProExtProd" data-val="Acrobat&nbsp;Pro&nbsp;Extended" data-showval="TRUE" data-format="AcrobatProExtProd">Acrobat&nbsp;Pro&nbsp;Extended</span>&#160;support the full set of APIs. For <span data-name="AcrobatStdProd" data-val="Acrobat&nbsp;Standard" data-showval="TRUE" data-format="AcrobatStdProd">Acrobat&nbsp;Standard</span>&#160;and <span data-name="AdobeReaderProd" data-val="Adobe&nbsp;Reader" data-showval="TRUE" data-format="AdobeReaderProd">Adobe&nbsp;Reader</span>, if you try to use an API that is not supported, nothing will happen. The same HFT version numbers are used across products, so all APIs are callable on all products, but some APIs simply do not work on certain products. </p>
  <p dir="ltr" class="FM_Body">Additionally, the Extended APIs provided by plug-ins do not work if an <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;product does not support the use of those APIs. The HFTs do not load, so you must check whether the HFT was successfully imported.</p>
  <p dir="ltr" class="FM_Body">It is possible to determine in your code whether the HFT you are expecting is in fact the one that you are importing, and whether it imported at all: simply check for a <span class="FM_Courier">NULL</span>&#160;return value. For example, a <span class="FM_Courier">NULL</span>&#160;will be returned in the following call if <span class="FM_Courier">AcroColorHFTNAME</span> with the specified version is not available:</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>gAcroColorHFT = ASExtensionMgrGetHFT(ASAtomFromString(AcroColorHFTNAME),</p>
  <p dir="ltr" class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PI_ACROCOLOR_VERSION);</p>
  <p dir="ltr" class="FM_Body">Plug-ins that use new HFTs introduced with the current <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;version do not run on earlier <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;versions. Whether or not an attempt to load these HFTs forces the plug-in to fail is controlled by flags in PIMain.c of the form<span class="FM_Courier"> PI_HFT_OPTIONAL</span>. By default, these flags are undefined, so if your plug-in attempts to load HFT and cannot, initialization fails. If you define <span class="FM_Courier">PI_HFT_OPTIONAL</span>&#160;with some value (preferably 1) and the load is not successful, initialization continues.</p>
  <p dir="ltr" class="FM_Body">Use the <span class="FM_Courier">ASGetConfiguration</span>&#160;method to determine the configuration on which the plug-in is running. Use conditional logic in your code so that it makes calls only to APIs that are supported on that particular configuration. In any case, your code should check for <span class="FM_Courier">NULL</span>&#160;HFTs so that it does not call APIs that are not supported on the current configuration.</p>
  <p dir="ltr" class="FM_Body">Under <span data-name="AdobeReaderProd" data-val="Adobe&nbsp;Reader" data-showval="TRUE" data-format="AdobeReaderProd">Adobe&nbsp;Reader</span>, when a rights-enabled PDF file is opened, a flag is set that allows a plug-in to use APIs that become enabled as a result of loading the rights-enabled PDF. Familiarize yourself with the features available on the different configurations of <span data-name="AcrobatProd" data-val="Acrobat" data-showval="TRUE" data-format="AcrobatProd">Acrobat</span>&#160;to ensure that you install plug-in menus and toolbars appropriately at initialization. Ensure that you make calls only to APIs supported on the platform detected.</p>
  </div>
<!-- Body place holder ends here-->

    <!-- Footer place holder starts here-->
    <div style="padding:0.4em 0;text-align:center;width:100%;position:relative;">
    	<hr/>
		<p style="font-size:0.7em;margin:0; font-family:adobe-clean, sans-serif"><a target="_blank" href="http://help.adobe.com/en_US/legalnotices/index.html">Legal Notices</a> | <a target="_blank" href="http://www.adobe.com/privacy.html">Online Privacy Policy</a></p>
	</div>
	<!-- Footer place holder ends here-->

</body>
</html>