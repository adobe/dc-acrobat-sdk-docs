gXMLBuffer="<?xml version=\"1.0\" encoding=\"UTF-8\"?><ck><di ky=\"798\" rd=\"Acro12_MasterBook/pdfmark_Logical/StPopAll.htm|StPopAll\" ct=\"   StPopAll    StPopAll  completely empties the implicit parent stack. The syntax for emptying the s ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Elements\"/><di ky=\"799\" rd=\"Acro12_MasterBook/pdfmark_Logical/StUpdate.htm|StUpdate\" ct=\"   StUpdate    StUpdate  updates the entries of the current structure element. The syntax is as foll ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Elements\"/><di ky=\"800\" rd=\"Acro12_MasterBook/pdfmark_Logical/Element_content.htm|Element content\" ct=\"   Element content    Elements can have two kinds of document content: marked content and references ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure\"/><di ky=\"801\" rd=\"Acro12_MasterBook/pdfmark_Logical/StBMC.htm|StBMC\" ct=\"   StBMC    StBMC  marks the beginning of a sequence of marked content objects. Its syntax is as fol ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Element content\"/><di ky=\"802\" rd=\"Acro12_MasterBook/pdfmark_Logical/StBDC.htm|StBDC\" ct=\"   StBDC    StBDC  marks the beginning of a sequence of page content objects with an associated prop ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Element content\"/><di ky=\"803\" rd=\"Acro12_MasterBook/pdfmark_Logical/EMC.htm|EMC\" ct=\"   EMC    EMC  signals the end of a marked sequence of page content operators. Its syntax is as foll ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Element content\"/><di ky=\"804\" rd=\"Acro12_MasterBook/pdfmark_Logical/StOBJ.htm|StOBJ\" ct=\"   StOBJ    StOBJ  adds an existing PDF object to the content of the top element of the implicit par ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Element content\"/><di ky=\"805\" rd=\"Acro12_MasterBook/pdfmark_Logical/Attribute_objects.htm|Attribute objects\" ct=\"   Attribute objects    Elements can have additional information, or attributes, associated with the ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure\"/><di ky=\"806\" rd=\"Acro12_MasterBook/pdfmark_Logical/StAttr.htm|StAttr\" ct=\"   StAttr    StAttr  creates a new attribute object and adds it to the element on top of the implici ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Attribute objects\"/><di ky=\"807\" rd=\"Acro12_MasterBook/pdfmark_Logical/Storage_and_retrieval_of_the_implicit_parent_stack.htm|Storage and retrieval of the implicit parent stack\" ct=\"   Storage and retrieval of the implicit parent stack    Structure suite operators specify parents i ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure\"/><di ky=\"808\" rd=\"Acro12_MasterBook/pdfmark_Logical/StStore.htm|StStore\" ct=\"   StStore    StStore  saves the current state of the implicit parent stack (without changing it). I ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Storage and retrieval of the implicit parent stack\"/><di ky=\"809\" rd=\"Acro12_MasterBook/pdfmark_Logical/StRetrieve.htm|StRetrieve\" ct=\"   StRetrieve    StRetrieve  restores the implicit parent stack from a saved state, whose name is sp ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure &gt; Storage and retrieval of the implicit parent stack\"/><di ky=\"810\" rd=\"Acro12_MasterBook/pdfmark_Logical/EPS_considerations.htm|EPS considerations\" ct=\"   EPS considerations    Encapsulated PostScript (EPS) is a form of PostScript used to embed graphic ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure\"/><di ky=\"811\" rd=\"Acro12_MasterBook/pdfmark_Logical/Tagged_PDF.htm|Tagged PDF\" ct=\"   Tagged PDF    PDF 1.4 introduced the concept of  tagged PDF.  Tagged PDF is a type of structured  ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Logical Structure\"/><di ky=\"812\" rd=\"Acro12_MasterBook/pdfmark_Examples/Examples.htm|Examples\" ct=\"   Examples    This section provides several examples illustrating various uses of the pdfmark opera ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference\"/><di ky=\"813\" rd=\"Acro12_MasterBook/pdfmark_Examples/Building_an_Output_Intents_array.htm|Building an Output Intents array\" ct=\"   Building an Output Intents array    The following Windows and Mac OS examples demonstrate how to  ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Examples\"/><di ky=\"814\" rd=\"Acro12_MasterBook/pdfmark_Examples/Named_object_examples.htm|Named object examples\" ct=\"   Named object examples    The following examples demonstrate how to work with named objects.       ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Examples\"/><di ky=\"815\" rd=\"Acro12_MasterBook/pdfmark_Examples/Forms_examples.htm|Forms examples\" ct=\"   Forms examples    The examples in this section show how to use the Forms pdfmark suite.           ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Examples\"/><di ky=\"816\" rd=\"Acro12_MasterBook/pdfmark_Examples/Structure_examples.htm|Structure examples\" ct=\"   Structure examples    This section provides examples of various uses of the structure pdfmark sui ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Examples\"/><di ky=\"817\" rd=\"Acro12_MasterBook/pdfmark_JDF/JDF_Features.htm|JDF Features\" ct=\"   JDF Features    The use of pdfmark in PostScript can include representations of Job Definition Fo ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference\"/><di ky=\"818\" rd=\"Acro12_MasterBook/pdfmark_JDF/Syntax.htm|Syntax\" ct=\"   Syntax        [     /Attribute  string         /Value  string         /Subtype /CreateAttribute   ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; JDF Features\"/><di ky=\"819\" rd=\"Acro12_MasterBook/pdfmark_JDF/Examples1.htm|Examples\" ct=\"   Examples    The following table presents examples of XPath expressions.    Examples of XPath expr ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; JDF Features\"/><di ky=\"820\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/Distilling_Optional_Content.htm|Distilling Optional Content\" ct=\"   Distilling Optional Content    The ProcSet entry in a content stream’s resource dictionary holds  ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference\"/><di ky=\"821\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/Initialization_and_termination_code.htm|Initialization and termination code\" ct=\"   Initialization and termination code    To use the optional content ProcSet, clients must insert t ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content\"/><di ky=\"822\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/Procedure_definitions.htm|Procedure definitions\" ct=\"   Procedure definitions    This section describes the optional content procedures and provides thei ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content\"/><di ky=\"823\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/AddASEvent.htm|AddASEvent\" ct=\"   AddASEvent    Adds an auto state event to the PDF’s default configuration. See the  PDF Reference ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"824\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/BeginOC.htm|BeginOC\" ct=\"   BeginOC    The  BeginOC  procedure is used to begin a span of content that belongs to the optiona ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"825\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/EndOC.htm|EndOC\" ct=\"   EndOC    The  EndOC  procedure is used to end a span of optional content. It is used to close a s ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"826\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/GetOCGPdfmarkTag.htm|GetOCGPdfmarkTag\" ct=\"   GetOCGPdfmarkTag    The  GetOCGPdfmarkTag  returns the object that the ProcSet implementation use ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"827\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/OCEndPage.htm|OCEndPage\" ct=\"   OCEndPage    The  OCEndPage  is called at the end of the page in a multi-page PostScript file to  ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"828\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/SetOCGInitState.htm|SetOCGInitState\" ct=\"   SetOCGInitState    The  SetOCGInitState  procedure sets the initial state of an optional content  ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"829\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/SetOCGIntent.htm|SetOCGIntent\" ct=\"   SetOCGIntent    The  SetOCGIntent  procedure sets the  Intent  key in  ocgname  to  intent .    S ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"830\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/SetOCGUsage.htm|SetOCGUsage\" ct=\"   SetOCGUsage    The  SetOCGUsage  procedure sets the  Usage  key in  ocgname  to the  dict  suppli ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/><di ky=\"831\" rd=\"Acro12_MasterBook/pdfmark_OC_Interface/SimpleOC.htm|SimpleOC\" ct=\"   SimpleOC    The  SimpleOC  procedure ends any current optional content span, and begins a new one ...\" bc=\"PDF Creation APIs and Specifications &gt; pdfmark Reference &gt; Distilling Optional Content &gt; Procedure definitions\"/></ck>";