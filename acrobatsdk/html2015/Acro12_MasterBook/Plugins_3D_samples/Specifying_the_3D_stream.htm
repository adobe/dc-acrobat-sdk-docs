<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Specifying the 3D stream</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_3D_samples.fm" />
 <link rel="stylesheet" href="Plugins_3D_samples.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.18.1.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_3D_samples/Creating_the_3D_annotation_dictionary_entries.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_3D_samples/Setting_the_default_view.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Creating 3D Annotations > Adding 3D data to an annotation" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h3><a name="XREF_14693_Specifying_the_3D"></a>Specifying the 3D stream</h3>
  <p class="BodyLevel1">The <span class="FM_Courier">3DD</span>&#160;entry of the annotation dictionary specifies a <span class="FM_Italic">stream</span>&#160;containing the PRC or U3D data. Streams are PDF objects that can be thought of as having two parts, the stream data and an associated dictionary:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">Stream data is the PRC or U3D data that represents the 3D content.</p>
</li>
   <li>
   <p class="FM_Bullet1">The associated dictionary (sometimes called the <span class="FM_Italic">attributes dictionary</span>) contains entries that specify information about the stream. Some entries are common to all stream dictionaries (see Table 3.4 in the <uservariable x-value="PDF Reference" x-showvalue="TRUE" name="Ref_DocPDF" x-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></uservariable><span class="FM_Italic"></span>). They include:</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_CourierBold">Length</span> (required): The length of the stream data</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_CourierBold">Filter</span>&#160;(optional): A compression filter that is applied to the data to reduce its size (there are also filters that do not compress data)</p>
</li>
  </ul>
  <p class="FM_Indent1">Other entries are unique to 3D streams (see Table 9.35 in the <uservariable x-value="PDF Reference" x-showvalue="TRUE" name="Ref_DocPDF" x-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></uservariable><span class="FM_Italic"></span>). They include:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><span class="FM_CourierBold">Type</span>&#160;(optional): Must be <span class="FM_Courier">3D</span> if present.</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_CourierBold">Subtype</span>&#160;(required): For PRC data, set this value to <span class="FM_Courier">PRC</span>; for U3D data, set this value to <span class="FM_Courier">U3D</span>.</p>
</li>
   <li>
   <p class="FM_Bullet2"><span class="FM_CourierBold">OnInstantiate</span>&#160;(optional): A JavaScript script to be executed when the 3D stream is read. (See <a href="#XREF_12859_Specifying">Specifying JavaScript code</a>.)</p>
</li>
  </ul>
  <h4><a name="TOC_Creating_the_stream"></a>Creating the stream object</h4>
  <p class="BodyLevel1">You must create a Cos stream that is based on the file containing the PRC or U3D data (this file was created with 3D authoring software) in order to create a 3D annotation. A data stream can be a buffer in memory, a file, or an arbitrary user-written procedure. A stream is represented by an <span class="FM_Courier">ASStm</span>&#160;object, which must be converted into a Cos stream.</p>
  <p class="BodyLevel1">To create a Cos stream that is based on the file that contains the PRC or U3D data, perform the following steps:</p>
  <p class="FM_StepReset"><a name="IX_GetMacPath_method"></a><a name="IX_ASPathFromPlatformPath"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>1.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an <span class="FM_Courier">ASPathName</span>&#160;object that represents the file that contains the PRC or U3D data by invoking the <span class="FM_Courier">ASPathFromPlatformPath</span>&#160;method and passing a character pointer that specifies the location of the file that contains the PRC or U3D data. If you are working on the Mac OS platform, invoke the <span class="FM_Courier">GetMacPath</span> method and pass a character pointer that specifies the file location.</p>
  <p class="FM_Step"><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>2.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Declare an <span class="FM_Courier">ASFile</span>&#160;object. </p>
  <p class="FM_Step"><a name="IX_ASFileSysOpenFile_method_2"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>3.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Populate the <span class="FM_Courier">ASFile</span>&#160;object with the PRC or U3D data by invoking the <span class="FM_Courier">ASFileSysOpenFile</span>&#160;method and passing the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2"><a name="IX_ASGetDefaultFileSys_4"></a>An <span class="FM_Courier">ASFileSys</span>&#160;object that represents the file system in which the PDF file is located. Invoke the <span class="FM_Courier">ASGetDefaultFileSys</span> method to get the default file system.</p>
</li>
   <li>
   <p class="FM_Bullet2">An <span class="FM_Courier">ASPathName</span>&#160;object that represents the path in which the file that contains the PRC or U3D data is located (pass the <span class="FM_Courier">ASPathName</span> object created in step 1).</p>
</li>
   <li>
   <p class="FM_Bullet2">An <span class="FM_Courier">ASFileMode</span>&#160;object that represents the mode in which to open the file. For example, specify <span class="FM_Courier">ASFILE_READ</span> to open the file in read mode.</p>
</li>
   <li>
   <p class="FM_Bullet2">The address of an <span class="FM_Courier">ASFile</span>&#160;object. The <span class="FM_Courier">ASFileSysOpenFile</span>&#160;method populates this argument using the file that was opened (file information is obtained from the <span class="FM_Courier">ASPathName</span> object).</p>
</li>
  </ul>
  <p class="FM_Step"><a name="IX_ASFileStmRdOpen_method"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>4.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Create an <span class="FM_Courier">ASStm</span>&#160;object by invoking the <span class="FM_Courier">ASFileStmRdOpen</span>&#160;method and passing the following arguments:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">The <span class="FM_Courier">ASFile</span>&#160;object with the file that contains the PRC or U3D data.</p>
</li>
   <li>
   <p class="FM_Bullet2">Length of data buffer, in bytes. If you specify <span class="FM_Courier">0</span>, then the default buffer size (currently 4kB) is used.</p>
</li>
  </ul>
  <p class="FM_Step"><a name="IX_CosNewStream_method_1"></a><span style="padding-left: 66pt;" class="FMAutoNumber_1"></span>5.<span style="padding-left: 2pt;" class="FMAutoNumber_2"></span>Invoke the <span class="FM_Courier">CosNewStream</span>&#160;method to create a Cos stream containing the data that is located within the <span class="FM_Courier">ASStm</span>&#160;object. This Cos stream will become the value of the 3DD entry of the 3D annotation. Pass the following arguments to this method:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet2">A <span class="FM_Courier">CosDoc</span> object that specifies the PDF document in which the Cos stream is inserted.</p>
</li>
   <li>
   <p class="FM_Bullet2">An <span class="FM_Courier">ASBool</span>&#160;object that specifies whether the Cos stream is an indirect object. Because all streams are indirect objects, this argument must be set to <span class="FM_Courier">true</span>. </p>
</li>
   <li>
   <p class="FM_Bullet2">An <span class="FM_Courier">ASStm</span>&#160;object that contains the stream data (pass the <span class="FM_Courier">ASStm</span>&#160;object created in step 4). </p>
</li>
   <li>
   <p class="FM_Bullet2">A <span class="FM_Courier">CosStreamStartAndCode</span>&#160;object that specifies the byte offset from which data reading starts. You can pass <span class="FM_Courier">0</span>&#160;to ensure that data reading starts at the beginning of the stream. </p>
</li>
   <li>
   <p class="FM_Bullet2">An <span class="FM_Courier">ASBool</span>&#160;object that specifies whether the data is encoded using filters specified in the stream dictionary before it is written to the Cos stream.</p>
</li>
   <li>
   <p class="FM_Bullet2">A <span class="FM_Courier">CosObj</span>&#160;object that represents the stream dictionary. You can invoke the <span class="FM_Courier">CosNewNull</span> method.</p>
</li>
   <li>
   <p class="FM_Bullet2">A <span class="FM_Courier">CosObj</span>&#160;object that represents the parameters that are used by the encoding filter if the source data is encoded before it is written to the file. If encoding parameters are not required, this value is ignored. For information about encoding filters, see the <uservariable x-value="PDF Reference" x-showvalue="TRUE" name="Ref_DocPDF" x-format="Ref_DocPDF"><span class="FM_Italic">PDF Reference</span></uservariable><span class="FM_Italic"></span>. </p>
</li>
   <li>
   <p class="FM_Bullet2">A <span class="FM_Courier">CosByteMax</span>&#160;object that specifies the amount of data read from the source. If this value is <span class="FM_Courier">-1</span>, data is read from the source until it reaches the end of the stream.</p>
</li>
  </ul>
  <p class="BodyLevel1">The <span class="FM_Courier">CosNewStream</span>&#160;method returns a <span class="FM_Courier">CosObj</span>&#160;object that represents the Cos stream. The following code example creates a Cos stream. </p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create an ASPathName that specifies the location of the.U3D file</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//u3dFileName is a character pointer that specifies the path to this file</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASPathName u3DPathName = &#160;ASPathFromPlatformPath((void*) u3dFileName);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create an ASFile object and populate it</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFile asFile = NULL;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASInt32 err = ASFileSysOpenFile(ASGetDefaultFileSys(), u3DPathName, <span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFILE_READ, &amp;asFile);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFileSysReleasePath (ASGetDefaultFileSys(), u3DPathName);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (asFile == NULL)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Error opening 3D data file.&quot;);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Read data stream from the file</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASStm fileStm = ASFileStmRdOpen(asFile, 0);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if (fileStm == NULL)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>AVAlertNote(&quot;Empty 3D data stream.&quot;);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a new Cos stream and set it under 3DD key in the annot dictionary</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObj stm3D = CosNewStream(cosDoc, true, fileStm, 0, false, CosNewNull(),</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewNull(), -1);</p>
  <h4><a name="TOC_Adding_the_Cos_stream_to"></a>Adding the Cos stream to the annotation dictionary</h4>
  <p class="BodyLevel1">After you create a a <span class="FM_Courier">CosObj</span>&#160;object that represents the Cos stream, invoke the <span class="FM_Courier">CosDictPutKeyString</span>&#160;method to add the Cos stream as the value of the <span class="FM_Courier">3DD</span> entry of the annotation dictionary:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(cosAnnot,&nbsp;&nbsp;&nbsp;// The annotation dictionary</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;3DD&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The key</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>stm3D);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// The <span class="FM_Courier">CosObj object used as the </span>value</p>
  <h4><a name="TOC_Creating_the_attributes"></a><a name="XREF_26840_Creating_the"></a>Creating the attributes dictionary</h4>
  <p class="BodyLevel1">Complete the entries in the 3D stream dictionary. The <span class="FM_Courier">CosStreamDict</span>&#160;method obtains the Cos dictionary associated with the stream:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObj attrObj = CosStreamDict(stm3D);</p>
  <p class="BodyLevel1">Next, entries can be added to the dictionary. The <span class="FM_Courier">Type</span>&#160;and <span class="FM_Courier">Subtype</span>&#160;entries both take name objects as values. Therefore, strings specified in the code must be explicitly converted to names:</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Set the stream's dictionary</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(attrObj, &quot;Subtype&quot;, CosNewName(cosDoc, false,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASAtomFromString(&quot;U3D&quot;)));</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(attrObj, &quot;Type&quot;, CosNewNameFromString(cosDoc, false,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>&quot;3D&quot;));</p>
  <h4><a name="TOC_Specifying_JavaScript"></a><a name="XREF_12859_Specifying"></a>Specifying JavaScript code</h4>
  <p class="BodyLevel1">You can create JavaScript that manipulates the 3D annotation. JavaScript is optional and if you do not specify it, then the 3D annotation is still inserted into the PDF document; however, it remains a static graphic. For information about creating JavaScript that manipulates 3D annotations, see the <uservariable x-value="JavaScript for Acrobat 3D Annotations API Reference" x-showvalue="TRUE" name="Ref_Java3DAPI" x-format="Ref_Java3DAPI"><span class="FM_Italic">JavaScript for Acrobat 3D Annotations API Reference</span></uservariable><span class="FM_Italic"></span>.</p>
  <p class="BodyLevel1">The following code example creates an <span class="FM_Courier">ASFile</span>&#160;object and populates it with the JavaScript file. The <span class="FM_Courier">JsFileName</span> variable is a character pointer that specifies the location of the JavaScript file.</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create a char pointer that specifies the location of the JavaScript file</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>char*JsFileName = &quot;C:\\3DJavaScript.js&quot;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Declare an ASFile object that will reference the JavaScript file</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFile jsFile = NULL;</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Create an ASPathName object based on the JavaScript file</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASPathName JsPathName = &#160;ASPathFromPlatformPath((void*) JsFileName);</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Populate the ASFile object </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>if(JsPathName)</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASInt32 err1 = ASFileSysOpenFile(ASGetDefaultFileSys(), JsPathName,</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFILE_READ, &amp;jsFile);</p>
  <p class="BodyLevel1">Next, the data from the file is read into a stream:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASStm JsFileStm = ASFileStmRdOpen(jsFile, 0);</p>
  <p class="BodyLevel1">In the following code, an entry is added to the stream dictionary in the process of creating the stream, rather than afterwards as in the previous code. First, the <span class="FM_Courier">CosNewDict</span>&#160;method is used to create a new dictionary: </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosObj dictJsStm = CosNewDict(cosDoc, false, 1);</p>
  <p class="BodyLevel1">This method requires three parameters:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">The document in which the dictionary is used.</p>
</li>
   <li>
   <p class="FM_Bullet1">A Boolean value that specifies whether the dictionary should be an indirect object. All stream dictionaries must be direct; hence the value of this parameter is <span class="FM_Courier">false</span>. </p>
</li>
   <li>
   <p class="FM_Bullet1">A hint for the number of entries in the dictionary (however, dictionaries grow dynamically as needed).</p>
</li>
  </ul>
  <p class="BodyLevel1">Next, the value of the <span class="FM_Courier">Filter</span>&#160;entry is set to <span class="FM_Courier">FlateDecode</span>&#160;using the <span class="FM_Courier">CosDictPutKeyString</span>&#160;method. This means that the stream will be compressed using Flate (ZIP) compression.</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(dictJsStm, &quot;Filter&quot;, </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewNameFromString(cosDoc, false, &quot;FlateDecode&quot;));</p>
  <p class="BodyLevel1">Next, the Cos stream is created, using the stream data and attributes dictionary already created: </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>stm3Djscode = CosNewStream(cosDoc, true, </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>JsFileStm,&nbsp;&nbsp;&nbsp;&nbsp;//The stream</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>0, true, </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>dictJsStm,&nbsp;&nbsp;&nbsp;// The stream dictionary</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosNewNull(), -1);</p>
  <p class="BodyLevel1">Set it as the value of the <span class="FM_Courier">OnInstantiate</span>&#160;entry of the 3D stream dictionary. The following code example specifies a JavaScript script as the value of the <span class="FM_Courier">OnInstantiate</span>&#160;entry of the 3D stream dictionary. </p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>CosDictPutKeyString(attrObj, &quot;OnInstantiate&quot;, stm3Djscode);</p>
  <p class="BodyLevel1">Then some cleanup is done:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASFileSysReleasePath (ASGetDefaultFileSys(), JsPathName);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>ASStmClose(JsFileStm);</p>
  </div>
</body>
</html>