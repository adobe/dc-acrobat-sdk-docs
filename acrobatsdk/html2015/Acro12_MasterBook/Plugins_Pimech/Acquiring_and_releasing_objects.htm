<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>Acquiring and releasing objects</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Pimech.fm" />
 <link rel="stylesheet" href="Plugins_Pimech.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.2.4_1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Pimech/User_interface_guidelines.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Pimech/Debugging_plug-ins.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Understanding Plug-ins" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="IX_objects"></a><a name="IX_releasing_objects"></a><a name="XREF_68646_Acquiring_and"></a>Acquiring and releasing objects</h2>
  <p class="BodyLevel1">Ensure that calls to <span class="FM_Courier">Acquire</span>&#160;and <span class="FM_Courier">Release</span>&#160;methods match. Objects obtained by <span class="FM_Courier">Acquire</span>&#160;methods must ultimately be released. If they are not released, <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;raises exceptions when a non-zero reference count is discovered. An exception can occur when <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;quits or when a document is closed.</p>
  <p class="BodyLevel1">When allocating memory to objects, follow these guidelines:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">Use <span class="FM_Courier">ASmalloc</span>&#160;and <span class="FM_Courier">ASfree</span>&#160;instead of <span class="FM_Courier">malloc</span>&#160;and <span class="FM_Courier">free</span>, or you risk memory leaks.</p>
</li>
   <li>
   <p class="FM_Bullet1">Ensure that <span class="FM_Courier">ASmalloc</span>&#160;and <span class="FM_Courier">ASfree</span> pairs match or you will create memory leaks.</p>
</li>
   <li>
   <p class="FM_Bullet1">Use <span class="FM_Courier">ASmalloc</span>&#160;to allocate memory for methods that state that <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;or <uservariable x-value="Acrobat&nbsp;Reader" x-showvalue="TRUE" name="AdobeReaderProd" x-format="AdobeReaderProd">Acrobat&nbsp;Reader</uservariable>&#160;free the memory for you.</p>
</li>
   <li>
   <p class="FM_Bullet1">It is best to have your C++ classes derive from a base class which overrides <span class="FM_Courier">new</span>, such as the class <span class="FM_Courier">CSafeAlloc</span>, found in SafeAlloc.h.</p>
</li>
  </ul>
  <p class="BodyLevel1">If you use an <span class="FM_Courier">Acquire</span>&#160;method to obtain an object, you must subsequently use a <span class="FM_Courier">Release</span>&#160;method to correctly update the reference counter, as shown in the following example:</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDDoc doc;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDPage page;</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Acquire a page from a PDF document</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>doc = PDDocOpenFromASFile(&quot;myPDF.pdf&quot;, null, true);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>page = PDDocAcquirePage(doc, 42);</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span></p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Perform a task using the page</p>
  <p class="FM_CodeReference">&nbsp;</p>
  <p class="FM_CodeComment"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>//Release the page</p>
  <p class="FM_CodeReference"><span style="font-family:'Times New Roman'; font-size:7.0pt">&nbsp;&nbsp;&nbsp;</span>PDPageRelease (page);</p>
  <p class="BodyLevel1">Notice that the <span class="FM_Courier">PDPage</span>&#160;object is acquired by invoking the <span class="FM_Courier">PDDocAcquirePage</span>&#160;method and is released by invoking the <span class="FM_Courier">PDPageRelease</span>&#160;method. For information about working with pages, see <a href="../Plugins_Pages/Working_with_Page_Views_and_Contents.htm#XREF_48762_Working_with_Page">Working with Page Views and Contents</a>.</p>
  </div>
</body>
</html>