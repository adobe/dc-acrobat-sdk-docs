<!DOCTYPE HTML>
<html>
<head>

 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
 <title>About security handlers</title>

 <meta name="generator" content="Adobe FrameMaker 2015" />
 <meta name="Originator" content="ImportMif" />
 <meta name="OriginalFile" content="C:\Users\Perforce\Work\Groups\SDK\main\Documents\Common\docs_fm\PluginAppsDeveloperGuide\Plugins_Security.fm" />
 <link rel="stylesheet" href="Plugins_Security.css" type="text/css" />


<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../../template/scripts/constants.js"></script>
<script type="text/javascript" src="../../template/scripts/utils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../../template/scripts/settings.js"></script>
<script type="text/javascript" src="../../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "../..";
gCommonRootRelPath = "../..";
gTopicId = "2.1.14.1";
</script>
 <meta name="brsprev" value="Acro12_MasterBook/Plugins_Security/About_document_security.htm">
 <meta name="brsnext" value="Acro12_MasterBook/Plugins_Security/Adding_a_security_handler.htm">
 <meta name="topic-breadcrumbs" content="Plug-ins and Applications > Overview > Working with Document Security" />
</head>

<body dir="ltr">
<script type="text/javascript" src="../../ehlpdhtm.js"></script>
<div dir="ltr">
  <h2><a name="XREF_55517_About_security"></a>About security handlers</h2>
  <p class="BodyLevel1">Application logic that performs user authorization and sets permissions is known as a security handler. <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;has these built-in security handlers: password, Adobe LiveCycle Rights Management ES, and public key security handler. (See the <span class="FM_HyperText"><a href="http://help.adobe.com/en_US/acrobat/acrobat_dc_sdk/2015/HTMLHelp/Acro12_MasterBook/API_References_SectionPage/API_References/Acrobat_API_Reference/index.html">Acrobat and PDF Library API Reference</a></span>.)</p>
  <p class="BodyLevel1">A security handler supports two passwords:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">A user password that enables a user to open and read a protected document with whatever permissions the owner chose</p>
</li>
   <li>
   <p class="FM_Bullet1">An owner password that allows a document’s owner to also change the permissions granted to users</p>
</li>
  </ul>
  <p class="BodyLevel1">You can use the <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;core API’s built-in security handler or write your own security handlers to perform user authorization (for example, by the presence of a specific hardware key or file, or by reading a magnetic card reader). </p>
  <p class="BodyLevel1">Security handlers are responsible for performing the following tasks:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">Setting permissions on a file</p>
</li>
   <li>
   <p class="FM_Bullet1">Authorizing access to a file</p>
</li>
   <li>
   <p class="FM_Bullet1">Setting up a file’s encryption and decryption keys</p>
</li>
   <li>
   <p class="FM_Bullet1">Maintaining the encryption dictionary of the PDF file containing the document</p>
</li>
  </ul>
  <p class="BodyLevel1">Security handlers are used in the following situations:</p>
  <ul type="disc" style="Direction:Direction:ltr;
;
">
   <li>
   <p class="FM_Bullet1">A document is opened. The security handler determines whether a user is authorized to open the file and sets up the decryption key that is used to decrypt the PDF file.</p>
</li>
   <li>
   <p class="FM_Bullet1">A document is saved. The security handler sets up the encryption key and writes extra security-related information into the PDF file’s encryption dictionary. </p>
</li>
   <li>
   <p class="FM_Bullet1">A user attempts to change a document’s security settings. The security handler determines whether the user is permitted to perform this task.</p>
</li>
  </ul>
  <p class="BodyLevel1">A document may have zero, one, or two security handlers associated with it. A document has zero security handlers if no security is used on the file. When security is applied to a file, or the user selects a different security handler for a secured file, the newly-chosen security handler is not put in place immediately. Instead this new security handler is simply associated with the document; it is a pending security handler until the document is saved.</p>
  <p class="BodyLevel1">The new security handler is not put in place immediately because it is responsible for decrypting the contents of the document’s encryption dictionary, and that dictionary is re-encrypted in the correct format for the new security handler only when the document is saved. As a result, a document may have both a current and a new security handler associated with it.</p>
  <p class="BodyLevel1">A security handler has two names: one that is placed in each PDF file that is saved by the handler (for example, ADBE_Crypt), and another name that <uservariable x-value="Acrobat" x-showvalue="TRUE" name="AcrobatProd" x-format="AcrobatProd">Acrobat</uservariable>&#160;can use in any user interface items in which the security handler appears (for example, Acrobat Developer Technologies default encryption). This is similar to the two-name scheme used for menu items: a language-independent name that the application logic can refer to regardless of the user interface language, and another name that appears in the user interface. (See <a href="../Plugins_Menu/Adding_menu_commands_to_menus.htm#XREF_63428_Adding_menu">Adding menu commands to menus</a>.)</p>
  </div>
</body>
</html>